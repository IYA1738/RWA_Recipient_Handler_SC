{
    "MockERC20_00000000ce4604a0000000000000000000000001": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000001",
                "allMethods": [
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "allowance",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "dd62ed3e",
                        "sourceBytes": {
                            "begin": 268,
                            "size": 64
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "approve",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "spender",
                            "v"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "095ea7b3",
                        "sourceBytes": {
                            "begin": 530,
                            "size": 133
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "balanceOf",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "70a08231",
                        "sourceBytes": {
                            "begin": 218,
                            "size": 44
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "decimals",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint8",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "313ce567",
                        "sourceBytes": {
                            "begin": 155,
                            "size": 26
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "name",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "06fdde03",
                        "sourceBytes": {
                            "begin": 83,
                            "size": 32
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setAllowance",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "owner",
                            "spender",
                            "v"
                        ],
                        "returns": [],
                        "sighash": "da46098c",
                        "sourceBytes": {
                            "begin": 416,
                            "size": 108
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setBalance",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "a",
                            "v"
                        ],
                        "returns": [],
                        "sighash": "e30443bc",
                        "sourceBytes": {
                            "begin": 339,
                            "size": 72
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "symbol",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "95d89b41",
                        "sourceBytes": {
                            "begin": 121,
                            "size": 28
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transfer",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "to",
                            "v"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a9059cbb",
                        "sourceBytes": {
                            "begin": 1131,
                            "size": 252
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferFrom",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "from",
                            "to",
                            "v"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "23b872dd",
                        "sourceBytes": {
                            "begin": 669,
                            "size": 456
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "bytecode": "60806040526004361015610013575b610792565b61001d5f356100bc565b806306fdde03146100b7578063095ea7b3146100b257806323b872dd146100ad578063313ce567146100a857806370a08231146100a357806395d89b411461009e578063a9059cbb14610099578063da46098c14610094578063dd62ed3e1461008f5763e30443bc0361000e5761075e565b610728565b610690565b610655565b610620565b6105dc565b6104d8565b61043b565b6103cb565b6102e2565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f9103126100da57565b6100cc565b634e487b7160e01b5f525f60045260245ffd5b634e487b7160e01b5f52602260045260245ffd5b9060016002830492168015610126575b602083101461012157565b6100f2565b91607f1691610116565b60209181520190565b5f5260205f2090565b905f929180549061015c61015583610106565b8094610130565b916001811690815f146101b35750600114610177575b505050565b6101849192939450610139565b915f925b81841061019b57505001905f8080610172565b60018160209295939554848601520191019290610188565b92949550505060ff19168252151560200201905f8080610172565b906101d891610142565b90565b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b90610203906101db565b810190811067ffffffffffffffff82111761021d57604052565b6101e5565b9061024261023b926102326100c2565b938480926101ce565b03836101f9565b565b905f106102575761025490610222565b90565b6100df565b6102665f80610244565b90565b5190565b60209181520190565b5f5b838110610288575050905f910152565b806020918301518185015201610278565b6102b86102c16020936102c6936102af81610269565b9384809361026d565b95869101610276565b6101db565b0190565b6102df9160208201915f818403910152610299565b90565b34610312576102f23660046100d0565b61030e6102fd61025c565b6103056100c2565b918291826102ca565b0390f35b6100c8565b60018060a01b031690565b61032b90610317565b90565b61033781610322565b0361033e57565b5f80fd5b9050359061034f8261032e565b565b90565b61035d81610351565b0361036457565b5f80fd5b9050359061037582610354565b565b919060408382031261039f578061039361039c925f8601610342565b93602001610368565b90565b6100cc565b151590565b6103b2906103a4565b9052565b91906103c9905f602085019401906103a9565b565b346103fc576103f86103e76103e1366004610377565b906107f4565b6103ef6100c2565b918291826103b6565b0390f35b6100c8565b90916060828403126104365761043361041c845f8501610342565b9361042a8160208601610342565b93604001610368565b90565b6100cc565b3461046c57610468610457610451366004610401565b91610a55565b61045f6100c2565b918291826103b6565b0390f35b6100c8565b1c90565b60ff1690565b61048b9060086104909302610471565b610475565b90565b9061049e915461047b565b90565b6104ad60025f90610493565b90565b60ff1690565b6104bf906104b0565b9052565b91906104d6905f602085019401906104b6565b565b34610508576104e83660046100d0565b6105046104f36104a1565b6104fb6100c2565b918291826104c3565b0390f35b6100c8565b9060208282031261052657610523915f01610342565b90565b6100cc565b90565b61054261053d61054792610317565b61052b565b610317565b90565b6105539061052e565b90565b61055f9061054a565b90565b9061056c90610556565b5f5260205260405f2090565b90565b61058b9060086105909302610471565b610578565b90565b9061059e915461057b565b90565b6105b7906105b26003915f92610562565b610593565b90565b6105c390610351565b9052565b91906105da905f602085019401906105ba565b565b3461060c576106086105f76105f236600461050d565b6105a1565b6105ff6100c2565b918291826105c7565b0390f35b6100c8565b61061d60015f90610244565b90565b34610650576106303660046100d0565b61064c61063b610611565b6106436100c2565b918291826102ca565b0390f35b6100c8565b346106865761068261067161066b366004610377565b90610baf565b6106796100c2565b918291826103b6565b0390f35b6100c8565b5f0190565b346106bf576106a96106a3366004610401565b91610c61565b6106b16100c2565b806106bb8161068b565b0390f35b6100c8565b91906040838203126106ec57806106e06106e9925f8601610342565b93602001610342565b90565b6100cc565b906106fb90610556565b5f5260205260405f2090565b6107206107259261071b6004935f946106f1565b610562565b610593565b90565b346107595761075561074461073e3660046106c4565b90610707565b61074c6100c2565b918291826105c7565b0390f35b6100c8565b3461078d57610777610771366004610377565b90610c81565b61077f6100c2565b806107898161068b565b0390f35b6100c8565b5f80fd5b5f90565b5f1b90565b906107ab5f199161079a565b9181191691161790565b6107c96107c46107ce92610351565b61052b565b610351565b90565b90565b906107e96107e46107f0926107b5565b6107d1565b825461079f565b9055565b61081661081b92610803610796565b5091610811600433906106f1565b610562565b6107d4565b600190565b90565b61083761083261083c92610820565b61052b565b610317565b90565b61084890610823565b90565b5f7f746f3d3000000000000000000000000000000000000000000000000000000000910152565b61087f600460209261026d565b6108888161084b565b0190565b6108a19060208101905f818303910152610872565b90565b156108ab57565b6108b36100c2565b62461bcd60e51b8152806108c96004820161088c565b0390fd5b5f1c90565b6108de6108e3916108cd565b610578565b90565b6108f090546108d2565b90565b5f7f62616c0000000000000000000000000000000000000000000000000000000000910152565b610927600360209261026d565b610930816108f3565b0190565b6109499060208101905f81830391015261091a565b90565b1561095357565b61095b6100c2565b62461bcd60e51b81528061097160048201610934565b0390fd5b5f7f616c6c6f77000000000000000000000000000000000000000000000000000000910152565b6109a9600560209261026d565b6109b281610975565b0190565b6109cb9060208101905f81830391015261099c565b90565b156109d557565b6109dd6100c2565b62461bcd60e51b8152806109f3600482016109b6565b0390fd5b634e487b7160e01b5f52601160045260245ffd5b610a1a610a2091939293610351565b92610351565b8203918211610a2b57565b6109f7565b610a3f610a4591939293610351565b92610351565b8201809211610a5057565b6109f7565b610b49610b5e93610b41610b5893610a6b610796565b50610a9186610a8a610a84610a7f5f61083f565b610322565b91610322565b14156108a4565b610ac1610aa8610aa360038490610562565b6108e6565b610aba610ab486610351565b91610351565b101561094c565b610adf610ada610ad3600484906106f1565b3390610562565b6108e6565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000015280610b16610b105f19610351565b91610351565b03610b63575b50610b3b610b2c84926003610562565b91610b36836108e6565b610a0b565b906107d4565b926003610562565b91610b53836108e6565b610a30565b906107d4565b600190565b610b8e81610b87610ba993610b80610b7a89610351565b91610351565b10156109ce565b8590610a0b565b610ba4610b9d600485906106f1565b3390610562565b6107d4565b5f610b1c565b610c56610c47610c5c93610bc1610796565b50610be784610be0610bda610bd55f61083f565b610322565b91610322565b14156108a4565b610c17610bfe610bf960033390610562565b6108e6565b610c10610c0a84610351565b91610351565b101561094c565b610c3f81610c39610c2a60033390610562565b91610c34836108e6565b610a0b565b906107d4565b926003610562565b91610c51836108e6565b610a30565b906107d4565b600190565b90610c7a90610c75610c7f949360046106f1565b610562565b6107d4565b565b610c90610c9592916003610562565b6107d4565b56fea2646970667358221220d02207fad6efb956e088b4876ef2028bed9e93c94276c09ebd7dd826bbc4825864736f6c63430008160033",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": false,
                    "optimizerRuns": null,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.22",
                "constructorBytecode": "",
                "constructorSrcmap": "58:1432:0:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::o;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::o;:::-;;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;104:11;;;:::i;:::-;144:5;;;:::i;:::-;180:1;;;;:::i;:::-;58:1432::o",
                "extensionContracts": [],
                "file": "certora/MockERC20.sol",
                "immutables": [],
                "internalFunctionHarnesses": {},
                "internalFunctionStarts": [
                    1025,
                    2571,
                    1553,
                    2080,
                    1568,
                    546,
                    2083,
                    2608,
                    1083,
                    2111,
                    580,
                    2123,
                    1621,
                    2645,
                    604,
                    3169,
                    617,
                    621,
                    1137,
                    2162,
                    1141,
                    630,
                    1147,
                    3201,
                    1675,
                    2188,
                    1680,
                    1171,
                    665,
                    1185,
                    2212,
                    1200,
                    1206,
                    188,
                    194,
                    1219,
                    1732,
                    200,
                    714,
                    204,
                    2253,
                    208,
                    2258,
                    1240,
                    223,
                    738,
                    2278,
                    1777,
                    242,
                    2291,
                    262,
                    1799,
                    1293,
                    791,
                    2330,
                    802,
                    1832,
                    1323,
                    1326,
                    814,
                    304,
                    2356,
                    313,
                    834,
                    322,
                    1354,
                    2380,
                    849,
                    852,
                    1366,
                    1886,
                    1378,
                    872,
                    2421,
                    887,
                    1400,
                    1403,
                    1938,
                    1427,
                    1942,
                    1946,
                    2460,
                    1951,
                    1441,
                    932,
                    937,
                    2991,
                    1973,
                    950,
                    2486,
                    1466,
                    1479,
                    971,
                    462,
                    2510,
                    2001,
                    2004,
                    475,
                    1500,
                    485,
                    2036,
                    2551,
                    505
                ],
                "internalFunctions": {},
                "is_static_address": false,
                "lang": "Solidity",
                "localAssignments": {
                    "1": {
                        "lhs": "allw",
                        "sourceLoc": {
                            "begin": "851",
                            "len": "42",
                            "source": "0"
                        }
                    }
                },
                "methods": [
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "symbol",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "95d89b41",
                        "sourceBytes": {
                            "begin": 121,
                            "size": 28
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "name",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "06fdde03",
                        "sourceBytes": {
                            "begin": 83,
                            "size": 32
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "decimals",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint8",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "313ce567",
                        "sourceBytes": {
                            "begin": 155,
                            "size": 26
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setAllowance",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "owner",
                            "spender",
                            "v"
                        ],
                        "returns": [],
                        "sighash": "da46098c",
                        "sourceBytes": {
                            "begin": 416,
                            "size": 108
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "balanceOf",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "70a08231",
                        "sourceBytes": {
                            "begin": 218,
                            "size": 44
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "approve",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "spender",
                            "v"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "095ea7b3",
                        "sourceBytes": {
                            "begin": 530,
                            "size": 133
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transfer",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "to",
                            "v"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a9059cbb",
                        "sourceBytes": {
                            "begin": 1131,
                            "size": 252
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setBalance",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "a",
                            "v"
                        ],
                        "returns": [],
                        "sighash": "e30443bc",
                        "sourceBytes": {
                            "begin": 339,
                            "size": 72
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferFrom",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [
                            "from",
                            "to",
                            "v"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "23b872dd",
                        "sourceBytes": {
                            "begin": 669,
                            "size": 456
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "MockERC20",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "allowance",
                        "notpayable": true,
                        "originalFile": "certora/MockERC20.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "dd62ed3e",
                        "sourceBytes": {
                            "begin": 268,
                            "size": 64
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    }
                ],
                "name": "MockERC20",
                "original_file": "certora/MockERC20.sol",
                "solidityTypes": [],
                "sourceBytes": {
                    "begin": 58,
                    "size": 1327
                },
                "srcmap": "58:1432:0:-:0;;;;;;;;;-1:-1:-1;58:1432:0;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;58:1432:0;;;;;:::i;:::-;;:::o;:::-;;:::i;83:32::-;;;;;:::i;:::-;;:::o;58:1432::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;155:26::-;;;;;;:::i;:::-;;:::o;58:1432::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;218:44::-;;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;58:1432::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;121:28::-;;;;;;:::i;:::-;;:::o;58:1432::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;268:64::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;58:1432::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;530:133::-;609:30;:34;530:133;593:4;;:::i;:::-;642:1;609:9;:21;:9;619:10;609:21;;:::i;:::-;:30;:::i;:::-;:34;:::i;:::-;652:4;645:11;:::o;58:1432::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;669:561::-;1182:13;:20;669:561;1152:20;1182;669:561;746:4;;:::i;:::-;770:2;762:33;770:2;:16;;776:10;784:1;776:10;:::i;:::-;770:16;:::i;:::-;;;:::i;:::-;;;762:33;:::i;:::-;805:36;813:15;;:9;823:4;813:15;;:::i;:::-;;:::i;:::-;:20;;832:1;813:20;:::i;:::-;;;:::i;:::-;;;805:36;:::i;:::-;866:27;;:15;:9;876:4;866:15;;:::i;:::-;882:10;866:27;;:::i;:::-;;:::i;:::-;894:105;;;1012:4;:25;;58:1432;;1012:25;:::i;:::-;;;:::i;:::-;;1008:135;;669:561;1171:1;1152:20;:15;1171:1;1152:9;;:15;:::i;:::-;:20;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;1182:9;;:13;:::i;:::-;:20;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;1219:4;1212:11;:::o;1008:135::-;1124:8;1061:4;1053:27;1094:38;1061:4;:9;;1069:1;1061:9;:::i;:::-;;;:::i;:::-;;;1053:27;:::i;:::-;1131:1;1124:8;;:::i;:::-;1094:27;:15;:9;1104:4;1094:15;;:::i;:::-;1110:10;1094:27;;:::i;:::-;:38;:::i;:::-;1008:135;;;1236:252;1442:18;:13;:18;1236:252;1295:4;;:::i;:::-;1319:2;1311:33;1319:2;:16;;1325:10;1333:1;1325:10;:::i;:::-;1319:16;:::i;:::-;;;:::i;:::-;;;1311:33;:::i;:::-;1354:42;1362:21;;:9;1372:10;1362:21;;:::i;:::-;;:::i;:::-;:26;;1387:1;1362:26;:::i;:::-;;;:::i;:::-;;;1354:42;:::i;:::-;1406:26;1431:1;1406:26;:21;:9;1416:10;1406:21;;:::i;:::-;:26;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;1442:9;;:13;:::i;:::-;:18;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;1477:4;1470:11;:::o;416:108::-;;492:25;416:108;492:16;:29;416:108;492:9;;:16;:::i;:::-;:25;:::i;:::-;:29;:::i;:::-;416:108::o;339:72::-;392:12;:16;339:72;392:9;;:12;:::i;:::-;:16;:::i;:::-;339:72::o",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 4,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/MockERC20.sol:MockERC20",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "type": "StringType"
                            },
                            "label": "name",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_string_storage"
                        },
                        {
                            "astId": 7,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/MockERC20.sol:MockERC20",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "type": "StringType"
                            },
                            "label": "symbol",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_string_storage"
                        },
                        {
                            "astId": 10,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/MockERC20.sol:MockERC20",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint8",
                                "type": "Primitive"
                            },
                            "label": "decimals",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_uint8"
                        },
                        {
                            "astId": 14,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/MockERC20.sol:MockERC20",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "balanceOf",
                            "offset": 0,
                            "slot": "3",
                            "type": "t_mapping(t_address,t_uint256)"
                        },
                        {
                            "astId": 20,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/MockERC20.sol:MockERC20",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "mappingKeyType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "20",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "mappingValueType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "32",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Mapping"
                                },
                                "type": "Mapping"
                            },
                            "label": "allowance",
                            "offset": 0,
                            "slot": "4",
                            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => mapping(address => uint256))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_uint256)"
                        },
                        "t_mapping(t_address,t_uint256)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => uint256)",
                            "numberOfBytes": "32",
                            "value": "t_uint256"
                        },
                        "t_string_storage": {
                            "encoding": "bytes",
                            "label": "string",
                            "numberOfBytes": "32"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        },
                        "t_uint8": {
                            "encoding": "inplace",
                            "label": "uint8",
                            "numberOfBytes": "1"
                        }
                    }
                },
                "transientStorageLayout": null,
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "origSourceDir": ".pre_autofinders.0",
        "primary_contract": "MockERC20",
        "primary_contract_address": "00000000ce4604a0000000000000000000000001",
        "prototypeFor": [],
        "sdc_name": "MockERC20.sol_0",
        "sourceDir": ".post_autofinders.0",
        "srclist": {
            "0": "certora/MockERC20.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    },
    "RecipientHandlerHarness_00000000ce4604a0000000000000000000000013": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000013",
                "allMethods": [
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "BPS",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "249d39e9",
                        "sourceBytes": {
                            "begin": 2480,
                            "size": 36
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ORDER_TYPEHASH",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "f973a209",
                        "sourceBytes": {
                            "begin": 1735,
                            "size": 212
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "PRICEQUOTE_TYPEHASH",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "caf43b99",
                        "sourceBytes": {
                            "begin": 1533,
                            "size": 195
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "checkServiceActive",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "serviceId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6dfda2d2",
                        "sourceBytes": {
                            "begin": 10743,
                            "size": 122
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "claim",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "token",
                            "claimAmount"
                        ],
                        "returns": [],
                        "sighash": "aad3ec96",
                        "sourceBytes": {
                            "begin": 7054,
                            "size": 577
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "commissionRate",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5ea1d6f8",
                        "sourceBytes": {
                            "begin": 2424,
                            "size": 29
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "distribution",
                            "rate"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 250,
                            "size": 134
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "name",
                            "version",
                            "_distributionSC",
                            "_commissionRate"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 11450,
                            "size": 885
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "createService",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "serviceId",
                            "seller"
                        ],
                        "returns": [],
                        "sighash": "d94ee1fb",
                        "sourceBytes": {
                            "begin": 9982,
                            "size": 374
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "distributionSC",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "bdceb227",
                        "sourceBytes": {
                            "begin": 2356,
                            "size": 29
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getProfit",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "caller",
                            "token"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "759eee10",
                        "sourceBytes": {
                            "begin": 10482,
                            "size": 131
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getSeller",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "serviceId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1d9021ea",
                        "sourceBytes": {
                            "begin": 10619,
                            "size": 118
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_bindService",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "serviceId",
                            "seller"
                        ],
                        "returns": [],
                        "sighash": "266ea8db",
                        "sourceBytes": {
                            "begin": 618,
                            "size": 281
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 263,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.Order",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "buyer",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "payTo",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalAmount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "nonce",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "deadline",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Order",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_checkOrderSig",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "o",
                            "sig"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "dd97905a",
                        "sourceBytes": {
                            "begin": 1208,
                            "size": 594
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 278,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.PriceQuote",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "seller",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "price",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "cost",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "expiry",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "PriceQuote",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_checkQuoteSig",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "q",
                            "sig"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4f7d7a5b",
                        "sourceBytes": {
                            "begin": 1808,
                            "size": 568
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_setCommissionRate",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "r"
                        ],
                        "returns": [],
                        "sighash": "9f16cc37",
                        "sourceBytes": {
                            "begin": 480,
                            "size": 132
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_setDistributionSC",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "d"
                        ],
                        "returns": [],
                        "sighash": "d40f9d77",
                        "sourceBytes": {
                            "begin": 390,
                            "size": 84
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_settle",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "buyer",
                            "paymentToken",
                            "seller",
                            "serviceId",
                            "amount",
                            "cost"
                        ],
                        "returns": [],
                        "sighash": "a8364f16",
                        "sourceBytes": {
                            "begin": 905,
                            "size": 261
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "nextNonce",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "0cd55abf",
                        "sourceBytes": {
                            "begin": 10362,
                            "size": 114
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "nonces",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
                        "paramNames": [
                            "owner"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "7ecebe00",
                        "sourceBytes": {
                            "begin": 538,
                            "size": 107
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 1638,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "pause",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "8456cb59",
                        "sourceBytes": {
                            "begin": 11315,
                            "size": 60
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "paused",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5c975abb",
                        "sourceBytes": {
                            "begin": 1726,
                            "size": 84
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 263,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.Order",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "buyer",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "payTo",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalAmount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "nonce",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "deadline",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Order",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 278,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.PriceQuote",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "seller",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "price",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "cost",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "expiry",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "PriceQuote",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "payWithEIP712",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "order",
                            "sig",
                            "quote",
                            "sellerQuoteSig",
                            "permit2612",
                            "permit2Data"
                        ],
                        "returns": [],
                        "sighash": "85cb0046",
                        "sourceBytes": {
                            "begin": 3083,
                            "size": 2974
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 2293,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 278,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.PriceQuote",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "seller",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "price",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "cost",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "expiry",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "PriceQuote",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "revokeQuote",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "quote",
                            "sellerQuoteSig"
                        ],
                        "returns": [],
                        "sighash": "c8de0295",
                        "sourceBytes": {
                            "begin": 7984,
                            "size": 627
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "revokedQuote",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3eb53b0a",
                        "sourceBytes": {
                            "begin": 2187,
                            "size": 44
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCommissionRate",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "_commissionRate"
                        ],
                        "returns": [],
                        "sighash": "19fac8fd",
                        "sourceBytes": {
                            "begin": 9531,
                            "size": 226
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setDistributionSC",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "_distributionSC"
                        ],
                        "returns": [],
                        "sighash": "6b8569b9",
                        "sourceBytes": {
                            "begin": 9763,
                            "size": 213
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setServiceActive",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "serviceId"
                        ],
                        "returns": [],
                        "sighash": "e810c61a",
                        "sourceBytes": {
                            "begin": 9256,
                            "size": 269
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 2543,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "unpause",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "3f4ba83a",
                        "sourceBytes": {
                            "begin": 11381,
                            "size": 64
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 278,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.PriceQuote",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "seller",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "price",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "cost",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "expiry",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "PriceQuote",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "unrevokeQuote",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "quote",
                            "sellerQuoteSig"
                        ],
                        "returns": [],
                        "sighash": "2e87f9b3",
                        "sourceBytes": {
                            "begin": 8617,
                            "size": 632
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "bytecode": "",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": false,
                    "optimizerRuns": null,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.22",
                "constructorBytecode": "",
                "constructorSrcmap": "162:2430:0:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;250:134::-;;;337:18;;:::i;:::-;357:3;;;:::i;:::-;362:12;376:4;250:134;;:::i;:::-;:::o;162:2430::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;:::o;:::-;;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;13959:993:1:-;14362:285;13959:993;;14071:10;13959:993;:::i;:::-;2627:1;;;;:::i;:::-;14092:15;;:::i;:::-;14108:108;;;14225:52;14286:24;;14362:285;14555:14;14515:11;14390:97;14521:4;14515:11;:::i;:::-;14505:22;;;;:::i;:::-;;;:::i;:::-;;14561:7;14555:14;:::i;:::-;14545:25;;;;:::i;:::-;;;:::i;:::-;;14588:14;;;:::i;:::-;14620:13;14628:4;14620:13;:::i;:::-;14362:285;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;14339:318;;;;:::i;:::-;;;:::i;:::-;;14320:337;;14670:15;:29;;14689:10;14697:1;14689:10;:::i;:::-;14670:29;:::i;:::-;;;:::i;:::-;;14667:85;;14761:32;14778:15;14761:32;;:::i;:::-;14806:15;:20;;14825:1;14806:20;:::i;:::-;;;:::i;:::-;;:48;;;;13959:993;14803:101;;14913:32;14930:15;14913:32;;:::i;:::-;13959:993::o;14803:101::-;14876:17;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;14806:48;14830:15;;:24;;14848:6;14830:24;:::i;:::-;;;:::i;:::-;;14806:48;;14667:85;14721:20;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;209:2304:13;;;;:::i;:::-;:::o;162:2430:0:-;;;;;;;;;;;;;:::i;:::-;:::o;1225:187:6:-;1273:12;:26;;1289:10;1297:1;1289:10;:::i;:::-;1273:26;:::i;:::-;;;:::i;:::-;;1269:95;;1392:12;;;:::i;:::-;1225:187::o;1269:95::-;1322:31;1342:10;1350:1;1342:10;:::i;:::-;1322:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;162:2430:0;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;3899:577:6:-;3963:281;;;;;;;;;;;;4272:6;;;:::i;:::-;4279:109;;;;4397:17;4406:8;4397:17;;:::i;:::-;4460:8;4429:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;3899:577::o",
                "extensionContracts": [],
                "file": "certora/harness/RecipientHandlerHarness.sol",
                "immutables": [
                    {
                        "length": 32,
                        "offset": 12724,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            }
                        },
                        "varname": "_domainChainId"
                    },
                    {
                        "length": 32,
                        "offset": 12777,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "bytes32",
                                "type": "Primitive"
                            }
                        },
                        "varname": "DOMAIN_SEPARATOR"
                    }
                ],
                "internalFunctionHarnesses": {},
                "internalFunctionStarts": [
                    2055,
                    4115,
                    12311,
                    12315,
                    4128,
                    2108,
                    4159,
                    12354,
                    4187,
                    12380,
                    4199,
                    6250,
                    2159,
                    4208,
                    22641,
                    12404,
                    6270,
                    6283,
                    16531,
                    4247,
                    2204,
                    12445,
                    16543,
                    12450,
                    16547,
                    18596,
                    12462,
                    4273,
                    16562,
                    12487,
                    4297,
                    12490,
                    16592,
                    2258,
                    12511,
                    6379,
                    4338,
                    16627,
                    18684,
                    6398,
                    18688,
                    18691,
                    16643,
                    12550,
                    2311,
                    14601,
                    14604,
                    4377,
                    18719,
                    14632,
                    16682,
                    14636,
                    14639,
                    4403,
                    2362,
                    14651,
                    18747,
                    18751,
                    14657,
                    16708,
                    4427,
                    2382,
                    6478,
                    6489,
                    16732,
                    14685,
                    10591,
                    10603,
                    14701,
                    14704,
                    4468,
                    6520,
                    16773,
                    14732,
                    4495,
                    14748,
                    14752,
                    14756,
                    4523,
                    4535,
                    4547,
                    4550,
                    14793,
                    14796,
                    6605,
                    14808,
                    6623,
                    4582,
                    14828,
                    6642,
                    14843,
                    6652,
                    4604,
                    14863,
                    529,
                    4626,
                    6674,
                    535,
                    541,
                    4638,
                    2591,
                    14878,
                    545,
                    4641,
                    549,
                    6696,
                    553,
                    14898,
                    564,
                    6716,
                    576,
                    14913,
                    4673,
                    12868,
                    21063,
                    6729,
                    596,
                    2655,
                    611,
                    21091,
                    6769,
                    19062,
                    641,
                    644,
                    19082,
                    657,
                    2708,
                    19097,
                    19109,
                    678,
                    19129,
                    15042,
                    2759,
                    4809,
                    15054,
                    4822,
                    15067,
                    731,
                    4835,
                    751,
                    4848,
                    4861,
                    766,
                    6911,
                    11018,
                    4874,
                    17167,
                    6929,
                    11031,
                    6939,
                    796,
                    13083,
                    4894,
                    801,
                    6949,
                    4907,
                    2859,
                    6955,
                    11051,
                    17204,
                    4920,
                    6975,
                    17216,
                    4933,
                    6988,
                    17228,
                    6994,
                    15187,
                    852,
                    6997,
                    17240,
                    15202,
                    2917,
                    17255,
                    873,
                    13168,
                    7025,
                    893,
                    15232,
                    13186,
                    17290,
                    908,
                    2962,
                    7064,
                    938,
                    17325,
                    7090,
                    951,
                    5053,
                    3014,
                    5063,
                    7114,
                    972,
                    13263,
                    3025,
                    13273,
                    5083,
                    13279,
                    3049,
                    15344,
                    21490,
                    7155,
                    21493,
                    7158,
                    3063,
                    13308,
                    1025,
                    5124,
                    3078,
                    5130,
                    5134,
                    1040,
                    21521,
                    5138,
                    7186,
                    1043,
                    1046,
                    13340,
                    11302,
                    5159,
                    7214,
                    19505,
                    1074,
                    11314,
                    7217,
                    3131,
                    1088,
                    5194,
                    1099,
                    21583,
                    7249,
                    5205,
                    15448,
                    21611,
                    3183,
                    1152,
                    5259,
                    3219,
                    5273,
                    3230,
                    3243,
                    1197,
                    7347,
                    19638,
                    5312,
                    3264,
                    19653,
                    7375,
                    5338,
                    1249,
                    1253,
                    7403,
                    5362,
                    3317,
                    7415,
                    1272,
                    1276,
                    1280,
                    1284,
                    13581,
                    5403,
                    3368,
                    5442,
                    1347,
                    11588,
                    3420,
                    5468,
                    13666,
                    19815,
                    13684,
                    5492,
                    7549,
                    7553,
                    1418,
                    9625,
                    19865,
                    5533,
                    3492,
                    9645,
                    9651,
                    1470,
                    1473,
                    13762,
                    9671,
                    13772,
                    9684,
                    1493,
                    3546,
                    1508,
                    11753,
                    1538,
                    3597,
                    1550,
                    1572,
                    1576,
                    1582,
                    9780,
                    3648,
                    1606,
                    13896,
                    1620,
                    9819,
                    22114,
                    11875,
                    3684,
                    13931,
                    1645,
                    3695,
                    1650,
                    9845,
                    11894,
                    1663,
                    9869,
                    1684,
                    3748,
                    3752,
                    9910,
                    3773,
                    20160,
                    1737,
                    11983,
                    3792,
                    3795,
                    20180,
                    11994,
                    3823,
                    3828,
                    20214,
                    20217,
                    1788,
                    12033,
                    3850,
                    9997,
                    20245,
                    22297,
                    12059,
                    20258,
                    10019,
                    20261,
                    3878,
                    3881,
                    1842,
                    12083,
                    5947,
                    20289,
                    3913,
                    5965,
                    20302,
                    12117,
                    5975,
                    20316,
                    5985,
                    5989,
                    1895,
                    20330,
                    14186,
                    1898,
                    20333,
                    12151,
                    18300,
                    14205,
                    10109,
                    14210,
                    1922,
                    18309,
                    20361,
                    1936,
                    10129,
                    14237,
                    1951,
                    18337,
                    20389,
                    14251,
                    10166,
                    4025,
                    10178,
                    14274,
                    4036,
                    14279,
                    4040,
                    10190,
                    2004,
                    4068,
                    14320,
                    22514,
                    4090,
                    4095
                ],
                "internalFunctions": {
                    "0xf196e50000": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Nonces.sol|RecipientHandlerHarness",
                        "declaringContract": "RecipientHandlerHarness",
                        "method": {
                            "contractName": "RecipientHandlerHarness",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "nonces",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
                            "paramNames": [
                                "owner"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "7ecebe00",
                            "sourceBytes": {
                                "begin": 538,
                                "size": 107
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50001": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|RecipientHandlerHarness",
                        "declaringContract": "RecipientHandlerHarness",
                        "method": {
                            "contractName": "RecipientHandlerHarness",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 1638,
                                "size": 85
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50002": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|RecipientHandlerHarness",
                        "declaringContract": "RecipientHandlerHarness",
                        "method": {
                            "contractName": "RecipientHandlerHarness",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50003": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|RecipientHandlerHarness",
                        "declaringContract": "RecipientHandlerHarness",
                        "method": {
                            "contractName": "RecipientHandlerHarness",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50004": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Pausable.sol|RecipientHandlerHarness",
                        "declaringContract": "RecipientHandlerHarness",
                        "method": {
                            "contractName": "RecipientHandlerHarness",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "paused",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "5c975abb",
                            "sourceBytes": {
                                "begin": 1726,
                                "size": 84
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50005": {
                        "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler",
                        "declaringContract": "RecipientHandler",
                        "method": {
                            "contractName": "RecipientHandler",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint128",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_settle",
                            "notpayable": true,
                            "originalFile": "contracts/RecipientHandler.sol",
                            "paramNames": [
                                "buyer",
                                "paymentToken",
                                "seller",
                                "serviceId",
                                "amount",
                                "cost"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6063,
                                "size": 967
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50006": {
                        "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler",
                        "declaringContract": "RecipientHandler",
                        "method": {
                            "contractName": "RecipientHandler",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_hashTypedDataV4",
                            "notpayable": true,
                            "originalFile": "contracts/RecipientHandler.sol",
                            "paramNames": [
                                "structHash"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7637,
                                "size": 314
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50007": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|RecipientHandler",
                        "declaringContract": "RecipientHandler",
                        "method": {
                            "contractName": "RecipientHandler",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50008": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|RecipientHandler",
                        "declaringContract": "RecipientHandler",
                        "method": {
                            "contractName": "RecipientHandler",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50009": {
                        "canonicalId": "contracts/libraries/PermitHelper.sol|PermitHelper",
                        "declaringContract": "PermitHelper",
                        "method": {
                            "contractName": "PermitHelper",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryPermit2612",
                            "notpayable": true,
                            "originalFile": "contracts/libraries/PermitHelper.sol",
                            "paramNames": [
                                "token",
                                "_owner",
                                "_spender",
                                "permitData"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 832,
                                "size": 1794
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000a": {
                        "canonicalId": "contracts/libraries/PermitHelper.sol|PermitHelper",
                        "declaringContract": "PermitHelper",
                        "method": {
                            "contractName": "PermitHelper",
                            "fullArgs": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryPermit2",
                            "notpayable": true,
                            "originalFile": "contracts/libraries/PermitHelper.sol",
                            "paramNames": [
                                "permit2Data"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2700,
                                "size": 177
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000b": {
                        "canonicalId": "contracts/libraries/PermitHelper.sol|PermitHelper",
                        "declaringContract": "PermitHelper",
                        "method": {
                            "contractName": "PermitHelper",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "ensureAllowanceOrRevert",
                            "notpayable": true,
                            "originalFile": "contracts/libraries/PermitHelper.sol",
                            "paramNames": [
                                "token",
                                "owner",
                                "spender",
                                "need"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2936,
                                "size": 202
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1796,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2912,
                                "size": 187
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50010": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransfer",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1219,
                                "size": 160
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50011": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransferFrom",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1618,
                                "size": 188
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50012": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeIncreaseAllowance",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3146,
                                "size": 225
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50013": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransfer",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1943,
                                "size": 189
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50014": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransferFrom",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2273,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50015": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeDecreaseAllowance",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "requestedDecrease"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4039,
                                "size": 468
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50016": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "forceApprove",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5084,
                                "size": 380
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50017": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5808,
                                "size": 322
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50018": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferFromAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6482,
                                "size": 406
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50019": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "approveAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7553,
                                "size": 320
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturn",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8370,
                                "size": 720
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5001b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturnBool",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9592,
                                "size": 480
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5001c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 656,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 758,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 863,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Nonces.sol|Nonces",
                        "declaringContract": "Nonces",
                        "method": {
                            "contractName": "Nonces",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_useNonce",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
                            "paramNames": [
                                "owner"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 759,
                                "size": 395
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50020": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Nonces.sol|Nonces",
                        "declaringContract": "Nonces",
                        "method": {
                            "contractName": "Nonces",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_useCheckedNonce",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
                            "paramNames": [
                                "owner",
                                "nonce"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1265,
                                "size": 222
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50021": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Panic.sol|Panic",
                        "declaringContract": "Panic",
                        "method": {
                            "contractName": "Panic",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "panic",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Panic.sol",
                            "paramNames": [
                                "code"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1776,
                                "size": 194
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50022": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Pausable.sol|Pausable",
                        "declaringContract": "Pausable",
                        "method": {
                            "contractName": "Pausable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_requireNotPaused",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1878,
                                "size": 128
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50023": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Pausable.sol|Pausable",
                        "declaringContract": "Pausable",
                        "method": {
                            "contractName": "Pausable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_requirePaused",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2078,
                                "size": 126
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50024": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Pausable.sol|Pausable",
                        "declaringContract": "Pausable",
                        "method": {
                            "contractName": "Pausable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_pause",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2339,
                                "size": 115
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50025": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Pausable.sol|Pausable",
                        "declaringContract": "Pausable",
                        "method": {
                            "contractName": "Pausable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_unpause",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2586,
                                "size": 117
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50026": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryRecover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "signature"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 1383,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                                        "containingContract": "ECDSA",
                                        "enumMembers": [
                                            {
                                                "name": "NoError"
                                            },
                                            {
                                                "name": "InvalidSignature"
                                            },
                                            {
                                                "name": "InvalidSignatureLength"
                                            },
                                            {
                                                "name": "InvalidSignatureS"
                                            }
                                        ],
                                        "enumName": "RecoverError",
                                        "type": "UserDefinedEnum"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2129,
                                "size": 778
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50027": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "recover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "signature"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3714,
                                "size": 255
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50028": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryRecover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "v",
                                "r",
                                "s"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 1383,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                                        "containingContract": "ECDSA",
                                        "enumMembers": [
                                            {
                                                "name": "NoError"
                                            },
                                            {
                                                "name": "InvalidSignature"
                                            },
                                            {
                                                "name": "InvalidSignatureLength"
                                            },
                                            {
                                                "name": "InvalidSignatureS"
                                            }
                                        ],
                                        "enumName": "RecoverError",
                                        "type": "UserDefinedEnum"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5203,
                                "size": 1551
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50029": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryRecover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "r",
                                "vs"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 1383,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                                        "containingContract": "ECDSA",
                                        "enumMembers": [
                                            {
                                                "name": "NoError"
                                            },
                                            {
                                                "name": "InvalidSignature"
                                            },
                                            {
                                                "name": "InvalidSignatureLength"
                                            },
                                            {
                                                "name": "InvalidSignatureS"
                                            }
                                        ],
                                        "enumName": "RecoverError",
                                        "type": "UserDefinedEnum"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4185,
                                "size": 505
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "recover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "r",
                                "vs"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4817,
                                "size": 250
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "recover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "v",
                                "r",
                                "s"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6887,
                                "size": 260
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 1383,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                                        "containingContract": "ECDSA",
                                        "enumMembers": [
                                            {
                                                "name": "NoError"
                                            },
                                            {
                                                "name": "InvalidSignature"
                                            },
                                            {
                                                "name": "InvalidSignatureLength"
                                            },
                                            {
                                                "name": "InvalidSignatureS"
                                            }
                                        ],
                                        "enumName": "RecoverError",
                                        "type": "UserDefinedEnum"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_throwError",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "error",
                                "errorArg"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7280,
                                "size": 532
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5002d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "add512",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 643,
                                "size": 200
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "mul512",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1027,
                                "size": 550
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryMul",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2414,
                                "size": 482
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50030": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryAdd",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1693,
                                "size": 240
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50031": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySub",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2052,
                                "size": 240
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50032": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryDiv",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3020,
                                "size": 322
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50033": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryMod",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3476,
                                "size": 322
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50034": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "saturatingAdd",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3912,
                                "size": 199
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50035": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "saturatingSub",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4217,
                                "size": 150
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50036": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "saturatingMul",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4487,
                                "size": 199
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50037": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "ternary",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "condition",
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5071,
                                "size": 294
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50038": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "max",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5435,
                                "size": 111
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50039": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "min",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5617,
                                "size": 111
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "average",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5841,
                                "size": 153
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "ceilDiv",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6215,
                                "size": 704
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "mulDiv",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "x",
                                "y",
                                "denominator"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7242,
                                "size": 3683
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 3031,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log2",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 28768,
                                "size": 255
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log10",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 29154,
                                "size": 916
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 3031,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log10",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 30224,
                                "size": 258
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50040": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "x"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 30739,
                                "size": 736
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50041": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 3031,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 31630,
                                "size": 266
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50042": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 3031,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "unsignedRoundsUp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 32020,
                                "size": 122
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50043": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "sqrt",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 20567,
                                "size": 5181
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50044": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 3031,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "sqrt",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 25845,
                                "size": 247
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50045": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log2",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "x"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 26222,
                                "size": 2393
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50046": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 3031,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "mulShr",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "x",
                                "y",
                                "n",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11865,
                                "size": 211
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50047": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "mulShr",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "x",
                                "y",
                                "n"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11414,
                                "size": 331
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50048": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 3031,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "mulDiv",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "x",
                                "y",
                                "denominator",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11054,
                                "size": 238
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50049": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "invMod",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "n"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12640,
                                "size": 1919
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "invModPrime",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "p"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15084,
                                "size": 157
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "modExp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "b",
                                "e",
                                "m"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15930,
                                "size": 255
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryModExp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "b",
                                "e",
                                "m"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16934,
                                "size": 1598
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "modExp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "b",
                                "e",
                                "m"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18628,
                                "size": 280
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryModExp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "b",
                                "e",
                                "m"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 19007,
                                "size": 926
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_zeroBytes",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "byteArray"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 20016,
                                "size": 248
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50050": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint248",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint248",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1629,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50051": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint240",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint240",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2138,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50052": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint216",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint216",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3665,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50053": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint232",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint232",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2647,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50054": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint224",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3156,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50055": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint208",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4174,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50056": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint200",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint200",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4683,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50057": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint192",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint192",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5192,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50058": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint184",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint184",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5701,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50059": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint176",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint176",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6210,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint168",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint168",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6719,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint160",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7228,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint152",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint152",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7737,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint144",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint144",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8246,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint136",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint136",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8755,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint128",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint128",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9264,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50060": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt216",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int216",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 19875,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50061": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt208",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 20422,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50062": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt200",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int200",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 20969,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50063": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt192",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int192",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 21516,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50064": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt184",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int184",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 22063,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50065": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt176",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int176",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 22610,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50066": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt168",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int168",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 23157,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50067": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint16",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint16",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50068": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint8",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16792,
                                "size": 208
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50069": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 17171,
                                "size": 193
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt248",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int248",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 17687,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt240",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int240",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18234,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt232",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int232",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18781,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt224",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 19328,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint40",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint40",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint32",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50070": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint24",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint24",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50071": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt160",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 23704,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50072": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt152",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int152",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 24251,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50073": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt144",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int144",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 24798,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50074": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt136",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int136",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 25345,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50075": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt128",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int128",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 25892,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50076": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt120",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int120",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 26439,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50077": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt112",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int112",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 26986,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50078": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt104",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int104",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 27533,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50079": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt96",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int96",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 28075,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt88",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int88",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 28613,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt80",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int80",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 29151,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt72",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int72",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 29689,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt56",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int56",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 30765,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt48",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 31303,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt40",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int40",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 31841,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50080": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt32",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 32379,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50081": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt24",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int24",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 32917,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50082": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt16",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int16",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 33455,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50083": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt8",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int8",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 33988,
                                "size": 216
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50084": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 34380,
                                "size": 314
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50085": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 34795,
                                "size": 145
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50086": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt64",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int64",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 30227,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50087": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint104",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint104",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10791,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50088": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint112",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint112",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10282,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50089": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint120",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint120",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9773,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint96",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint88",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint88",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint80",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint80",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint72",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint72",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint64",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint64",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint56",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint56",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50090": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint48",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    }
                },
                "is_static_address": false,
                "lang": "Solidity",
                "localAssignments": {
                    "1": {
                        "lhs": "digest",
                        "sourceLoc": {
                            "begin": "1332",
                            "len": "416",
                            "source": "0"
                        }
                    },
                    "10": {
                        "lhs": "netProfit",
                        "sourceLoc": {
                            "begin": "6596",
                            "len": "34",
                            "source": "1"
                        }
                    },
                    "11": {
                        "lhs": "commission",
                        "sourceLoc": {
                            "begin": "6640",
                            "len": "68",
                            "source": "1"
                        }
                    },
                    "12": {
                        "lhs": "releasableAmount",
                        "sourceLoc": {
                            "begin": "7291",
                            "len": "59",
                            "source": "1"
                        }
                    },
                    "13": {
                        "lhs": "chainId",
                        "sourceLoc": {
                            "begin": "7723",
                            "len": "15",
                            "source": "1"
                        }
                    },
                    "14": {
                        "lhs": "qd",
                        "sourceLoc": {
                            "begin": "8082",
                            "len": "284",
                            "source": "1"
                        }
                    },
                    "15": {
                        "lhs": "qd",
                        "sourceLoc": {
                            "begin": "8717",
                            "len": "284",
                            "source": "1"
                        }
                    },
                    "16": {
                        "lhs": "serviceOwner",
                        "sourceLoc": {
                            "begin": "9319",
                            "len": "49",
                            "source": "1"
                        }
                    },
                    "17": {
                        "lhs": "chainId",
                        "sourceLoc": {
                            "begin": "11583",
                            "len": "15",
                            "source": "1"
                        }
                    },
                    "18": {
                        "lhs": "selector",
                        "sourceLoc": {
                            "begin": "1035",
                            "len": "15",
                            "source": "5"
                        }
                    },
                    "19": {
                        "lhs": "(ok, )",
                        "sourceLoc": {
                            "begin": "2836",
                            "len": "34",
                            "source": "5"
                        }
                    },
                    "2": {
                        "lhs": "digest",
                        "sourceLoc": {
                            "begin": "1937",
                            "len": "384",
                            "source": "0"
                        }
                    },
                    "20": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "2985",
                            "len": "25",
                            "source": "6"
                        }
                    },
                    "21": {
                        "lhs": "oldAllowance",
                        "sourceLoc": {
                            "begin": "3242",
                            "len": "62",
                            "source": "11"
                        }
                    },
                    "22": {
                        "lhs": "approvalCall",
                        "sourceLoc": {
                            "begin": "5171",
                            "len": "75",
                            "source": "11"
                        }
                    },
                    "23": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "8450",
                            "len": "18",
                            "source": "11"
                        }
                    },
                    "24": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "8478",
                            "len": "19",
                            "source": "11"
                        }
                    },
                    "25": {
                        "lhs": "success",
                        "sourceLoc": {
                            "begin": "9691",
                            "len": "12",
                            "source": "11"
                        }
                    },
                    "26": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "9713",
                            "len": "18",
                            "source": "11"
                        }
                    },
                    "27": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "9741",
                            "len": "19",
                            "source": "11"
                        }
                    },
                    "28": {
                        "lhs": "current",
                        "sourceLoc": {
                            "begin": "1348",
                            "len": "34",
                            "source": "13"
                        }
                    },
                    "29": {
                        "lhs": "recovered,error,errorArg",
                        "sourceLoc": {
                            "begin": "3811",
                            "len": "87",
                            "source": "16"
                        }
                    },
                    "3": {
                        "lhs": "deadline",
                        "sourceLoc": {
                            "begin": "3361",
                            "len": "33",
                            "source": "1"
                        }
                    },
                    "30": {
                        "lhs": "recovered,error,errorArg",
                        "sourceLoc": {
                            "begin": "4913",
                            "len": "83",
                            "source": "16"
                        }
                    },
                    "31": {
                        "lhs": "signer",
                        "sourceLoc": {
                            "begin": "6524",
                            "len": "41",
                            "source": "16"
                        }
                    },
                    "32": {
                        "lhs": "recovered,error,errorArg",
                        "sourceLoc": {
                            "begin": "6991",
                            "len": "85",
                            "source": "16"
                        }
                    },
                    "33": {
                        "lhs": "success,result",
                        "sourceLoc": {
                            "begin": "3999",
                            "len": "45",
                            "source": "18"
                        }
                    },
                    "34": {
                        "lhs": "_,result",
                        "sourceLoc": {
                            "begin": "4304",
                            "len": "33",
                            "source": "18"
                        }
                    },
                    "35": {
                        "lhs": "success,result",
                        "sourceLoc": {
                            "begin": "4574",
                            "len": "45",
                            "source": "18"
                        }
                    },
                    "36": {
                        "lhs": "success,result",
                        "sourceLoc": {
                            "begin": "16021",
                            "len": "51",
                            "source": "18"
                        }
                    },
                    "37": {
                        "lhs": "success,result",
                        "sourceLoc": {
                            "begin": "18739",
                            "len": "56",
                            "source": "18"
                        }
                    },
                    "38": {
                        "lhs": "mLen",
                        "sourceLoc": {
                            "begin": "19230",
                            "len": "23",
                            "source": "18"
                        }
                    },
                    "39": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "29226",
                            "len": "18",
                            "source": "18"
                        }
                    },
                    "4": {
                        "lhs": "digest",
                        "sourceLoc": {
                            "begin": "4379",
                            "len": "324",
                            "source": "1"
                        }
                    },
                    "40": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "19335",
                            "len": "60",
                            "source": "18"
                        }
                    },
                    "41": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "26363",
                            "len": "64",
                            "source": "18"
                        }
                    },
                    "42": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "26503",
                            "len": "56",
                            "source": "18"
                        }
                    },
                    "43": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "26634",
                            "len": "48",
                            "source": "18"
                        }
                    },
                    "44": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "26757",
                            "len": "44",
                            "source": "18"
                        }
                    },
                    "45": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "26874",
                            "len": "42",
                            "source": "18"
                        }
                    },
                    "46": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "26988",
                            "len": "41",
                            "source": "18"
                        }
                    },
                    "47": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "30882",
                            "len": "64",
                            "source": "18"
                        }
                    },
                    "48": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "31022",
                            "len": "56",
                            "source": "18"
                        }
                    },
                    "49": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "31153",
                            "len": "48",
                            "source": "18"
                        }
                    },
                    "5": {
                        "lhs": "quoteDigest",
                        "sourceLoc": {
                            "begin": "4810",
                            "len": "293",
                            "source": "1"
                        }
                    },
                    "50": {
                        "lhs": "r",
                        "sourceLoc": {
                            "begin": "31276",
                            "len": "44",
                            "source": "18"
                        }
                    },
                    "51": {
                        "lhs": "quotient",
                        "sourceLoc": {
                            "begin": "13519",
                            "len": "34",
                            "source": "18"
                        }
                    },
                    "52": {
                        "lhs": "(gcd, remainder)",
                        "sourceLoc": {
                            "begin": "13572",
                            "len": "395",
                            "source": "18"
                        }
                    },
                    "53": {
                        "lhs": "(x, y)",
                        "sourceLoc": {
                            "begin": "13986",
                            "len": "382",
                            "source": "18"
                        }
                    },
                    "54": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "17771",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "55": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "18318",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "56": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "18865",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "57": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "19412",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "58": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "19959",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "59": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "20506",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "6": {
                        "lhs": "recoveredSeller",
                        "sourceLoc": {
                            "begin": "5113",
                            "len": "61",
                            "source": "1"
                        }
                    },
                    "60": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "21053",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "61": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "21600",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "62": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "22147",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "63": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "22694",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "64": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "23241",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "65": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "23788",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "66": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "24335",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "67": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "24882",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "68": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "25429",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "69": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "25976",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "7": {
                        "lhs": "boundSeller",
                        "sourceLoc": {
                            "begin": "5257",
                            "len": "54",
                            "source": "1"
                        }
                    },
                    "70": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "26523",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "71": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "27070",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "72": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "27617",
                            "len": "26",
                            "source": "19"
                        }
                    },
                    "73": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "28157",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "74": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "28695",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "75": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "29233",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "76": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "29771",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "77": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "30309",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "78": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "30847",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "79": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "31385",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "8": {
                        "lhs": "ok",
                        "sourceLoc": {
                            "begin": "5466",
                            "len": "15",
                            "source": "1"
                        }
                    },
                    "80": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "31923",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "81": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "32461",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "82": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "32999",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "83": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "33537",
                            "len": "25",
                            "source": "19"
                        }
                    },
                    "84": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "34068",
                            "len": "24",
                            "source": "19"
                        }
                    },
                    "9": {
                        "lhs": "token",
                        "sourceLoc": {
                            "begin": "6489",
                            "len": "35",
                            "source": "1"
                        }
                    }
                },
                "methods": [
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "distribution",
                            "rate"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 250,
                            "size": 134
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "name",
                            "version",
                            "_distributionSC",
                            "_commissionRate"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 11450,
                            "size": 885
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "nonces",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
                        "paramNames": [
                            "owner"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "7ecebe00",
                        "sourceBytes": {
                            "begin": 538,
                            "size": 107
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ORDER_TYPEHASH",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "f973a209",
                        "sourceBytes": {
                            "begin": 1735,
                            "size": 212
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "revokedQuote",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3eb53b0a",
                        "sourceBytes": {
                            "begin": 2187,
                            "size": 44
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 2543,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getProfit",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "caller",
                            "token"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "759eee10",
                        "sourceBytes": {
                            "begin": 10482,
                            "size": 131
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 278,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.PriceQuote",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "seller",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "price",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "cost",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "expiry",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "PriceQuote",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "revokeQuote",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "quote",
                            "sellerQuoteSig"
                        ],
                        "returns": [],
                        "sighash": "c8de0295",
                        "sourceBytes": {
                            "begin": 7984,
                            "size": 627
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_settle",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "buyer",
                            "paymentToken",
                            "seller",
                            "serviceId",
                            "amount",
                            "cost"
                        ],
                        "returns": [],
                        "sighash": "a8364f16",
                        "sourceBytes": {
                            "begin": 905,
                            "size": 261
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "claim",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "token",
                            "claimAmount"
                        ],
                        "returns": [],
                        "sighash": "aad3ec96",
                        "sourceBytes": {
                            "begin": 7054,
                            "size": 577
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "PRICEQUOTE_TYPEHASH",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "caf43b99",
                        "sourceBytes": {
                            "begin": 1533,
                            "size": 195
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setServiceActive",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "serviceId"
                        ],
                        "returns": [],
                        "sighash": "e810c61a",
                        "sourceBytes": {
                            "begin": 9256,
                            "size": 269
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 2293,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "distributionSC",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "bdceb227",
                        "sourceBytes": {
                            "begin": 2356,
                            "size": 29
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 278,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.PriceQuote",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "seller",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "price",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "cost",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "expiry",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "PriceQuote",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "unrevokeQuote",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "quote",
                            "sellerQuoteSig"
                        ],
                        "returns": [],
                        "sighash": "2e87f9b3",
                        "sourceBytes": {
                            "begin": 8617,
                            "size": 632
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_setCommissionRate",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "r"
                        ],
                        "returns": [],
                        "sighash": "9f16cc37",
                        "sourceBytes": {
                            "begin": 480,
                            "size": 132
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setDistributionSC",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "_distributionSC"
                        ],
                        "returns": [],
                        "sighash": "6b8569b9",
                        "sourceBytes": {
                            "begin": 9763,
                            "size": 213
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "unpause",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "3f4ba83a",
                        "sourceBytes": {
                            "begin": 11381,
                            "size": 64
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "paused",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5c975abb",
                        "sourceBytes": {
                            "begin": 1726,
                            "size": 84
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "nextNonce",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "0cd55abf",
                        "sourceBytes": {
                            "begin": 10362,
                            "size": 114
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 263,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.Order",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "buyer",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "payTo",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalAmount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "nonce",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "deadline",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Order",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 278,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.PriceQuote",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "seller",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "price",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "cost",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "expiry",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "PriceQuote",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "payWithEIP712",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "order",
                            "sig",
                            "quote",
                            "sellerQuoteSig",
                            "permit2612",
                            "permit2Data"
                        ],
                        "returns": [],
                        "sighash": "85cb0046",
                        "sourceBytes": {
                            "begin": 3083,
                            "size": 2974
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "checkServiceActive",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "serviceId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6dfda2d2",
                        "sourceBytes": {
                            "begin": 10743,
                            "size": 122
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "pause",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "8456cb59",
                        "sourceBytes": {
                            "begin": 11315,
                            "size": 60
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 263,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.Order",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "buyer",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "payTo",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalAmount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "nonce",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "deadline",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Order",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_checkOrderSig",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "o",
                            "sig"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "dd97905a",
                        "sourceBytes": {
                            "begin": 1208,
                            "size": 594
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "astId": 278,
                                    "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.PriceQuote",
                                    "containingContract": "RecipientHandler",
                                    "structMembers": [
                                        {
                                            "name": "quoteId",
                                            "type": {
                                                "primitiveName": "bytes32",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "paymentToken",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "seller",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "price",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "cost",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "serviceId",
                                            "type": {
                                                "primitiveName": "uint128",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "expiry",
                                            "type": {
                                                "primitiveName": "uint64",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "PriceQuote",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_checkQuoteSig",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "q",
                            "sig"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4f7d7a5b",
                        "sourceBytes": {
                            "begin": 1808,
                            "size": 568
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_bindService",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "serviceId",
                            "seller"
                        ],
                        "returns": [],
                        "sighash": "266ea8db",
                        "sourceBytes": {
                            "begin": 618,
                            "size": 281
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 1638,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "BPS",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "249d39e9",
                        "sourceBytes": {
                            "begin": 2480,
                            "size": 36
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getSeller",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "serviceId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1d9021ea",
                        "sourceBytes": {
                            "begin": 10619,
                            "size": 118
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "h_setDistributionSC",
                        "notpayable": true,
                        "originalFile": "certora/harness/RecipientHandlerHarness.sol",
                        "paramNames": [
                            "d"
                        ],
                        "returns": [],
                        "sighash": "d40f9d77",
                        "sourceBytes": {
                            "begin": 390,
                            "size": 84
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "commissionRate",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5ea1d6f8",
                        "sourceBytes": {
                            "begin": 2424,
                            "size": 29
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "createService",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "serviceId",
                            "seller"
                        ],
                        "returns": [],
                        "sighash": "d94ee1fb",
                        "sourceBytes": {
                            "begin": 9982,
                            "size": 374
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "RecipientHandlerHarness",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCommissionRate",
                        "notpayable": true,
                        "originalFile": "contracts/RecipientHandler.sol",
                        "paramNames": [
                            "_commissionRate"
                        ],
                        "returns": [],
                        "sighash": "19fac8fd",
                        "sourceBytes": {
                            "begin": 9531,
                            "size": 226
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "name": "RecipientHandlerHarness",
                "original_file": "certora/harness/RecipientHandlerHarness.sol",
                "solidityTypes": [
                    {
                        "astId": 263,
                        "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.Order",
                        "containingContract": "RecipientHandler",
                        "structMembers": [
                            {
                                "name": "buyer",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "payTo",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "paymentToken",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalAmount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "nonce",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "quoteId",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "serviceId",
                                "type": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "deadline",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Order",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 278,
                        "canonicalId": "contracts/RecipientHandler.sol|RecipientHandler.PriceQuote",
                        "containingContract": "RecipientHandler",
                        "structMembers": [
                            {
                                "name": "quoteId",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "paymentToken",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "seller",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "price",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "cost",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "serviceId",
                                "type": {
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "expiry",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "PriceQuote",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 1402,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                        "containingContract": "ECDSA",
                        "enumMembers": [
                            {
                                "name": "NoError"
                            },
                            {
                                "name": "InvalidSignature"
                            },
                            {
                                "name": "InvalidSignatureLength"
                            },
                            {
                                "name": "InvalidSignatureS"
                            }
                        ],
                        "enumName": "RecoverError",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 3127,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Floor"
                            },
                            {
                                "name": "Ceil"
                            },
                            {
                                "name": "Trunc"
                            },
                            {
                                "name": "Expand"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    }
                ],
                "sourceBytes": {
                    "begin": 162,
                    "size": 2216
                },
                "srcmap": "162:2430:0:-:0;;;;;;;;;-1:-1:-1;162:2430:0;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2480:36:1:-;2510:6;;;:::i;:::-;2480:36;:::o;:::-;;;:::i;:::-;;:::o;162:2430:0:-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;2187:44:1:-;;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;162:2430:0:-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;2424:29:1:-;;;;;;:::i;:::-;;:::o;162:2430:0:-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;2356:29:1:-;;;;;;:::i;:::-;;:::o;162:2430:0:-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1533:195:1:-;1579:149;1533:195;:::o;:::-;;;:::i;:::-;;:::o;162:2430:0:-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1735:212:1:-;1776:171;1735:212;:::o;:::-;;;:::i;:::-;;:::o;162:2430:0:-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;12871:114:1:-;12952:12;12871:114;12926:7;;:::i;:::-;12959:4;12952:12;:::i;:::-;12945:19;:::o;1500:62:6:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;162:2430:0:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;12040:226:1:-;12123:15;:20;;12142:1;12123:20;:::i;:::-;;;:::i;:::-;;:45;;;;12040:226;12120:98;;12227:32;12244:15;12227:32;;:::i;:::-;12040:226::o;12120:98::-;12190:17;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;12123:45;12147:15;;:21;;12165:3;;:::i;:::-;12147:21;:::i;:::-;;;:::i;:::-;;12123:45;;12040:226;;;;:::i;:::-;:::o;162:2430:0:-;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;13128:118:1:-;13213:26;;13128:118;13188:7;;:::i;:::-;13213:15;;:26;:::i;:::-;;:::i;:::-;13206:33;:::o;162:2430:0:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;618:281::-;815:35;861:31;618:281;695:44;703:6;:20;;713:10;721:1;713:10;:::i;:::-;703:20;:::i;:::-;;;:::i;:::-;;;695:44;:::i;:::-;749:56;757:26;;:15;773:9;757:26;;:::i;:::-;;:::i;:::-;:40;;787:10;795:1;787:10;:::i;:::-;757:40;:::i;:::-;;;:::i;:::-;;749:56;:::i;:::-;815:26;:15;831:9;815:26;;:::i;:::-;:35;:::i;:::-;861:24;888:4;861:13;;:24;:::i;:::-;:31;:::i;:::-;618:281::o;162:2430::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;10910:735:1;;11407:66;10910:735;11415:26;;10910:735;11023:271;11074:19;;:::i;:::-;11050:242;11107:13;;:5;:13;;:::i;:::-;11134:5;11050:242;11134:18;;:5;:18;;:::i;:::-;11166:5;:12;;:5;:12;;:::i;:::-;11192:11;;:5;:11;;:::i;:::-;11217:10;;:5;:10;;:::i;:::-;11241:5;11270:12;;11241:15;;:5;:15;;:::i;:::-;11270:5;:12;;:::i;:::-;11050:242;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;11040:253;;;;:::i;:::-;;;:::i;:::-;;11023:271;:::i;:::-;11295:103;;;11426:14;11415:26;:::i;:::-;;;:::i;:::-;:42;;11445:12;;:5;:12;;:::i;:::-;11415:42;:::i;:::-;;;:::i;:::-;;11407:66;:::i;:::-;11483:53;11491:10;:26;;11505:12;;:5;:12;;:::i;:::-;11491:26;:::i;:::-;;;:::i;:::-;;11483:53;:::i;:::-;11547:35;11577:5;11547:27;:12;11560:13;;:5;:13;;:::i;:::-;11547:27;;:::i;:::-;:35;:::i;:::-;11624:13;;11612:10;11624:5;:13;;:::i;:::-;11597:41;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;10910:735::o;1500:62:6:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;13890:64:1:-;;;:::i;:::-;:::o;:::-;;;:::i;:::-;:::o;162:2430:0:-;;;:::o;1915:675::-;;2575:8;;2552:19;:31;1915:675;2552:19;:31;1915:675;2028:4;;:::i;:::-;2150:19;2061:367;2150:19;;:::i;:::-;2118:286;2191:9;;:1;:9;;:::i;:::-;2222:1;2118:286;2222:1;:14;;:1;:14;;:::i;:::-;2258:1;:8;:1;;:8;;:::i;:::-;2288:7;;:1;:7;;:::i;:::-;2317:6;;:1;:6;;:::i;:::-;2345:1;2378:8;;2345:11;;:1;:11;;:::i;:::-;2378:1;:8;;:::i;:::-;2118:286;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;2091:327;;;;:::i;:::-;;;:::i;:::-;;2061:367;:::i;:::-;2429:107;;;2567:3;2552:19;:::i;:::-;;;:::i;:::-;2575:1;:8;;:::i;:::-;2552:31;:::i;:::-;;;:::i;:::-;;2545:38;:::o;162:2430::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1726:280:15:-;1773:4;;:::i;:::-;1780:196;;;;;;;1992:7;;;:::i;:::-;1985:14;:::o;1500:62:6:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;12272:213:1:-;12355:15;:29;;12374:10;12382:1;12374:10;:::i;:::-;12355:29;:::i;:::-;;;:::i;:::-;;12352:85;;12446:32;12463:15;12446:32;;:::i;:::-;12272:213::o;12352:85::-;12406:20;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;12272:213;;;;:::i;:::-;:::o;13252:122::-;13343:24;;13252:122;13321:4;;:::i;:::-;13343:13;;:24;:::i;:::-;;:::i;:::-;13336:31;:::o;2801:228:6:-;2828:196;;;;;;3025:1;;:::i;:::-;2801:228::o;1500:62::-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;2685:116::-;2783:10;;2791:1;2783:10;:::i;:::-;;:::i;:::-;2685:116::o;:::-;;;:::i;:::-;:::o;162:2430:0:-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;12991:131:1:-;13087:28;12991:131;13087:21;:28;12991:131;13062:7;;:::i;:::-;13087:13;;:21;:::i;:::-;:28;:::i;:::-;;:::i;:::-;13080:35;:::o;538:385:13:-;902:14;;538:385;598:7;;:::i;:::-;608:278;;;;;;;;;;902:7;:14;:::i;:::-;;:::i;:::-;895:21;:::o;1500:62:6:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;13824:60:1:-;;;:::i;:::-;:::o;:::-;;;:::i;:::-;:::o;162:2430:0:-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;13649:117:1:-;;13736:1;13649:117;;;;;;;;;13673:31;13681:8;;;:::i;:::-;:13;;13693:1;13681:13;:::i;:::-;;;:::i;:::-;;13673:31;:::i;:::-;13714:12;;13725:1;13714:12;:::i;:::-;;;:::i;:::-;13736:1;:::i;:::-;13747:12;;13758:1;13747:12;:::i;:::-;;;:::i;:::-;13649:117::o;1315:72:15:-;;1379:1;1315:72;;;;;;;;;;;:::i;:::-;1379:1;:::i;:::-;1315:72::o;162:2430:0:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;:::o;:::-;;;:::o;3083:3633:1:-;;;;;;;;;;3380:14;;:5;:14;;:::i;:::-;3395:109;;;3516:26;;3527:15;3516:26;:::i;:::-;;;:::i;:::-;;3513:62;;3588:11;;:5;:11;;:::i;:::-;:28;;3603:13;3611:4;3603:13;:::i;:::-;3588:28;:::i;:::-;;;:::i;:::-;;3585:60;;3658:31;3659:30;;:13;3673:15;;3659:13;3673:5;:15;;:::i;:::-;3659:30;;:::i;:::-;;:::i;:::-;3658:31;;:::i;:::-;3655:69;;3739:13;;:5;:13;;:::i;:::-;:30;;3756:13;;:5;:13;;:::i;:::-;3739:30;:::i;:::-;;;:::i;:::-;;3735:78;;3827:15;;:5;:15;;:::i;:::-;:34;;3846:15;;:5;:15;;:::i;:::-;3827:34;:::i;:::-;;;:::i;:::-;;3823:78;;3915:18;;:5;:18;;:::i;:::-;:40;;3937:18;;:5;:18;;:::i;:::-;3915:40;:::i;:::-;;;:::i;:::-;;3911:78;;4003:17;;:5;:17;;:::i;:::-;:32;;4024:11;;:5;:11;;:::i;:::-;4003:32;:::i;:::-;;;:::i;:::-;;3999:83;;4097:27;;:12;4110:13;;:5;:13;;:::i;:::-;4097:27;;:::i;:::-;;:::i;:::-;4093:83;;4258:10;;:5;:10;;:::i;:::-;:15;;4272:1;4258:15;:::i;:::-;;;:::i;:::-;;:44;;;;3083:3633;4254:79;;4347:12;;:5;:12;;:::i;:::-;:30;;4362:15;4347:30;:::i;:::-;;;:::i;:::-;;4343:80;;4932:19;;4454:5;4467:11;4454:5;4467:11;;4454;;:5;:11;;:::i;:::-;4467:5;:11;;:::i;:::-;;;:::i;:::-;4504:308;4564:14;4540:270;4564:14;;:::i;:::-;4540:270;4592:11;;:5;:11;;:::i;:::-;4617:5;:11;;:5;:11;;:::i;:::-;4642:5;:18;;:5;:18;;:::i;:::-;4674:17;;:5;:17;;:::i;:::-;4705:11;;:5;:11;;:::i;:::-;4730:5;:13;;:5;:13;;:::i;:::-;4757:5;4786:14;;4757:15;;:5;:15;;:::i;:::-;4786:5;:14;;:::i;:::-;4540:270;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;4521:290;;;;:::i;:::-;;;:::i;:::-;;4504:308;:::i;:::-;4813:107;;;4947:3;4932:19;:::i;:::-;;;:::i;:::-;:34;;4955:11;;:5;:11;;:::i;:::-;4932:34;:::i;:::-;;;:::i;:::-;;4929:87;;5467:35;;5099:19;5048:271;5099:19;5075:242;5099:19;;:::i;:::-;5075:242;5159:18;;5132:13;;:5;:13;;:::i;:::-;5159:5;:18;;:::i;:::-;5191:5;:12;;:5;:12;;:::i;:::-;5217:11;;:5;:11;;:::i;:::-;5242:10;;:5;:10;;:::i;:::-;5266:5;5295:12;;5266:15;;:5;:15;;:::i;:::-;5295:5;:12;;:::i;:::-;5075:242;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;5065:253;;;;:::i;:::-;;;:::i;:::-;;5048:271;:::i;:::-;5320:112;;;5487:14;5467:35;:::i;:::-;;;:::i;:::-;5503:116;;;5632:15;:31;;5651:12;;:5;:12;;:::i;:::-;5632:31;:::i;:::-;;;:::i;:::-;;5628:62;;5723:32;;:15;5739;;:5;:15;;:::i;:::-;5723:32;;:::i;:::-;;:::i;:::-;5756:112;;;;5881:11;:25;;5896:10;5904:1;5896:10;:::i;:::-;5881:25;:::i;:::-;;;:::i;:::-;;5877:63;;5954:30;;:15;5973:11;5954:30;:::i;:::-;;;:::i;:::-;;5950:61;;6693:10;6032:5;6416:3;6032:5;;6038:103;;;;6154:18;:11;;:18;;:::i;:::-;:22;;6175:1;6154:22;:::i;:::-;;;:::i;:::-;;6150:94;;3083:3633;6258:2;;6257:3;6258:2;6257:3;;:::i;:::-;:28;;;3083:3633;6253:150;;3083:3633;6417:2;;6416:3;;:::i;:::-;6412:137;;3083:3633;6576:11;;:5;:11;;:::i;:::-;6597:5;:18;;:5;:18;;:::i;:::-;6625:5;6647:15;;6625:12;;:5;:12;;:::i;:::-;6647:5;:15;;:::i;:::-;6672:5;6693:10;;6672:11;;:5;:11;;:::i;:::-;6693:5;:10;;:::i;:::-;;;:::i;:::-;3083:3633::o;6412:137::-;6520:17;6472:18;;:5;:18;;:::i;:::-;6492:11;;:5;:11;;:::i;:::-;6505:13;6513:4;6505:13;:::i;:::-;6520:5;:17;;:5;:17;;:::i;:::-;;;:::i;:::-;6412:137;;6253:150;6306:86;6333:5;;:18;;:5;:18;;:::i;:::-;6353:5;:11;;:5;:11;;:::i;:::-;6366:13;6374:4;6366:13;:::i;:::-;6381:10;;6306:86;;:::i;:::-;6253:150;;;;6257:28;6264:10;:17;:10;;:17;;:::i;:::-;:21;;6284:1;6264:21;:::i;:::-;;;:::i;:::-;;6257:28;;6150:94;6197:36;6221:11;;;6197:36;:::i;:::-;6150:94;;;;;5950:61;5993:18;;:::i;:::-;5672;;;5993;;;;;;;;:::i;:::-;;;;5877:63;5915:25;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;5628:62;5672:18;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;4929:87;4988:17;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;4343:80;4404:19;;:::i;:::-;3556;;;4404;;;;;;;;:::i;:::-;;;;4254:79;4315:18;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;4258:44;4277:5;:10;;:5;:10;;:::i;:::-;:25;;4291:11;;:5;:11;;:::i;:::-;4277:25;:::i;:::-;;;:::i;:::-;;;4258:44;;4093:83;4155:21;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;3999:83;4060:22;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;3911:78;3972:17;;:::i;:::-;12190;;;3972;;;;;;;;:::i;:::-;;;;3823:78;3884:17;;:::i;:::-;12190;;;3884;;;;;;;;:::i;:::-;;;;3735:78;3796:17;;:::i;:::-;12190;;;3796;;;;;;;;:::i;:::-;;;;3655:69;3698:26;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;3585:60;3628:17;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;3513:62;3556:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;3083:3633;;;;;;;;;;;;;:::i;:::-;:::o;162:2430:0:-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1638:281:6:-;1684:7;;:::i;:::-;1694:196;;;;;;;1906:6;;;:::i;:::-;1899:13;:::o;162:2430:0:-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;480:132;587:18;480:132;547:1;:8;;552:3;;:::i;:::-;547:8;:::i;:::-;;;:::i;:::-;;;:17;;;480:132;539:38;;;:::i;:::-;587:18;;:::i;:::-;480:132::o;547:17::-;559:1;539:38;559:1;:5;;563:1;559:5;:::i;:::-;;;:::i;:::-;;547:17;;;;905:261;;1154:4;905:261;;;;;1113:12;1127:6;1135:9;1146:6;1154:4;;;:::i;:::-;905:261::o;13649:117:1:-;;13736:1;13649:117;13673:31;13681:8;;;:::i;:::-;:13;;13693:1;13681:13;:::i;:::-;;;:::i;:::-;;13673:31;:::i;:::-;13714:12;;13725:1;13714:12;:::i;:::-;;;:::i;:::-;13736:1;:::i;:::-;13747:12;;13758:1;13747:12;:::i;:::-;;;:::i;:::-;13649:117::o;162:2430:0:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;8736:694:1:-;;8812:5;:19;;8821:10;8829:1;8821:10;:::i;:::-;8812:19;:::i;:::-;;;:::i;:::-;;8809:75;;8896:11;:16;;8911:1;8896:16;:::i;:::-;;;:::i;:::-;;8893:71;;9000:32;;:25;:13;9014:10;9000:25;;:::i;:::-;9026:5;9000:32;;:::i;:::-;;:::i;:::-;9033:117;;;9162:30;;9181:11;9162:30;:::i;:::-;;;:::i;:::-;;9159:90;;9258:47;9294:11;9258:47;:32;:25;:13;9272:10;9258:25;;:::i;:::-;9284:5;9258:32;;:::i;:::-;:47;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;9354:11;9315:13;9322:5;9315:13;:::i;:::-;9342:10;9354:11;;;:::i;:::-;9395:10;9406:5;9412:11;9381:43;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;8736:694::o;9159:90::-;9214:24;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;8893:71;8934:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;8809:75;8853:20;;:::i;:::-;12406;;;8853;;;;;;;;:::i;:::-;;;;8736:694;;;;;:::i;:::-;:::o;10174:730::-;;10669:66;10174:730;10677:26;;10174:730;10285:271;10336:19;;:::i;:::-;10312:242;10369:13;;:5;:13;;:::i;:::-;10396:5;10312:242;10396:18;;:5;:18;;:::i;:::-;10428:5;:12;;:5;:12;;:::i;:::-;10454:11;;:5;:11;;:::i;:::-;10479:10;;:5;:10;;:::i;:::-;10503:5;10532:12;;10503:15;;:5;:15;;:::i;:::-;10532:5;:12;;:::i;:::-;10312:242;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;10302:253;;;;:::i;:::-;;;:::i;:::-;;10285:271;:::i;:::-;10557:103;;;10688:14;10677:26;:::i;:::-;;;:::i;:::-;:42;;10707:12;;:5;:12;;:::i;:::-;10677:42;:::i;:::-;;;:::i;:::-;;10669:66;:::i;:::-;10745:53;10753:10;:26;;10767:12;;:5;:12;;:::i;:::-;10753:26;:::i;:::-;;;:::i;:::-;;10745:53;:::i;:::-;10809:34;10839:4;10809:27;:12;10822:13;;:5;:13;;:::i;:::-;10809:27;;:::i;:::-;:34;:::i;:::-;10883:13;;10871:10;10883:5;:13;;:::i;:::-;10858:39;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;10174:730::o;390:84:0:-;449:18;390:84;449:18;;:::i;:::-;390:84::o;1500:62:6:-;;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;12491:374:1:-;;12580:26;;:15;12596:9;12580:26;;:::i;:::-;;:::i;:::-;:40;;12610:10;12618:1;12610:10;:::i;:::-;12580:40;:::i;:::-;;;:::i;:::-;;12577:104;;12693:6;:20;;12703:10;12711:1;12703:10;:::i;:::-;12693:20;:::i;:::-;;;:::i;:::-;;12690:76;;12775:35;12804:6;12775:26;:15;12791:9;12775:26;;:::i;:::-;:35;:::i;:::-;12848:9;12825:33;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;12491:374::o;12690:76::-;12735:20;;:::i;:::-;12406;;;12735;;;;;;;;:::i;:::-;;;;12577:104;12642:28;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;12491:374;;;;;:::i;:::-;:::o;1208:701:0:-;;1895:7;;1872:19;:30;1208:701;1872:19;:30;1208:701;1316:4;;:::i;:::-;1438:14;1349:399;1438:14;;:::i;:::-;1406:318;1474:7;:1;;:7;;:::i;:::-;1503:1;1406:318;1503:1;:7;;:1;:7;;:::i;:::-;1532:1;:14;;:1;:14;;:::i;:::-;1568:13;;:1;:13;;:::i;:::-;1603:7;;:1;:7;;:::i;:::-;1632:1;:9;;:1;:9;;:::i;:::-;1663:1;1696:10;;1663:11;;:1;:11;;:::i;:::-;1696:1;:10;;:::i;:::-;1406:318;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;1379:359;;;;:::i;:::-;;;:::i;:::-;;1349:399;:::i;:::-;1749:107;;;1887:3;1872:19;:::i;:::-;;;:::i;:::-;1895:1;:7;;:::i;:::-;1872:30;:::i;:::-;;;:::i;:::-;;1865:37;:::o;11652:382:1:-;11738:26;;:15;11754:9;11738:26;;:::i;:::-;;:::i;:::-;11765:113;;;11890:25;;:10;11903:12;11890:25;:::i;:::-;;;:::i;:::-;;11887:79;;11975:52;12003:13;11975:24;12002:25;12003:24;;:13;12017:9;12003:24;;:::i;:::-;;:::i;:::-;12002:25;;:::i;:::-;11975:13;;:24;:::i;:::-;:52;:::i;:::-;11652:382::o;11887:79::-;11937:18;;:::i;:::-;5672;;;11937;;;;;;;;:::i;:::-;;;;3416:329:6;3741:1;3416:329;3252:8;3459:281;;;;;;;;3741:1;:::i;:::-;3416:329::o;1500:62::-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;3178:238::-;3285:8;:22;;3297:10;3305:1;3297:10;:::i;:::-;3285:22;:::i;:::-;;;:::i;:::-;;3281:91;;3400:8;;;:::i;:::-;3178:238::o;3281:91::-;3330:31;3350:10;3358:1;3350:10;:::i;:::-;3330:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;3178:238;;;;:::i;:::-;:::o;162:2430:0:-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;15010:47:1:-;15038:17;;:::i;:::-;162:2430:0;;;15038:17:1;;;;;;;;:::i;:::-;;;;14957:47;14985:17;;:::i;:::-;162:2430:0;;;14985:17:1;;;;;;;;:::i;:::-;;;;1992:358:6;2038:196;;;;;;2247:7;;:::i;:::-;:23;;2258:12;;:::i;:::-;2247:23;:::i;:::-;;;:::i;:::-;;2243:101;;1992:358::o;2243:101::-;2293:40;2320:12;;:::i;:::-;2293:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;162:2430:0;;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;9436:705:1:-;9504:7;;:::i;:::-;9513:283;;;;;;;;;;9805:15;;:::i;:::-;9821:108;;10000:48;9938:53;10008:25;;10019:14;10008:25;:::i;:::-;;;:::i;:::-;;10000:48;:::i;:::-;10076:57;10105:16;10076:57;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;10066:68;;;;:::i;:::-;;;:::i;:::-;;10059:75;:::o;4077:720:16:-;4755:8;4077:720;4597:27;4077:720;4155:7;;:::i;:::-;4165:363;;;;;;;;;;;;;4597:27;:::i;:::-;4537:87;;;;4625:102;;;4755:8;:::i;:::-;4774:16;:::o;3549:228:15:-;3576:196;;;;;;3773:1;;:::i;:::-;3549:228::o;1565:66::-;;;:::i;:::-;1623:1;;:::i;:::-;1565:66::o;3417:132::-;3490:15;3500:5;3490:15;;:::i;:::-;3529:12;;:::i;:::-;3520:22;;;;;:::i;:::-;;;;;;:::i;:::-;;;;3417:132::o;:::-;;;:::i;:::-;:::o;162:2430:0:-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;3899:577:6:-;3963:281;;;;;;;;;4272:6;;;:::i;:::-;4279:109;;;4397:17;4406:8;4397:17;;:::i;:::-;4460:8;4429:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;3899:577::o;3057:228:15:-;3084:196;;;;;;3281:1;;:::i;:::-;3057:228::o;1315:72::-;;;:::i;:::-;1379:1;;:::i;:::-;1315:72::o;2927:130::-;3001:14;3011:4;3001:14;;:::i;:::-;3037:12;;:::i;:::-;3030:20;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2927:130::o;:::-;;;:::i;:::-;:::o;2074:324::-;2126:196;;;;;;2335:8;;:::i;:::-;2331:61;;2074:324::o;2331:61::-;2366:15;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;162:2430:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;1821:690:13:-;1895:360;;;;;;;;;;;;2282:16;2292:5;2282:16;:::i;:::-;2299:108;;;;2420:16;;2429:7;2420:16;:::i;:::-;;;:::i;:::-;;2416:89;;1821:690;;:::o;2416:89::-;2459:35;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;670:69:5;697:42;670:69;:::o;697:42::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;3443:665;;3509:7;;:::i;:::-;3519:386;;;;;;;;;;;;;3918:18;:11;;:18;;:::i;:::-;:23;;3940:1;3918:23;:::i;:::-;;;:::i;:::-;;3914:41;;3974:25;:7;;;;;;:::i;:::-;3987:11;3974:25;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;4000:102;;;;3443:665::o;3914:41::-;3950:5;;;3943:12;:::o;162:2430:0:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;:::o;:::-;608:278:13;162:2430:0;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;396:43:5:-;429:10;;;:::i;:::-;396:43;:::o;429:10::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;573:43::-;606:10;;;:::i;:::-;573:43;:::o;606:10::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;:::o;832:2537::-;;;;;;965:4;;:::i;:::-;976:634;;;;;;;;;;;;;;;;;;;;;;1623:17;:10;;:17;;:::i;:::-;:21;;1643:1;1623:21;:::i;:::-;;;:::i;:::-;;1619:39;;1669:15;;:::i;:::-;1685:109;;1803:139;;1956:8;;:26;;1968:14;;:::i;:::-;1956:26;:::i;:::-;;;:::i;:::-;;1952:1411;;;;2161:10;2150:89;;2161:14;2035:204;2161:10;2035:204;2161:10;;:14;2172:1;2161:14;:::i;:::-;;;;;:::i;:::-;2150:89;;:::i;:::-;;;;;:::i;:::-;2035:204;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;2257:5;:15;;:5;2266:6;2257:15;:::i;:::-;;;:::i;:::-;;;:38;;;;;1952:1411;2253:56;;;2354:116;:5;;;2365:104;2354:5;2365:104;2354:5;2365:104;2354:5;2405:8;2415:5;2422:7;2431:5;2438:8;2448:1;2451;2454;2365:104;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;2354:116;;;;;;;;;2488:3;2354:116;;:::i;:::-;2489:2;2488:3;;:::i;:::-;2484:21;;2586:10;:3;:10;:::i;:::-;:15;;2600:1;2586:15;:::i;:::-;;;:::i;:::-;;2582:32;;2635:23;2646:3;2635:23;;;;:::i;:::-;;;;;;;;:::i;:::-;2628:30;:::o;2582:32::-;2610:4;;2603:11;:::o;2484:21::-;2500:5;;2493:12;:::o;2253:56::-;2304:5;;;;;;;;;;2297:12;:::o;2257:38::-;2276:7;;:19;;:7;2287:8;2276:19;:::i;:::-;;;:::i;:::-;;;2257:38;;;1952:1411;2679:8;;;;;:26;;2691:14;;:::i;:::-;2679:26;:::i;:::-;;;:::i;:::-;;2675:688;;;;2849:95;;2860:14;2721:223;2860:10;2721:223;2860:10;;:14;2871:1;2860:14;:::i;:::-;;;;;:::i;:::-;2849:95;;:::i;:::-;;;;;:::i;:::-;2721:223;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;2962:6;:16;;:6;2972;2962:16;:::i;:::-;;;:::i;:::-;;;:39;;;;;2675:688;2958:57;;;3060:124;:5;;;3071:112;3060:5;3071:112;3060:5;3071:112;3060:5;3111:8;3121:6;3129:7;3138:5;3145:6;3153:7;3162:1;3165;3168;3071:112;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;3060:124;;;;;;;;;3202:3;3060:124;;:::i;:::-;3203:2;3202:3;;:::i;:::-;3198:21;;3237:10;:3;:10;:::i;:::-;:15;;3251:1;3237:15;:::i;:::-;;;:::i;:::-;;3233:32;;3286:23;3297:3;3286:23;;;;:::i;:::-;;;;;;;;:::i;:::-;3279:30;:::o;3233:32::-;3261:4;;3254:11;:::o;3198:21::-;3214:5;;3207:12;:::o;2958:57::-;3010:5;;;;;;;;;;;3003:12;:::o;2962:39::-;2982:7;;:19;;:7;2993:8;2982:19;:::i;:::-;;;:::i;:::-;;;2962:39;;;2675:688;3347:5;;;;;;;3340:12;:::o;1619:39::-;1653:5;;;;;;1646:12;:::o;162:2430:0:-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;4167:727:5;;4818:23;:13;:39;4167:727;;;4276:525;;;;;;;;;;;;;;;;;;4818:13;:::i;:::-;:23;:::i;:::-;:39;:23;4842:5;4849:7;4818:39;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;4810:77;4818:39;;;;;4167:727;4861:4;4818:47;;4861:4;4818:47;:::i;:::-;;;:::i;:::-;;;4810:77;:::i;:::-;4167:727::o;4818:39::-;:47;:39;;;;:47;:39;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;162:2430:0:-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;6722:1990:1:-;;;;6929:700;;;;;;;;;;;;;;;;;;;;;;;;7641:5;:19;;7650:10;7658:1;7650:10;:::i;:::-;7641:19;:::i;:::-;;;:::i;:::-;;:49;;;;6722:1990;7641:73;;;;6722:1990;7638:129;;8078:13;8232:47;7870:12;8039:6;7863:20;7870:12;7863:20;:::i;:::-;7884:102;;;8018:5;8025:13;8033:4;8025:13;:::i;:::-;8039:6;;;;:::i;:::-;8078;:13;:::i;:::-;8092:110;;;8256:14;;;:::i;:::-;8232:47;8272:6;8232:47;:::i;:::-;;;:::i;:::-;8280:111;;;;8400:60;8440:19;:6;8449:10;8440:19;;:::i;:::-;8400:60;:35;:21;:13;8414:6;8400:21;;:::i;:::-;8422:12;8400:35;;:::i;:::-;:60;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;8473:10;:14;;8486:1;8473:14;:::i;:::-;;;:::i;:::-;;8470:182;;6722:1990;8675:5;;8681:6;8688;8695:9;8666:39;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;6722:1990::o;8470:182::-;8502:20;8552:10;8509:12;8502:20;:::i;:::-;8536:14;;;:::i;:::-;8552:10;;;:::i;:::-;8577:40;:29;8591:14;;;:::i;:::-;8577:29;:::i;:::-;:40;:::i;:::-;;;8618:10;8630;8638:1;8630:10;:::i;:::-;8577:64;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;8470:182;;;;8577:64;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;7638:129::-;7736:20;;:::i;:::-;12406;;;7736;;;;;;;;:::i;:::-;;;;7641:73;7694:6;;:20;;7704:10;7712:1;7704:10;:::i;:::-;7694:20;:::i;:::-;;;:::i;:::-;;7641:73;;:49;7664:12;;:26;;7680:10;7688:1;7680:10;:::i;:::-;7664:26;:::i;:::-;;;:::i;:::-;;7641:49;;162:2430:0;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1219:599:11:-;;1767:43;;1219:599;1767:43;;1219:599;1292:439;;;;;;;;;;;;;;;1782:14;1767:43;1782:14;1799:2;1803:5;1767:43;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;1219:599::o;656:292:12:-;709:7;;:::i;:::-;719:196;;;;;;;931:10;924:17;:::o;162:2430:0:-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;:::o;2129:1141:16:-;;;;2232:17;;:::i;:::-;2251:16;;;:::i;:::-;2269:14;;;:::i;:::-;2286:363;;;;;;;;;;;;;2662:16;:9;:16;:::i;:::-;:22;;2682:2;2662:22;:::i;:::-;;;:::i;:::-;;2658:606;;;;3114:25;2700:9;;;;:::i;:::-;2723;;;:::i;:::-;2746:7;;;:::i;:::-;2898:196;;;;;;;;;;;;;;;3134:1;3137;3114:25;;:::i;:::-;3107:32;;;;;:::o;2658:606::-;3186:1;3178:10;3186:1;3178:10;:::i;:::-;3190:35;3227:25;3235:16;3190:35;3235:9;:16;:::i;:::-;3227:25;:::i;:::-;3170:83;;;;:::o;162:2430:0:-;;;;;;;;;;;;;;-1:-1:-1;162:2430:0;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;10309:895:16:-;10382:363;;;;;;;;;;;;10758:5;:29;;10767:20;10758:29;:::i;:::-;;;:::i;:::-;;10754:444;;;;10803:7;;:::o;10754:444::-;10854:5;:38;;10863:29;10854:38;:::i;:::-;;;:::i;:::-;;10850:348;;;;10915:23;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;10850:348;10959:5;:44;;10968:35;10959:44;:::i;:::-;;;:::i;:::-;;10955:243;;;;11026:46;11054:17;11062:8;11054:17;:::i;:::-;11026:46;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;10955:243;11093:39;;11102:30;11093:39;:::i;:::-;;;:::i;:::-;;11089:109;;10955:243;10309:895::o;11089:109::-;11155:32;11178:8;11155:32;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;2470:322:15;2519:196;;;;;;2728:9;2729:8;;:::i;:::-;2728:9;;:::i;:::-;2724:62;;2470:322::o;2724:62::-;2760:15;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;162:2430:0;;;;;;:::i;:::-;;:::o;1037:673:13:-;1677:14;1037:673;1097:7;;:::i;:::-;1107:278;;;;;;;;;;1677:7;:14;:::i;:::-;:16;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;1670:23;:::o;162:2430:0:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;2057:708:11:-;2704:53;2057:708;2704:53;;2057:708;;2704:53;2057:708;2148:520;;;;;;;;;;;;;;;;;;2719:18;2704:53;2719:18;2740:4;2746:2;2750:5;2704:53;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;2057:708::o;162:2430:0:-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;990:49:14:-;1035:4;;;:::i;:::-;990:49;:::o;1035:4::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;897:47::-;940:4;;;:::i;:::-;897:47;:::o;940:4::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;12914:4123:18:-;;;;;12996:14;;:::i;:::-;13013:440;;;;;;;;;;;;;;;;13516:12;13523:1;13526;13516:12;;:::i;:::-;13486:42;;;13610:4;;:9;;13618:1;13610:9;:::i;:::-;;;:::i;:::-;;13606:365;;14081:11;:19;;14096:4;14081:19;:::i;:::-;;;:::i;:::-;;;14077:142;;16490:36;14471:17;;16980:13;14471:17;;;15528:11;14471:17;;;:::i;:::-;14502:308;;;;;;;;;;15029:11;15074:384;15029:11;15044:15;:1;:15;15048:11;15044:15;;:::i;:::-;;:::i;:::-;15029:31;15074:384;;;;;;;;;;;;15528:11;;:::i;:::-;15521:18;15893:1;16501:25;16416:36;16343;16272;16200;16130;15893:15;:1;:15;15897:11;15893:15;;:::i;:::-;;:::i;:::-;15892:21;15912:1;15892:21;:::i;:::-;;16141:25;:1;:25;16145:21;:11;16159:7;16145:21;;:::i;:::-;16141:25;;:::i;:::-;;:::i;:::-;16130:36;;:::i;:::-;16211:25;:1;:25;16215:21;:11;16229:7;16215:21;;:::i;:::-;16211:25;;:::i;:::-;;:::i;:::-;16200:36;;:::i;:::-;16283:25;:1;:25;16287:21;:11;16301:7;16287:21;;:::i;:::-;16283:25;;:::i;:::-;;:::i;:::-;16272:36;;:::i;:::-;16354:25;:1;:25;16358:21;:11;16372:7;16358:21;;:::i;:::-;16354:25;;:::i;:::-;;:::i;:::-;16343:36;;:::i;:::-;16427:25;:1;:25;16431:21;:11;16445:7;16431:21;;:::i;:::-;16427:25;;:::i;:::-;;:::i;:::-;16416:36;;:::i;:::-;16501:1;:25;16505:21;16501:1;16505:11;16519:7;16505:21;;:::i;:::-;16501:25;;:::i;:::-;;:::i;:::-;16490:36;;:::i;:::-;16980:13;;:::i;:::-;17007;:::o;14077:142::-;14132:71;14140:11;:16;;14155:1;14140:16;:::i;:::-;;;:::i;:::-;;14158:22;;:::i;:::-;14182:20;;:::i;:::-;14132:71;;:::i;:::-;;:::i;13606:365::-;13939:3;;;;:17;:3;;:17;:::i;:::-;13932:24;:::o;162:2430:0:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;13488:1302:11:-;;14207:421;;13488:1302;13559:359;;;;;;;;;;;;13927:18;;:::i;:::-;13946:111;;14066:19;;:::i;:::-;14086:112;;14207:421;;;;;;;;;;;;;;;14642:10;:15;;14656:1;14642:15;:::i;:::-;;;:::i;:::-;;:68;;;;14668:5;14660:14;14668:5;14660:14;:::i;:::-;:26;:31;;14690:1;14660:31;:::i;:::-;;;:::i;:::-;;14642:68;14638:146;;13488:1302;:::o;14638:146::-;14758:14;14733:40;14766:5;14758:14;:::i;:::-;14733:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;14642:68;14694:16;;14709:1;14694:16;:::i;:::-;;;:::i;:::-;;;14642:68;;14207:421;;;;;;;;;;162:2430:0;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;7001:2169:16:-;;;;7127:17;;:::i;:::-;7146:16;;;:::i;:::-;7164:14;;;:::i;:::-;7181:511;;;;;;;;;;;;;;;;;;;8579:10;8587:1;8579:10;:::i;:::-;:79;;8592:66;8579:79;:::i;:::-;;;:::i;:::-;;8575:164;;8860:4;8850:24;;8860:4;;8850:24;8860:4;;8866:1;8869;8850:24;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;8875:107;;;8995:6;:20;;9005:10;9013:1;9005:10;:::i;:::-;8995:20;:::i;:::-;;;:::i;:::-;;8991:113;;9130:20;9160:1;9152:10;9160:1;9152:10;:::i;:::-;9114:49;;;;:::o;8991:113::-;9047:1;9039:10;9047:1;9039:10;:::i;:::-;9051:29;9090:1;9082:10;9090:1;9082:10;:::i;:::-;9031:62;;;;:::o;8850:24::-;;:::i;8575:164::-;8690:1;;;8682:10;8690:1;8682:10;:::i;:::-;8694:30;;8726:1;8674:54;;;;:::o;1379:902:18:-;;1440:12;;:::i;:::-;1454:11;;;:::i;:::-;1468:352;;;;;;;;;;;;;2116:159;;;;;;;;;;;;;;;1379:902;:::o;8897:732::-;9585:26;9575:36;8897:732;;8975:7;;:::i;:::-;8985:438;;;;;;;;;;;;;;;;9570:1;9576;:5;9601:9;9585:26;:::i;:::-;9575:36;;:::i;:::-;9570:42;9563:49;:::o;1776:471:14:-;1820:277;;;;;;;;;2106:135;;;;;;;;56028:419:19;56075:9;;:::i;:::-;56087:274;;;;;;;;;;56370:71;;56028:419;:::o",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 2999,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "bool",
                                "type": "Primitive"
                            },
                            "label": "_paused",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_bool"
                        },
                        {
                            "astId": 2197,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "_owner",
                            "offset": 1,
                            "slot": "0",
                            "type": "t_address"
                        },
                        {
                            "astId": 2932,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "_nonces",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_mapping(t_address,t_uint256)"
                        },
                        {
                            "astId": 294,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "mappingKeyType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "20",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "mappingValueType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "32",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Mapping"
                                },
                                "type": "Mapping"
                            },
                            "label": "sellersProfit",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
                        },
                        {
                            "astId": 298,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "16",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "1",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "serviceActive",
                            "offset": 0,
                            "slot": "3",
                            "type": "t_mapping(t_uint128,t_bool)"
                        },
                        {
                            "astId": 302,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "16",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint128",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "serviceToSeller",
                            "offset": 0,
                            "slot": "4",
                            "type": "t_mapping(t_uint128,t_address)"
                        },
                        {
                            "astId": 306,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "1",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "revokedQuote",
                            "offset": 0,
                            "slot": "5",
                            "type": "t_mapping(t_bytes32,t_bool)"
                        },
                        {
                            "astId": 312,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "distributionSC",
                            "offset": 0,
                            "slot": "6",
                            "type": "t_address"
                        },
                        {
                            "astId": 314,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "commissionRate",
                            "offset": 0,
                            "slot": "7",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 321,
                            "contract": "/root/RWAInc-Projects/Recipient-Handler/.certora_internal/25_10_02_19_16_38_164/.certora_sources/certora/harness/RecipientHandlerHarness.sol:RecipientHandlerHarness",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint8",
                                "type": "Primitive"
                            },
                            "label": "unlocked",
                            "offset": 0,
                            "slot": "8",
                            "type": "t_uint8"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_bytes32": {
                            "encoding": "inplace",
                            "label": "bytes32",
                            "numberOfBytes": "32"
                        },
                        "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => mapping(address => uint256))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_uint256)"
                        },
                        "t_mapping(t_address,t_uint256)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => uint256)",
                            "numberOfBytes": "32",
                            "value": "t_uint256"
                        },
                        "t_mapping(t_bytes32,t_bool)": {
                            "encoding": "mapping",
                            "key": "t_bytes32",
                            "label": "mapping(bytes32 => bool)",
                            "numberOfBytes": "32",
                            "value": "t_bool"
                        },
                        "t_mapping(t_uint128,t_address)": {
                            "encoding": "mapping",
                            "key": "t_uint128",
                            "label": "mapping(uint128 => address)",
                            "numberOfBytes": "32",
                            "value": "t_address"
                        },
                        "t_mapping(t_uint128,t_bool)": {
                            "encoding": "mapping",
                            "key": "t_uint128",
                            "label": "mapping(uint128 => bool)",
                            "numberOfBytes": "32",
                            "value": "t_bool"
                        },
                        "t_uint128": {
                            "encoding": "inplace",
                            "label": "uint128",
                            "numberOfBytes": "16"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        },
                        "t_uint8": {
                            "encoding": "inplace",
                            "label": "uint8",
                            "numberOfBytes": "1"
                        }
                    }
                },
                "transientStorageLayout": null,
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "origSourceDir": ".pre_autofinders.1",
        "primary_contract": "RecipientHandlerHarness",
        "primary_contract_address": "00000000ce4604a0000000000000000000000013",
        "prototypeFor": [],
        "sdc_name": "RecipientHandlerHarness.sol_1",
        "sourceDir": ".post_autofinders.1",
        "srclist": {
            "0": "certora/harness/RecipientHandlerHarness.sol",
            "1": "contracts/RecipientHandler.sol",
            "2": "contracts/interfaces/IDistribution.sol",
            "3": "contracts/libraries/Constants.sol",
            "4": "contracts/libraries/Errors.sol",
            "5": "contracts/libraries/PermitHelper.sol",
            "6": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
            "7": "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol",
            "8": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
            "9": "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol",
            "10": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
            "11": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
            "12": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "13": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
            "14": "node_modules/@openzeppelin/contracts/utils/Panic.sol",
            "15": "node_modules/@openzeppelin/contracts/utils/Pausable.sol",
            "16": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
            "17": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
            "18": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
            "19": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    }
}