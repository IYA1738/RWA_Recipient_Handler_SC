{"abi":[{"type":"function","name":"accessList","inputs":[{"name":"access","type":"tuple[]","internalType":"struct VmSafe.AccessListItem[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"storageKeys","type":"bytes32[]","internalType":"bytes32[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialReverts","type":"tuple[]","internalType":"struct VmSafe.PotentialRevert[]","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialRevert","type":"tuple","internalType":"struct VmSafe.PotentialRevert","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"attachBlob","inputs":[{"name":"blob","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"attachDelegation","inputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"attachDelegation","inputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]},{"name":"crossChain","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cloneAccount","inputs":[{"name":"source","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"contains","inputs":[{"name":"subject","type":"string","internalType":"string"},{"name":"search","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"cool","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coolSlot","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyStorage","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eip712HashStruct","inputs":[{"name":"bindingsPath","type":"string","internalType":"string"},{"name":"typeName","type":"string","internalType":"string"},{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashStruct","inputs":[{"name":"typeNameOrDefinition","type":"string","internalType":"string"},{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashType","inputs":[{"name":"bindingsPath","type":"string","internalType":"string"},{"name":"typeName","type":"string","internalType":"string"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashType","inputs":[{"name":"typeNameOrDefinition","type":"string","internalType":"string"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashTypedData","inputs":[{"name":"jsonData","type":"string","internalType":"string"}],"outputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCreate","inputs":[{"name":"bytecode","type":"bytes","internalType":"bytes"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCreate2","inputs":[{"name":"bytecode","type":"bytes","internalType":"bytes"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"foundryVersionAtLeast","inputs":[{"name":"version","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"foundryVersionCmp","inputs":[{"name":"version","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByCode","inputs":[{"name":"code","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByDeployedCode","inputs":[{"name":"deployedCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBroadcast","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple","internalType":"struct VmSafe.BroadcastTxSummary","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getChain","inputs":[{"name":"chainAlias","type":"string","internalType":"string"}],"outputs":[{"name":"chain","type":"tuple","internalType":"struct VmSafe.Chain","components":[{"name":"name","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"chainAlias","type":"string","internalType":"string"},{"name":"rpcUrl","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"getChain","inputs":[{"name":"chainId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"chain","type":"tuple","internalType":"struct VmSafe.Chain","components":[{"name":"name","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"chainAlias","type":"string","internalType":"string"},{"name":"rpcUrl","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployments","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddresses","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRawBlockHeader","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"rlpHeader","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"getStateDiff","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getStateDiffJson","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getWallets","inputs":[],"outputs":[{"name":"wallets","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"interceptInitcode","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockFunction","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"noAccessList","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlTypeArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"randomBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomBytes","inputs":[{"name":"len","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"randomBytes4","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"randomBytes8","inputs":[],"outputs":[{"name":"","type":"bytes8","internalType":"bytes8"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"language","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToState","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToStateAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"overwrite","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSeed","inputs":[{"name":"seed","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"shuffle","inputs":[{"name":"array","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"crossChain","type":"bool","internalType":"bool"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"crossChain","type":"bool","internalType":"bool"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotState","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sort","inputs":[{"name":"array","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startDebugTraceRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnDebugTraceRecording","inputs":[],"outputs":[{"name":"step","type":"tuple[]","internalType":"struct VmSafe.DebugStep[]","components":[{"name":"stack","type":"uint256[]","internalType":"uint256[]"},{"name":"memoryInput","type":"bytes","internalType":"bytes"},{"name":"opcode","type":"uint8","internalType":"uint8"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isOutOfGas","type":"bool","internalType":"bool"},{"name":"contractAddr","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopRecord","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"warmSlot","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accessList((address,bytes32[])[])":"743e4cb7","accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","assumeNoRevert((address,bool,bytes))":"d8591eeb","assumeNoRevert((address,bool,bytes)[])":"8a4592cc","assumeNoRevert()":"285b366a","attachBlob(bytes)":"10cb385c","attachDelegation((uint8,bytes32,bytes32,uint64,address))":"14ae3519","attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)":"f4460d34","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","cloneAccount(address,address)":"533d61c9","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","contains(string,string)":"3fb18aec","cool(address)":"40ff9f21","coolSlot(address,bytes32)":"8c78e654","copyFile(string,string)":"a54a87d8","copyStorage(address,address)":"203dac0d","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deleteStateSnapshot(uint256)":"08d6b37a","deleteStateSnapshots()":"e0933c74","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deployCode(string,bytes,bytes32)":"016155bf","deployCode(string,bytes,uint256)":"ff5d64e4","deployCode(string,bytes,uint256,bytes32)":"3aa773ea","deployCode(string,bytes32)":"17ab1d79","deployCode(string,uint256)":"0af6a701","deployCode(string,uint256,bytes32)":"002cb687","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","eip712HashStruct(string,bytes)":"aedeaebc","eip712HashStruct(string,string,bytes)":"6d06c57c","eip712HashType(string)":"6792e9e2","eip712HashType(string,string)":"18fb6406","eip712HashTypedData(string)":"ea25e615","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectCreate(bytes,address)":"73cdce36","expectCreate2(bytes,address)":"ea54a472","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(address,uint64)":"b43aece3","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmit(bool,bool,bool,bool,address,uint64)":"c339d02c","expectEmit(bool,bool,bool,bool,uint64)":"5e1d1c33","expectEmit(uint64)":"4c74a335","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectPartialRevert(bytes4,address)":"51aa008a","expectRevert()":"f4844814","expectRevert(address)":"d814f38a","expectRevert(address,uint64)":"1ff5f952","expectRevert(bytes)":"f28dceb3","expectRevert(bytes,address)":"61ebcf12","expectRevert(bytes,address,uint64)":"d345fb1f","expectRevert(bytes,uint64)":"4994c273","expectRevert(bytes4)":"c31eb0e0","expectRevert(bytes4,address)":"260bc5de","expectRevert(bytes4,address,uint64)":"b0762d73","expectRevert(bytes4,uint64)":"e45ca72d","expectRevert(uint64)":"4ee38244","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","foundryVersionAtLeast(string)":"6248be1f","foundryVersionCmp(string)":"ca7b0a09","fsMetadata(string)":"af368a08","getArtifactPathByCode(bytes)":"eb74848c","getArtifactPathByDeployedCode(bytes)":"6d853ba5","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getBroadcast(string,uint64,uint8)":"3dc90cb3","getBroadcasts(string,uint64)":"f2fa4a26","getBroadcasts(string,uint64,uint8)":"f7afe919","getChain(string)":"4cc1c2bb","getChain(uint256)":"b6791ad4","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getDeployment(string)":"a8091d97","getDeployment(string,uint64)":"0debd5d6","getDeployments(string,uint64)":"74e133dd","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRawBlockHeader(uint256)":"2c667606","getRecordedLogs()":"191553a4","getStateDiff()":"80df01cc","getStateDiffJson()":"f54fe009","getWallets()":"db7a4605","indexOf(string,string)":"8a0807b7","interceptInitcode()":"838653c7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,bytes4,bytes)":"08e0c537","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCall(address,uint256,bytes4,bytes)":"e7b36a3d","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,bytes4,bytes)":"2dfba5df","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","mockCallRevert(address,uint256,bytes4,bytes)":"596c8f04","mockCalls(address,bytes,bytes[])":"5c5c3de9","mockCalls(address,uint256,bytes,bytes[])":"08bcbae1","mockFunction(address,address,bytes)":"adf84d21","noAccessList()":"238ad778","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlType(string,string)":"47fa5e11","parseTomlType(string,string,string)":"f9fa5cdb","parseTomlTypeArray(string,string,string)":"49be3743","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prank(address,address,bool)":"7d73d042","prank(address,bool)":"a7f8bf5c","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomBool()":"cdc126bd","randomBytes(uint256)":"6c5d32a9","randomBytes4()":"9b7cd579","randomBytes8()":"0497b0a5","randomInt()":"111f1202","randomInt(uint256)":"12845966","randomUint()":"25124730","randomUint(uint256)":"cf81e69c","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","rememberKeys(string,string,string,uint32)":"f8d58eaf","rememberKeys(string,string,uint32)":"97cb9189","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revertToState(uint256)":"c2527405","revertToStateAndDelete(uint256)":"3a1985dc","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setArbitraryStorage(address)":"e1631837","setArbitraryStorage(address,bool)":"d3ec2a0b","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","setSeed(uint256)":"c32a50f9","shuffle(uint256[])":"54f1469c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signAndAttachDelegation(address,uint256)":"c7fa7288","signAndAttachDelegation(address,uint256,bool)":"d936e146","signAndAttachDelegation(address,uint256,uint64)":"cde3e5be","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signDelegation(address,uint256)":"5b593c7b","signDelegation(address,uint256,bool)":"cdd7563d","signDelegation(address,uint256,uint64)":"ceba2ec3","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","skip(bool,string)":"c42a80a7","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","snapshotGasLastCall(string)":"dd9fca12","snapshotGasLastCall(string,string)":"200c6772","snapshotState()":"9cd23835","snapshotValue(string,string,uint256)":"6d2b27d8","snapshotValue(string,uint256)":"51db805a","sort(uint256[])":"9ec8b026","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startDebugTraceRecording()":"419c8832","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startPrank(address,address,bool)":"4eb859b5","startPrank(address,bool)":"1cc0b435","startSnapshotGas(string)":"3cad9d7b","startSnapshotGas(string,string)":"6cd0cc53","startStateDiffRecording()":"cf22e3c9","stopAndReturnDebugTraceRecording()":"ced398a2","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","stopRecord()":"996be76d","stopSnapshotGas()":"f6402eda","stopSnapshotGas(string)":"773b2805","stopSnapshotGas(string,string)":"0c9db707","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warmSlot(address,bytes32)":"b23184cf","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"storageKeys\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct VmSafe.AccessListItem[]\",\"name\":\"access\",\"type\":\"tuple[]\"}],\"name\":\"accessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert[]\",\"name\":\"potentialReverts\",\"type\":\"tuple[]\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert\",\"name\":\"potentialRevert\",\"type\":\"tuple\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"name\":\"attachBlob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cloneAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"search\",\"type\":\"string\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"coolSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteStateSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteStateSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"jsonData\",\"type\":\"string\"}],\"name\":\"eip712HashTypedData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionAtLeast\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionCmp\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcast\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"deployedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getRawBlockHeader\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rlpHeader\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiff\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiffJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interceptInitcode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noAccessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes8\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToStateAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"overwrite\",\"type\":\"bool\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"setSeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"shuffle\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"sort\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDebugTraceRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnDebugTraceRecording\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"memoryInput\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"opcode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isOutOfGas\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.DebugStep[]\",\"name\":\"step\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"warmSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accessList((address,bytes32[])[])\":{\"notice\":\"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions.\"},\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert((address,bool,bytes))\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters.\"},\"assumeNoRevert((address,bool,bytes)[])\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"attachBlob(bytes)\":{\"notice\":\"Attach an EIP-4844 blob to the next call\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address))\":{\"notice\":\"Designate the next call as an EIP-7702 transaction\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)\":{\"notice\":\"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"cloneAccount(address,address)\":{\"notice\":\"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"contains(string,string)\":{\"notice\":\"Returns true if `search` is found in `subject`, false otherwise.\"},\"cool(address)\":{\"notice\":\"Marks the slots of an account and the account address as cold.\"},\"coolSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as cold, simulating no prior read.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions.\"},\"deleteSnapshots()\":{\"notice\":\"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions.\"},\"deleteStateSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteStateSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deployCode(string,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"eip712HashStruct(string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Supports 2 different inputs: 1. Name of the type (i.e. \\\"PermitSingle\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will use the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashStruct(string,string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"PermitSingle\\\"). * `abiEncodedData`: ABI-encoded data for the struct that is being hashed.\"},\"eip712HashType(string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Supports 2 different inputs: 1. Name of the type (i.e. \\\"Transaction\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will output the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashType(string,string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"Transaction\\\").\"},\"eip712HashTypedData(string)\":{\"notice\":\"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCreate(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode\"},\"expectCreate2(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with all topic and data checks enabled.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool,address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with the provided topics.\"},\"expectEmit(bool,bool,bool,bool,uint64)\":{\"notice\":\"Expect a given number of logs with the provided topics.\"},\"expectEmit(uint64)\":{\"notice\":\"Expect a given number of logs with all topic and data checks enabled.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data.\"},\"expectRevert(bytes,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectRevert(bytes4,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data.\"},\"expectRevert(bytes4,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that match the revert data.\"},\"expectRevert(uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"foundryVersionAtLeast(string)\":{\"notice\":\"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`.\"},\"foundryVersionCmp(string)\":{\"notice\":\"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\\\"1.0.0\\\") >= 0) { ... }`\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBroadcast(string,uint64,uint8)\":{\"notice\":\"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`.\"},\"getBroadcasts(string,uint64)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getBroadcasts(string,uint64,uint8)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getChain(string)\":{\"notice\":\"Returns a Chain struct for specific alias\"},\"getChain(uint256)\":{\"notice\":\"Returns a Chain struct for specific chainId\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployment(string)\":{\"notice\":\"Returns the most recent deployment for the current `chainId`.\"},\"getDeployment(string,uint64)\":{\"notice\":\"Returns the most recent deployment for the given contract on `chainId`\"},\"getDeployments(string,uint64)\":{\"notice\":\"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRawBlockHeader(uint256)\":{\"notice\":\"Gets the RLP encoded block header for a given block number. Returns the block header in the same format as `cast block <block_number> --raw`.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"getStateDiff()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session.\"},\"getStateDiffJson()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session, in json format.\"},\"getWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"interceptInitcode()\":{\"notice\":\"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer. This allows type-safe access to the initcode payload that would be used for contract creation. Example usage: vm.interceptInitcode(); bytes memory initcode; try new MyContract(param1, param2) { assert(false); } catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call from the callee perspective.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory EVM state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCall(address,uint256,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockCallRevert(address,uint256,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCalls(address,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address, returning specified data for each call.\"},\"mockCalls(address,uint256,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"noAccessList()\":{\"notice\":\"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns a random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns a random byte array value of the given length.\"},\"randomBytes4()\":{\"notice\":\"Returns a random fixed-size byte array of length 4.\"},\"randomBytes8()\":{\"notice\":\"Returns a random fixed-size byte array of length 8.\"},\"randomInt()\":{\"notice\":\"Returns a random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns a random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns a random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes. Use `accesses` to get the recorded data. Subsequent calls to `record` will clear the previous data.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"rememberKeys(string,string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"rememberKeys(string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions.\"},\"revertToState(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`.\"},\"revertToStateAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setArbitraryStorage(address,bool)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"setSeed(uint256)\":{\"notice\":\"Set RNG seed.\"},\"shuffle(uint256[])\":{\"notice\":\"Randomly shuffles an array.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signAndAttachDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction\"},\"signAndAttachDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"signAndAttachDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation\"},\"signDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity.\"},\"signDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation for specific nonce\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions.\"},\"snapshotGasLastCall(string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name from the callee perspective.\"},\"snapshotGasLastCall(string,string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name in a group from the callee perspective.\"},\"snapshotState()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`.\"},\"snapshotValue(string,string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name in a group.\"},\"snapshotValue(string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name.\"},\"sort(uint256[])\":{\"notice\":\"Sorts an array in ascending order.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startDebugTraceRecording()\":{\"notice\":\"Records the debug trace during the run.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startSnapshotGas(string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name.\"},\"startSnapshotGas(string,string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name in a group.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnDebugTraceRecording()\":{\"notice\":\"Stop debug trace recording and returns the recorded debug trace.\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"stopRecord()\":{\"notice\":\"Stops recording storage reads and writes.\"},\"stopSnapshotGas()\":{\"notice\":\"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start.\"},\"stopSnapshotGas(string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name.\"},\"stopSnapshotGas(string,string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warmSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as warm, simulating a prior read.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe2b159412b06b44a7f90972104300c587f308506d37d2143dd7e689e2eac6f01\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a96e13ac6fec3ffe61a55d6005ef0ef96f47adf3f4f3531e0418f0bf02d3f93c\",\"dweb:/ipfs/QmeFci69gm7a6c6pEqSNoe3HfXPVPiagUc51Pyo5PoS8Rn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct VmSafe.AccessListItem[]","name":"access","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"storageKeys","type":"bytes32[]"}]}],"stateMutability":"nonpayable","type":"function","name":"accessList"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert[]","name":"potentialReverts","type":"tuple[]","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert","name":"potentialRevert","type":"tuple","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"bytes","name":"blob","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"attachBlob"},{"inputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"attachDelegation"},{"inputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]},{"internalType":"bool","name":"crossChain","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"attachDelegation"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cloneAccount"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"subject","type":"string"},{"internalType":"string","name":"search","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"contains","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cool"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"coolSlot"},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"copyStorage"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"bindingsPath","type":"string"},{"internalType":"string","name":"typeName","type":"string"},{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}],"stateMutability":"pure","type":"function","name":"eip712HashStruct","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"typeNameOrDefinition","type":"string"},{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}],"stateMutability":"pure","type":"function","name":"eip712HashStruct","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"bindingsPath","type":"string"},{"internalType":"string","name":"typeName","type":"string"}],"stateMutability":"pure","type":"function","name":"eip712HashType","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"typeNameOrDefinition","type":"string"}],"stateMutability":"pure","type":"function","name":"eip712HashType","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"jsonData","type":"string"}],"stateMutability":"pure","type":"function","name":"eip712HashTypedData","outputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectCreate"},{"inputs":[{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectCreate2"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"version","type":"string"}],"stateMutability":"view","type":"function","name":"foundryVersionAtLeast","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"version","type":"string"}],"stateMutability":"view","type":"function","name":"foundryVersionCmp","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"deployedCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByDeployedCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcast","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"chainAlias","type":"string"}],"stateMutability":"view","type":"function","name":"getChain","outputs":[{"internalType":"struct VmSafe.Chain","name":"chain","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"string","name":"chainAlias","type":"string"},{"internalType":"string","name":"rpcUrl","type":"string"}]}]},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getChain","outputs":[{"internalType":"struct VmSafe.Chain","name":"chain","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"string","name":"chainAlias","type":"string"},{"internalType":"string","name":"rpcUrl","type":"string"}]}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployments","outputs":[{"internalType":"address[]","name":"deployedAddresses","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRawBlockHeader","outputs":[{"internalType":"bytes","name":"rlpHeader","type":"bytes"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiff","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiffJson","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getWallets","outputs":[{"internalType":"address[]","name":"wallets","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"interceptInitcode"},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockFunction"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"noAccessList"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"len","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes4","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes8","outputs":[{"internalType":"bytes8","name":"","type":"bytes8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"string","name":"language","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToState","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToStateAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"overwrite","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"uint256","name":"seed","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setSeed"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"shuffle","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bool","name":"crossChain","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bool","name":"crossChain","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshotState","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"sort","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startDebugTraceRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnDebugTraceRecording","outputs":[{"internalType":"struct VmSafe.DebugStep[]","name":"step","type":"tuple[]","components":[{"internalType":"uint256[]","name":"stack","type":"uint256[]"},{"internalType":"bytes","name":"memoryInput","type":"bytes"},{"internalType":"uint8","name":"opcode","type":"uint8"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isOutOfGas","type":"bool"},{"internalType":"address","name":"contractAddr","type":"address"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopRecord"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"view","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"warmSlot"},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accessList((address,bytes32[])[])":{"notice":"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions."},"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"assumeNoRevert((address,bool,bytes))":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"assumeNoRevert((address,bool,bytes)[])":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"assumeNoRevert()":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"attachBlob(bytes)":{"notice":"Attach an EIP-4844 blob to the next call"},"attachDelegation((uint8,bytes32,bytes32,uint64,address))":{"notice":"Designate the next call as an EIP-7702 transaction"},"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)":{"notice":"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"cloneAccount(address,address)":{"notice":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"contains(string,string)":{"notice":"Returns true if `search` is found in `subject`, false otherwise."},"cool(address)":{"notice":"Marks the slots of an account and the account address as cold."},"coolSlot(address,bytes32)":{"notice":"Utility cheatcode to mark specific storage slot as cold, simulating no prior read."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"copyStorage(address,address)":{"notice":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"deleteSnapshots()":{"notice":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"deleteStateSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteStateSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deployCode(string,bytes,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deployCode(string,bytes,uint256)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`."},"deployCode(string,bytes,uint256,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`."},"deployCode(string,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,uint256)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`."},"deployCode(string,uint256,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"eip712HashStruct(string,bytes)":{"notice":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Supports 2 different inputs: 1. Name of the type (i.e. \"PermitSingle\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\"). * Note: the cheatcode will use the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces."},"eip712HashStruct(string,string,bytes)":{"notice":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \"PermitSingle\"). * `abiEncodedData`: ABI-encoded data for the struct that is being hashed."},"eip712HashType(string)":{"notice":"Generates the hash of the canonical EIP-712 type representation. Supports 2 different inputs: 1. Name of the type (i.e. \"Transaction\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\"). * Note: the cheatcode will output the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces."},"eip712HashType(string,string)":{"notice":"Generates the hash of the canonical EIP-712 type representation. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \"Transaction\")."},"eip712HashTypedData(string)":{"notice":"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCreate(bytes,address)":{"notice":"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode"},"expectCreate2(bytes,address)":{"notice":"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode"},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool,address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with the provided topics."},"expectEmit(bool,bool,bool,bool,uint64)":{"notice":"Expect a given number of logs with the provided topics."},"expectEmit(uint64)":{"notice":"Expect a given number of logs with all topic and data checks enabled."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectPartialRevert(bytes4,address)":{"notice":"Expects an error on next call to reverter address, that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(address)":{"notice":"Expects an error with any revert data on next call to reverter address."},"expectRevert(address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes,address)":{"notice":"Expects an error from reverter address on next call, that exactly matches the revert data."},"expectRevert(bytes,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"expectRevert(bytes,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4,address)":{"notice":"Expects an error from reverter address on next call, with any revert data."},"expectRevert(bytes4,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"expectRevert(bytes4,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"expectRevert(uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"foundryVersionAtLeast(string)":{"notice":"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`."},"foundryVersionCmp(string)":{"notice":"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\"1.0.0\") >= 0) { ... }`"},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getArtifactPathByCode(bytes)":{"notice":"Gets the artifact path from code (aka. creation code)."},"getArtifactPathByDeployedCode(bytes)":{"notice":"Gets the artifact path from deployed code (aka. runtime code)."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBroadcast(string,uint64,uint8)":{"notice":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`."},"getBroadcasts(string,uint64)":{"notice":"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getBroadcasts(string,uint64,uint8)":{"notice":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getChain(string)":{"notice":"Returns a Chain struct for specific alias"},"getChain(uint256)":{"notice":"Returns a Chain struct for specific chainId"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployment(string)":{"notice":"Returns the most recent deployment for the current `chainId`."},"getDeployment(string,uint64)":{"notice":"Returns the most recent deployment for the given contract on `chainId`"},"getDeployments(string,uint64)":{"notice":"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRawBlockHeader(uint256)":{"notice":"Gets the RLP encoded block header for a given block number. Returns the block header in the same format as `cast block <block_number> --raw`."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"getStateDiff()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session."},"getStateDiffJson()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"getWallets()":{"notice":"Returns addresses of available unlocked wallets in the script environment."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"interceptInitcode()":{"notice":"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer. This allows type-safe access to the initcode payload that would be used for contract creation. Example usage: vm.interceptInitcode(); bytes memory initcode; try new MyContract(param1, param2) { assert(false); } catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }"},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call from the callee perspective."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,bytes4,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCall(address,uint256,bytes4,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,bytes4,bytes)":{"notice":"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"mockCallRevert(address,uint256,bytes4,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCalls(address,bytes,bytes[])":{"notice":"Mocks multiple calls to an address, returning specified data for each call."},"mockCalls(address,uint256,bytes,bytes[])":{"notice":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"mockFunction(address,address,bytes)":{"notice":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted."},"noAccessList()":{"notice":"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlType(string,string)":{"notice":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"parseTomlType(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"parseTomlTypeArray(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomBool()":{"notice":"Returns a random `bool`."},"randomBytes(uint256)":{"notice":"Returns a random byte array value of the given length."},"randomBytes4()":{"notice":"Returns a random fixed-size byte array of length 4."},"randomBytes8()":{"notice":"Returns a random fixed-size byte array of length 8."},"randomInt()":{"notice":"Returns a random `int256` value."},"randomInt(uint256)":{"notice":"Returns a random `int256` value of given bits."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256)":{"notice":"Returns a random `uint256` value of given bits."},"randomUint(uint256,uint256)":{"notice":"Returns random uint256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes. Use `accesses` to get the recorded data. Subsequent calls to `record` will clear the previous data."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"rememberKeys(string,string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"rememberKeys(string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"revertToAndDelete(uint256)":{"notice":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"revertToState(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"revertToStateAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setArbitraryStorage(address)":{"notice":"Utility cheatcode to set arbitrary storage for given target address."},"setArbitraryStorage(address,bool)":{"notice":"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"setSeed(uint256)":{"notice":"Set RNG seed."},"shuffle(uint256[])":{"notice":"Randomly shuffles an array."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signAndAttachDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"signAndAttachDelegation(address,uint256,bool)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"signAndAttachDelegation(address,uint256,uint64)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce"},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization for delegation"},"signDelegation(address,uint256,bool)":{"notice":"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity."},"signDelegation(address,uint256,uint64)":{"notice":"Sign an EIP-7702 authorization for delegation for specific nonce"},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top level of a test."},"skip(bool,string)":{"notice":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"snapshotGasLastCall(string)":{"notice":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"snapshotGasLastCall(string,string)":{"notice":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"snapshotState()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`."},"snapshotValue(string,string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name in a group."},"snapshotValue(string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name."},"sort(uint256[])":{"notice":"Sorts an array in ascending order."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startDebugTraceRecording()":{"notice":"Records the debug trace during the run."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"startSnapshotGas(string)":{"notice":"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name."},"startSnapshotGas(string,string)":{"notice":"Start a snapshot capture of the current gas usage by name in a group."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnDebugTraceRecording()":{"notice":"Stop debug trace recording and returns the recorded debug trace."},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"stopRecord()":{"notice":"Stops recording storage reads and writes."},"stopSnapshotGas()":{"notice":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"stopSnapshotGas(string)":{"notice":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name."},"stopSnapshotGas(string,string)":{"notice":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warmSlot(address,bytes32)":{"notice":"Utility cheatcode to mark specific storage slot as warm, simulating a prior read."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0xe2b159412b06b44a7f90972104300c587f308506d37d2143dd7e689e2eac6f01","urls":["bzz-raw://a96e13ac6fec3ffe61a55d6005ef0ef96f47adf3f4f3531e0418f0bf02d3f93c","dweb:/ipfs/QmeFci69gm7a6c6pEqSNoe3HfXPVPiagUc51Pyo5PoS8Rn"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":19894,"exportedSymbols":{"Vm":[19893],"VmSafe":[18822]},"nodeType":"SourceUnit","src":"117:129099:19","nodes":[{"id":14779,"nodeType":"PragmaDirective","src":"117:31:19","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":14780,"nodeType":"PragmaDirective","src":"149:33:19","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":18822,"nodeType":"ContractDefinition","src":"409:102046:19","nodes":[{"id":14788,"nodeType":"EnumDefinition","src":"529:533:19","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":14782,"nodeType":"StructuredDocumentation","src":"432:92:19","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":14783,"name":"None","nameLocation":"610:4:19","nodeType":"EnumValue","src":"610:4:19"},{"id":14784,"name":"Broadcast","nameLocation":"714:9:19","nodeType":"EnumValue","src":"714:9:19"},{"id":14785,"name":"RecurrentBroadcast","nameLocation":"829:18:19","nodeType":"EnumValue","src":"829:18:19"},{"id":14786,"name":"Prank","nameLocation":"939:5:19","nodeType":"EnumValue","src":"939:5:19"},{"id":14787,"name":"RecurrentPrank","nameLocation":"1042:14:19","nodeType":"EnumValue","src":"1042:14:19"}],"name":"CallerMode","nameLocation":"534:10:19"},{"id":14801,"nodeType":"EnumDefinition","src":"1118:791:19","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":14789,"nodeType":"StructuredDocumentation","src":"1068:45:19","text":"The kind of account access that occurred."},"members":[{"id":14790,"name":"Call","nameLocation":"1186:4:19","nodeType":"EnumValue","src":"1186:4:19"},{"id":14791,"name":"DelegateCall","nameLocation":"1252:12:19","nodeType":"EnumValue","src":"1252:12:19"},{"id":14792,"name":"CallCode","nameLocation":"1322:8:19","nodeType":"EnumValue","src":"1322:8:19"},{"id":14793,"name":"StaticCall","nameLocation":"1390:10:19","nodeType":"EnumValue","src":"1390:10:19"},{"id":14794,"name":"Create","nameLocation":"1446:6:19","nodeType":"EnumValue","src":"1446:6:19"},{"id":14795,"name":"SelfDestruct","nameLocation":"1505:12:19","nodeType":"EnumValue","src":"1505:12:19"},{"id":14796,"name":"Resume","nameLocation":"1644:6:19","nodeType":"EnumValue","src":"1644:6:19"},{"id":14797,"name":"Balance","nameLocation":"1703:7:19","nodeType":"EnumValue","src":"1703:7:19"},{"id":14798,"name":"Extcodesize","nameLocation":"1764:11:19","nodeType":"EnumValue","src":"1764:11:19"},{"id":14799,"name":"Extcodehash","nameLocation":"1829:11:19","nodeType":"EnumValue","src":"1829:11:19"},{"id":14800,"name":"Extcodecopy","nameLocation":"1892:11:19","nodeType":"EnumValue","src":"1892:11:19"}],"name":"AccountAccessKind","nameLocation":"1123:17:19"},{"id":14812,"nodeType":"EnumDefinition","src":"1949:683:19","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":14802,"nodeType":"StructuredDocumentation","src":"1915:29:19","text":"Forge execution contexts."},"members":[{"id":14803,"name":"TestGroup","nameLocation":"2047:9:19","nodeType":"EnumValue","src":"2047:9:19"},{"id":14804,"name":"Test","nameLocation":"2109:4:19","nodeType":"EnumValue","src":"2109:4:19"},{"id":14805,"name":"Coverage","nameLocation":"2170:8:19","nodeType":"EnumValue","src":"2170:8:19"},{"id":14806,"name":"Snapshot","nameLocation":"2235:8:19","nodeType":"EnumValue","src":"2235:8:19"},{"id":14807,"name":"ScriptGroup","nameLocation":"2327:11:19","nodeType":"EnumValue","src":"2327:11:19"},{"id":14808,"name":"ScriptDryRun","nameLocation":"2393:12:19","nodeType":"EnumValue","src":"2393:12:19"},{"id":14809,"name":"ScriptBroadcast","nameLocation":"2472:15:19","nodeType":"EnumValue","src":"2472:15:19"},{"id":14810,"name":"ScriptResume","nameLocation":"2551:12:19","nodeType":"EnumValue","src":"2551:12:19"},{"id":14811,"name":"Unknown","nameLocation":"2619:7:19","nodeType":"EnumValue","src":"2619:7:19"}],"name":"ForgeContext","nameLocation":"1954:12:19"},{"id":14817,"nodeType":"EnumDefinition","src":"2696:208:19","nodes":[],"canonicalName":"VmSafe.BroadcastTxType","documentation":{"id":14813,"nodeType":"StructuredDocumentation","src":"2638:53:19","text":"The transaction type (`txType`) of the broadcast."},"members":[{"id":14814,"name":"Call","nameLocation":"2770:4:19","nodeType":"EnumValue","src":"2770:4:19"},{"id":14815,"name":"Create","nameLocation":"2829:6:19","nodeType":"EnumValue","src":"2829:6:19"},{"id":14816,"name":"Create2","nameLocation":"2891:7:19","nodeType":"EnumValue","src":"2891:7:19"}],"name":"BroadcastTxType","nameLocation":"2701:15:19"},{"id":14826,"nodeType":"StructDefinition","src":"2966:237:19","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":14818,"nodeType":"StructuredDocumentation","src":"2910:51:19","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":14821,"mutability":"mutable","name":"topics","nameLocation":"3064:6:19","nodeType":"VariableDeclaration","scope":14826,"src":"3054:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3054:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14820,"nodeType":"ArrayTypeName","src":"3054:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14823,"mutability":"mutable","name":"data","nameLocation":"3122:4:19","nodeType":"VariableDeclaration","scope":14826,"src":"3116:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":14822,"name":"bytes","nodeType":"ElementaryTypeName","src":"3116:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14825,"mutability":"mutable","name":"emitter","nameLocation":"3189:7:19","nodeType":"VariableDeclaration","scope":14826,"src":"3181:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14824,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2973:3:19","scope":18822,"visibility":"public"},{"id":14832,"nodeType":"StructDefinition","src":"3272:119:19","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":14827,"nodeType":"StructuredDocumentation","src":"3209:58:19","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":14829,"mutability":"mutable","name":"key","nameLocation":"3337:3:19","nodeType":"VariableDeclaration","scope":14832,"src":"3330:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":14828,"name":"string","nodeType":"ElementaryTypeName","src":"3330:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14831,"mutability":"mutable","name":"url","nameLocation":"3381:3:19","nodeType":"VariableDeclaration","scope":14832,"src":"3374:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":14830,"name":"string","nodeType":"ElementaryTypeName","src":"3374:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3279:3:19","scope":18822,"visibility":"public"},{"id":14853,"nodeType":"StructDefinition","src":"3451:615:19","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":14833,"nodeType":"StructuredDocumentation","src":"3397:49:19","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":14835,"mutability":"mutable","name":"emitter","nameLocation":"3532:7:19","nodeType":"VariableDeclaration","scope":14853,"src":"3524:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14834,"name":"address","nodeType":"ElementaryTypeName","src":"3524:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14838,"mutability":"mutable","name":"topics","nameLocation":"3626:6:19","nodeType":"VariableDeclaration","scope":14853,"src":"3616:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14837,"nodeType":"ArrayTypeName","src":"3616:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14840,"mutability":"mutable","name":"data","nameLocation":"3684:4:19","nodeType":"VariableDeclaration","scope":14853,"src":"3678:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":14839,"name":"bytes","nodeType":"ElementaryTypeName","src":"3678:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14842,"mutability":"mutable","name":"blockHash","nameLocation":"3733:9:19","nodeType":"VariableDeclaration","scope":14853,"src":"3725:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3725:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14844,"mutability":"mutable","name":"blockNumber","nameLocation":"3788:11:19","nodeType":"VariableDeclaration","scope":14853,"src":"3781:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14843,"name":"uint64","nodeType":"ElementaryTypeName","src":"3781:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14846,"mutability":"mutable","name":"transactionHash","nameLocation":"3850:15:19","nodeType":"VariableDeclaration","scope":14853,"src":"3842:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3842:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14848,"mutability":"mutable","name":"transactionIndex","nameLocation":"3929:16:19","nodeType":"VariableDeclaration","scope":14853,"src":"3922:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14847,"name":"uint64","nodeType":"ElementaryTypeName","src":"3922:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14850,"mutability":"mutable","name":"logIndex","nameLocation":"3989:8:19","nodeType":"VariableDeclaration","scope":14853,"src":"3981:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14849,"name":"uint256","nodeType":"ElementaryTypeName","src":"3981:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14852,"mutability":"mutable","name":"removed","nameLocation":"4052:7:19","nodeType":"VariableDeclaration","scope":14853,"src":"4047:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14851,"name":"bool","nodeType":"ElementaryTypeName","src":"4047:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3458:10:19","scope":18822,"visibility":"public"},{"id":14865,"nodeType":"StructDefinition","src":"4142:334:19","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":14854,"nodeType":"StructuredDocumentation","src":"4072:65:19","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":14856,"mutability":"mutable","name":"errorMessage","nameLocation":"4213:12:19","nodeType":"VariableDeclaration","scope":14865,"src":"4206:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":14855,"name":"string","nodeType":"ElementaryTypeName","src":"4206:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14858,"mutability":"mutable","name":"path","nameLocation":"4276:4:19","nodeType":"VariableDeclaration","scope":14865,"src":"4269:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":14857,"name":"string","nodeType":"ElementaryTypeName","src":"4269:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14860,"mutability":"mutable","name":"depth","nameLocation":"4332:5:19","nodeType":"VariableDeclaration","scope":14865,"src":"4325:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14859,"name":"uint64","nodeType":"ElementaryTypeName","src":"4325:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14862,"mutability":"mutable","name":"isDir","nameLocation":"4397:5:19","nodeType":"VariableDeclaration","scope":14865,"src":"4392:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14861,"name":"bool","nodeType":"ElementaryTypeName","src":"4392:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14864,"mutability":"mutable","name":"isSymlink","nameLocation":"4460:9:19","nodeType":"VariableDeclaration","scope":14865,"src":"4455:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14863,"name":"bool","nodeType":"ElementaryTypeName","src":"4455:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"4149:8:19","scope":18822,"visibility":"public"},{"id":14881,"nodeType":"StructDefinition","src":"4706:599:19","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":14866,"nodeType":"StructuredDocumentation","src":"4482:219:19","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":14868,"mutability":"mutable","name":"isDir","nameLocation":"4792:5:19","nodeType":"VariableDeclaration","scope":14881,"src":"4787:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14867,"name":"bool","nodeType":"ElementaryTypeName","src":"4787:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14870,"mutability":"mutable","name":"isSymlink","nameLocation":"4863:9:19","nodeType":"VariableDeclaration","scope":14881,"src":"4858:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14869,"name":"bool","nodeType":"ElementaryTypeName","src":"4858:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14872,"mutability":"mutable","name":"length","nameLocation":"4955:6:19","nodeType":"VariableDeclaration","scope":14881,"src":"4947:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4947:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14874,"mutability":"mutable","name":"readOnly","nameLocation":"5046:8:19","nodeType":"VariableDeclaration","scope":14881,"src":"5041:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14873,"name":"bool","nodeType":"ElementaryTypeName","src":"5041:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14876,"mutability":"mutable","name":"modified","nameLocation":"5135:8:19","nodeType":"VariableDeclaration","scope":14881,"src":"5127:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14875,"name":"uint256","nodeType":"ElementaryTypeName","src":"5127:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14878,"mutability":"mutable","name":"accessed","nameLocation":"5211:8:19","nodeType":"VariableDeclaration","scope":14881,"src":"5203:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14877,"name":"uint256","nodeType":"ElementaryTypeName","src":"5203:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14880,"mutability":"mutable","name":"created","nameLocation":"5291:7:19","nodeType":"VariableDeclaration","scope":14881,"src":"5283:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14879,"name":"uint256","nodeType":"ElementaryTypeName","src":"5283:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4713:10:19","scope":18822,"visibility":"public"},{"id":14891,"nodeType":"StructDefinition","src":"5359:277:19","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":14882,"nodeType":"StructuredDocumentation","src":"5311:43:19","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":14884,"mutability":"mutable","name":"addr","nameLocation":"5424:4:19","nodeType":"VariableDeclaration","scope":14891,"src":"5416:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14883,"name":"address","nodeType":"ElementaryTypeName","src":"5416:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14886,"mutability":"mutable","name":"publicKeyX","nameLocation":"5486:10:19","nodeType":"VariableDeclaration","scope":14891,"src":"5478:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14885,"name":"uint256","nodeType":"ElementaryTypeName","src":"5478:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14888,"mutability":"mutable","name":"publicKeyY","nameLocation":"5554:10:19","nodeType":"VariableDeclaration","scope":14891,"src":"5546:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14887,"name":"uint256","nodeType":"ElementaryTypeName","src":"5546:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14890,"mutability":"mutable","name":"privateKey","nameLocation":"5619:10:19","nodeType":"VariableDeclaration","scope":14891,"src":"5611:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14889,"name":"uint256","nodeType":"ElementaryTypeName","src":"5611:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5366:6:19","scope":18822,"visibility":"public"},{"id":14899,"nodeType":"StructDefinition","src":"5681:213:19","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":14892,"nodeType":"StructuredDocumentation","src":"5642:34:19","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":14894,"mutability":"mutable","name":"exitCode","nameLocation":"5752:8:19","nodeType":"VariableDeclaration","scope":14899,"src":"5746:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":14893,"name":"int32","nodeType":"ElementaryTypeName","src":"5746:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":14896,"mutability":"mutable","name":"stdout","nameLocation":"5829:6:19","nodeType":"VariableDeclaration","scope":14899,"src":"5823:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":14895,"name":"bytes","nodeType":"ElementaryTypeName","src":"5823:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14898,"mutability":"mutable","name":"stderr","nameLocation":"5881:6:19","nodeType":"VariableDeclaration","scope":14899,"src":"5875:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":14897,"name":"bytes","nodeType":"ElementaryTypeName","src":"5875:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5688:9:19","scope":18822,"visibility":"public"},{"id":14905,"nodeType":"StructDefinition","src":"5943:184:19","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":14900,"nodeType":"StructuredDocumentation","src":"5900:38:19","text":"Information on the chain and fork."},"members":[{"constant":false,"id":14902,"mutability":"mutable","name":"forkId","nameLocation":"6044:6:19","nodeType":"VariableDeclaration","scope":14905,"src":"6036:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14901,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14904,"mutability":"mutable","name":"chainId","nameLocation":"6113:7:19","nodeType":"VariableDeclaration","scope":14905,"src":"6105:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14903,"name":"uint256","nodeType":"ElementaryTypeName","src":"6105:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5950:9:19","scope":18822,"visibility":"public"},{"id":14915,"nodeType":"StructDefinition","src":"6173:302:19","nodes":[],"canonicalName":"VmSafe.Chain","documentation":{"id":14906,"nodeType":"StructuredDocumentation","src":"6133:35:19","text":"Information about a blockchain."},"members":[{"constant":false,"id":14908,"mutability":"mutable","name":"name","nameLocation":"6230:4:19","nodeType":"VariableDeclaration","scope":14915,"src":"6223:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":14907,"name":"string","nodeType":"ElementaryTypeName","src":"6223:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14910,"mutability":"mutable","name":"chainId","nameLocation":"6285:7:19","nodeType":"VariableDeclaration","scope":14915,"src":"6277:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14909,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14912,"mutability":"mutable","name":"chainAlias","nameLocation":"6385:10:19","nodeType":"VariableDeclaration","scope":14915,"src":"6378:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":14911,"name":"string","nodeType":"ElementaryTypeName","src":"6378:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14914,"mutability":"mutable","name":"rpcUrl","nameLocation":"6462:6:19","nodeType":"VariableDeclaration","scope":14915,"src":"6455:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":14913,"name":"string","nodeType":"ElementaryTypeName","src":"6455:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Chain","nameLocation":"6180:5:19","scope":18822,"visibility":"public"},{"id":14947,"nodeType":"StructDefinition","src":"6536:1837:19","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":14916,"nodeType":"StructuredDocumentation","src":"6481:50:19","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":14919,"mutability":"mutable","name":"chainInfo","nameLocation":"6628:9:19","nodeType":"VariableDeclaration","scope":14947,"src":"6618:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$14905_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":14918,"nodeType":"UserDefinedTypeName","pathNode":{"id":14917,"name":"ChainInfo","nameLocations":["6618:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":14905,"src":"6618:9:19"},"referencedDeclaration":14905,"src":"6618:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$14905_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":14922,"mutability":"mutable","name":"kind","nameLocation":"7091:4:19","nodeType":"VariableDeclaration","scope":14947,"src":"7073:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$14801","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":14921,"nodeType":"UserDefinedTypeName","pathNode":{"id":14920,"name":"AccountAccessKind","nameLocations":["7073:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":14801,"src":"7073:17:19"},"referencedDeclaration":14801,"src":"7073:17:19","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$14801","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":14924,"mutability":"mutable","name":"account","nameLocation":"7268:7:19","nodeType":"VariableDeclaration","scope":14947,"src":"7260:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14923,"name":"address","nodeType":"ElementaryTypeName","src":"7260:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14926,"mutability":"mutable","name":"accessor","nameLocation":"7331:8:19","nodeType":"VariableDeclaration","scope":14947,"src":"7323:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14925,"name":"address","nodeType":"ElementaryTypeName","src":"7323:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14928,"mutability":"mutable","name":"initialized","nameLocation":"7542:11:19","nodeType":"VariableDeclaration","scope":14947,"src":"7537:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14927,"name":"bool","nodeType":"ElementaryTypeName","src":"7537:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14930,"mutability":"mutable","name":"oldBalance","nameLocation":"7628:10:19","nodeType":"VariableDeclaration","scope":14947,"src":"7620:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14929,"name":"uint256","nodeType":"ElementaryTypeName","src":"7620:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14932,"mutability":"mutable","name":"newBalance","nameLocation":"7803:10:19","nodeType":"VariableDeclaration","scope":14947,"src":"7795:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14931,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14934,"mutability":"mutable","name":"deployedCode","nameLocation":"7880:12:19","nodeType":"VariableDeclaration","scope":14947,"src":"7874:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":14933,"name":"bytes","nodeType":"ElementaryTypeName","src":"7874:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14936,"mutability":"mutable","name":"value","nameLocation":"7964:5:19","nodeType":"VariableDeclaration","scope":14947,"src":"7956:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14935,"name":"uint256","nodeType":"ElementaryTypeName","src":"7956:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14938,"mutability":"mutable","name":"data","nameLocation":"8038:4:19","nodeType":"VariableDeclaration","scope":14947,"src":"8032:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":14937,"name":"bytes","nodeType":"ElementaryTypeName","src":"8032:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14940,"mutability":"mutable","name":"reverted","nameLocation":"8133:8:19","nodeType":"VariableDeclaration","scope":14947,"src":"8128:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14939,"name":"bool","nodeType":"ElementaryTypeName","src":"8128:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14944,"mutability":"mutable","name":"storageAccesses","nameLocation":"8255:15:19","nodeType":"VariableDeclaration","scope":14947,"src":"8239:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$14961_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":14942,"nodeType":"UserDefinedTypeName","pathNode":{"id":14941,"name":"StorageAccess","nameLocations":["8239:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":14961,"src":"8239:13:19"},"referencedDeclaration":14961,"src":"8239:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$14961_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":14943,"nodeType":"ArrayTypeName","src":"8239:15:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$14961_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":14946,"mutability":"mutable","name":"depth","nameLocation":"8361:5:19","nodeType":"VariableDeclaration","scope":14947,"src":"8354:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14945,"name":"uint64","nodeType":"ElementaryTypeName","src":"8354:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"6543:13:19","scope":18822,"visibility":"public"},{"id":14961,"nodeType":"StructDefinition","src":"8435:425:19","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":14948,"nodeType":"StructuredDocumentation","src":"8379:51:19","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":14950,"mutability":"mutable","name":"account","nameLocation":"8525:7:19","nodeType":"VariableDeclaration","scope":14961,"src":"8517:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14949,"name":"address","nodeType":"ElementaryTypeName","src":"8517:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14952,"mutability":"mutable","name":"slot","nameLocation":"8589:4:19","nodeType":"VariableDeclaration","scope":14961,"src":"8581:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8581:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14954,"mutability":"mutable","name":"isWrite","nameLocation":"8646:7:19","nodeType":"VariableDeclaration","scope":14961,"src":"8641:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14953,"name":"bool","nodeType":"ElementaryTypeName","src":"8641:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14956,"mutability":"mutable","name":"previousValue","nameLocation":"8714:13:19","nodeType":"VariableDeclaration","scope":14961,"src":"8706:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8706:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14958,"mutability":"mutable","name":"newValue","nameLocation":"8783:8:19","nodeType":"VariableDeclaration","scope":14961,"src":"8775:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8775:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14960,"mutability":"mutable","name":"reverted","nameLocation":"8845:8:19","nodeType":"VariableDeclaration","scope":14961,"src":"8840:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14959,"name":"bool","nodeType":"ElementaryTypeName","src":"8840:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"8442:13:19","scope":18822,"visibility":"public"},{"id":14973,"nodeType":"StructDefinition","src":"8911:458:19","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":14962,"nodeType":"StructuredDocumentation","src":"8866:40:19","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":14964,"mutability":"mutable","name":"gasLimit","nameLocation":"8977:8:19","nodeType":"VariableDeclaration","scope":14973,"src":"8970:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14963,"name":"uint64","nodeType":"ElementaryTypeName","src":"8970:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14966,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"9033:12:19","nodeType":"VariableDeclaration","scope":14973,"src":"9026:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14965,"name":"uint64","nodeType":"ElementaryTypeName","src":"9026:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14968,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"9214:13:19","nodeType":"VariableDeclaration","scope":14973,"src":"9207:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14967,"name":"uint64","nodeType":"ElementaryTypeName","src":"9207:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14970,"mutability":"mutable","name":"gasRefunded","nameLocation":"9282:11:19","nodeType":"VariableDeclaration","scope":14973,"src":"9276:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":14969,"name":"int64","nodeType":"ElementaryTypeName","src":"9276:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":14972,"mutability":"mutable","name":"gasRemaining","nameLocation":"9350:12:19","nodeType":"VariableDeclaration","scope":14973,"src":"9343:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14971,"name":"uint64","nodeType":"ElementaryTypeName","src":"9343:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8918:3:19","scope":18822,"visibility":"public"},{"id":14988,"nodeType":"StructDefinition","src":"9432:848:19","nodes":[],"canonicalName":"VmSafe.DebugStep","documentation":{"id":14974,"nodeType":"StructuredDocumentation","src":"9375:52:19","text":"The result of the `stopDebugTraceRecording` call"},"members":[{"constant":false,"id":14977,"mutability":"mutable","name":"stack","nameLocation":"9661:5:19","nodeType":"VariableDeclaration","scope":14988,"src":"9651:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14975,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14976,"nodeType":"ArrayTypeName","src":"9651:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14979,"mutability":"mutable","name":"memoryInput","nameLocation":"9965:11:19","nodeType":"VariableDeclaration","scope":14988,"src":"9959:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":14978,"name":"bytes","nodeType":"ElementaryTypeName","src":"9959:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14981,"mutability":"mutable","name":"opcode","nameLocation":"10033:6:19","nodeType":"VariableDeclaration","scope":14988,"src":"10027:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":14980,"name":"uint8","nodeType":"ElementaryTypeName","src":"10027:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":14983,"mutability":"mutable","name":"depth","nameLocation":"10095:5:19","nodeType":"VariableDeclaration","scope":14988,"src":"10088:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14982,"name":"uint64","nodeType":"ElementaryTypeName","src":"10088:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14985,"mutability":"mutable","name":"isOutOfGas","nameLocation":"10173:10:19","nodeType":"VariableDeclaration","scope":14988,"src":"10168:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14984,"name":"bool","nodeType":"ElementaryTypeName","src":"10168:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14987,"mutability":"mutable","name":"contractAddr","nameLocation":"10261:12:19","nodeType":"VariableDeclaration","scope":14988,"src":"10253:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14986,"name":"address","nodeType":"ElementaryTypeName","src":"10253:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DebugStep","nameLocation":"9439:9:19","scope":18822,"visibility":"public"},{"id":15001,"nodeType":"StructDefinition","src":"10340:600:19","nodes":[],"canonicalName":"VmSafe.BroadcastTxSummary","documentation":{"id":14989,"nodeType":"StructuredDocumentation","src":"10286:49:19","text":"Represents a transaction's broadcast details."},"members":[{"constant":false,"id":14991,"mutability":"mutable","name":"txHash","nameLocation":"10444:6:19","nodeType":"VariableDeclaration","scope":15001,"src":"10436:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10436:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14994,"mutability":"mutable","name":"txType","nameLocation":"10549:6:19","nodeType":"VariableDeclaration","scope":15001,"src":"10533:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$14817","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":14993,"nodeType":"UserDefinedTypeName","pathNode":{"id":14992,"name":"BroadcastTxType","nameLocations":["10533:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":14817,"src":"10533:15:19"},"referencedDeclaration":14817,"src":"10533:15:19","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$14817","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"},{"constant":false,"id":14996,"mutability":"mutable","name":"contractAddress","nameLocation":"10735:15:19","nodeType":"VariableDeclaration","scope":15001,"src":"10727:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14995,"name":"address","nodeType":"ElementaryTypeName","src":"10727:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14998,"mutability":"mutable","name":"blockNumber","nameLocation":"10822:11:19","nodeType":"VariableDeclaration","scope":15001,"src":"10815:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14997,"name":"uint64","nodeType":"ElementaryTypeName","src":"10815:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15000,"mutability":"mutable","name":"success","nameLocation":"10926:7:19","nodeType":"VariableDeclaration","scope":15001,"src":"10921:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14999,"name":"bool","nodeType":"ElementaryTypeName","src":"10921:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BroadcastTxSummary","nameLocation":"10347:18:19","scope":18822,"visibility":"public"},{"id":15013,"nodeType":"StructDefinition","src":"11051:605:19","nodes":[],"canonicalName":"VmSafe.SignedDelegation","documentation":{"id":15002,"nodeType":"StructuredDocumentation","src":"10946:100:19","text":"Holds a signed EIP-7702 authorization for an authority account to delegate to an implementation."},"members":[{"constant":false,"id":15004,"mutability":"mutable","name":"v","nameLocation":"11162:1:19","nodeType":"VariableDeclaration","scope":15013,"src":"11156:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15003,"name":"uint8","nodeType":"ElementaryTypeName","src":"11156:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15006,"mutability":"mutable","name":"r","nameLocation":"11225:1:19","nodeType":"VariableDeclaration","scope":15013,"src":"11217:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11217:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15008,"mutability":"mutable","name":"s","nameLocation":"11289:1:19","nodeType":"VariableDeclaration","scope":15013,"src":"11281:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11281:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15010,"mutability":"mutable","name":"nonce","nameLocation":"11461:5:19","nodeType":"VariableDeclaration","scope":15013,"src":"11454:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15009,"name":"uint64","nodeType":"ElementaryTypeName","src":"11454:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15012,"mutability":"mutable","name":"implementation","nameLocation":"11635:14:19","nodeType":"VariableDeclaration","scope":15013,"src":"11627:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15011,"name":"address","nodeType":"ElementaryTypeName","src":"11627:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SignedDelegation","nameLocation":"11058:16:19","scope":18822,"visibility":"public"},{"id":15021,"nodeType":"StructDefinition","src":"11905:373:19","nodes":[],"canonicalName":"VmSafe.PotentialRevert","documentation":{"id":15014,"nodeType":"StructuredDocumentation","src":"11662:238:19","text":"Represents a \"potential\" revert reason from a single subsequent call when using `vm.assumeNoReverts`.\n Reverts that match will result in a FOUNDRY::ASSUME rejection, whereas unmatched reverts will be surfaced\n as normal."},"members":[{"constant":false,"id":15016,"mutability":"mutable","name":"reverter","nameLocation":"12041:8:19","nodeType":"VariableDeclaration","scope":15021,"src":"12033:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15015,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15018,"mutability":"mutable","name":"partialMatch","nameLocation":"12177:12:19","nodeType":"VariableDeclaration","scope":15021,"src":"12172:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15017,"name":"bool","nodeType":"ElementaryTypeName","src":"12172:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15020,"mutability":"mutable","name":"revertData","nameLocation":"12261:10:19","nodeType":"VariableDeclaration","scope":15021,"src":"12255:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15019,"name":"bytes","nodeType":"ElementaryTypeName","src":"12255:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PotentialRevert","nameLocation":"11912:15:19","scope":18822,"visibility":"public"},{"id":15028,"nodeType":"StructDefinition","src":"12322:191:19","nodes":[],"canonicalName":"VmSafe.AccessListItem","documentation":{"id":15022,"nodeType":"StructuredDocumentation","src":"12284:33:19","text":"An EIP-2930 access list item."},"members":[{"constant":false,"id":15024,"mutability":"mutable","name":"target","nameLocation":"12413:6:19","nodeType":"VariableDeclaration","scope":15028,"src":"12405:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15023,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15027,"mutability":"mutable","name":"storageKeys","nameLocation":"12495:11:19","nodeType":"VariableDeclaration","scope":15028,"src":"12485:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12485:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15026,"nodeType":"ArrayTypeName","src":"12485:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"AccessListItem","nameLocation":"12329:14:19","scope":18822,"visibility":"public"},{"id":15037,"nodeType":"FunctionDefinition","src":"12656:91:19","nodes":[],"documentation":{"id":15029,"nodeType":"StructuredDocumentation","src":"12552:99:19","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12665:12:19","parameters":{"id":15032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15031,"mutability":"mutable","name":"walletLabel","nameLocation":"12694:11:19","nodeType":"VariableDeclaration","scope":15037,"src":"12678:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15030,"name":"string","nodeType":"ElementaryTypeName","src":"12678:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12677:29:19"},"returnParameters":{"id":15036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15035,"mutability":"mutable","name":"wallet","nameLocation":"12739:6:19","nodeType":"VariableDeclaration","scope":15037,"src":"12725:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15034,"nodeType":"UserDefinedTypeName","pathNode":{"id":15033,"name":"Wallet","nameLocations":["12725:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":14891,"src":"12725:6:19"},"referencedDeclaration":14891,"src":"12725:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12724:22:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15046,"nodeType":"FunctionDefinition","src":"12825:82:19","nodes":[],"documentation":{"id":15038,"nodeType":"StructuredDocumentation","src":"12753:67:19","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12834:12:19","parameters":{"id":15041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15040,"mutability":"mutable","name":"privateKey","nameLocation":"12855:10:19","nodeType":"VariableDeclaration","scope":15046,"src":"12847:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15039,"name":"uint256","nodeType":"ElementaryTypeName","src":"12847:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12846:20:19"},"returnParameters":{"id":15045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15044,"mutability":"mutable","name":"wallet","nameLocation":"12899:6:19","nodeType":"VariableDeclaration","scope":15046,"src":"12885:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15043,"nodeType":"UserDefinedTypeName","pathNode":{"id":15042,"name":"Wallet","nameLocations":["12885:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":14891,"src":"12885:6:19"},"referencedDeclaration":14891,"src":"12885:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12884:22:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15057,"nodeType":"FunctionDefinition","src":"13021:111:19","nodes":[],"documentation":{"id":15047,"nodeType":"StructuredDocumentation","src":"12913:103:19","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"13030:12:19","parameters":{"id":15052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15049,"mutability":"mutable","name":"privateKey","nameLocation":"13051:10:19","nodeType":"VariableDeclaration","scope":15057,"src":"13043:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15048,"name":"uint256","nodeType":"ElementaryTypeName","src":"13043:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15051,"mutability":"mutable","name":"walletLabel","nameLocation":"13079:11:19","nodeType":"VariableDeclaration","scope":15057,"src":"13063:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15050,"name":"string","nodeType":"ElementaryTypeName","src":"13063:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13042:49:19"},"returnParameters":{"id":15056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15055,"mutability":"mutable","name":"wallet","nameLocation":"13124:6:19","nodeType":"VariableDeclaration","scope":15057,"src":"13110:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15054,"nodeType":"UserDefinedTypeName","pathNode":{"id":15053,"name":"Wallet","nameLocations":["13110:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":14891,"src":"13110:6:19"},"referencedDeclaration":14891,"src":"13110:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"13109:22:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15067,"nodeType":"FunctionDefinition","src":"13280:102:19","nodes":[],"documentation":{"id":15058,"nodeType":"StructuredDocumentation","src":"13138:137:19","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13289:9:19","parameters":{"id":15063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15060,"mutability":"mutable","name":"mnemonic","nameLocation":"13315:8:19","nodeType":"VariableDeclaration","scope":15067,"src":"13299:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15059,"name":"string","nodeType":"ElementaryTypeName","src":"13299:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15062,"mutability":"mutable","name":"index","nameLocation":"13332:5:19","nodeType":"VariableDeclaration","scope":15067,"src":"13325:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15061,"name":"uint32","nodeType":"ElementaryTypeName","src":"13325:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13298:40:19"},"returnParameters":{"id":15066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15065,"mutability":"mutable","name":"privateKey","nameLocation":"13370:10:19","nodeType":"VariableDeclaration","scope":15067,"src":"13362:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15064,"name":"uint256","nodeType":"ElementaryTypeName","src":"13362:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13361:20:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15079,"nodeType":"FunctionDefinition","src":"13511:158:19","nodes":[],"documentation":{"id":15068,"nodeType":"StructuredDocumentation","src":"13388:118:19","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13520:9:19","parameters":{"id":15075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15070,"mutability":"mutable","name":"mnemonic","nameLocation":"13546:8:19","nodeType":"VariableDeclaration","scope":15079,"src":"13530:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15069,"name":"string","nodeType":"ElementaryTypeName","src":"13530:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15072,"mutability":"mutable","name":"derivationPath","nameLocation":"13572:14:19","nodeType":"VariableDeclaration","scope":15079,"src":"13556:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15071,"name":"string","nodeType":"ElementaryTypeName","src":"13556:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15074,"mutability":"mutable","name":"index","nameLocation":"13595:5:19","nodeType":"VariableDeclaration","scope":15079,"src":"13588:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15073,"name":"uint32","nodeType":"ElementaryTypeName","src":"13588:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13529:72:19"},"returnParameters":{"id":15078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15077,"mutability":"mutable","name":"privateKey","nameLocation":"13657:10:19","nodeType":"VariableDeclaration","scope":15079,"src":"13649:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15076,"name":"uint256","nodeType":"ElementaryTypeName","src":"13649:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13648:20:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15091,"nodeType":"FunctionDefinition","src":"13843:152:19","nodes":[],"documentation":{"id":15080,"nodeType":"StructuredDocumentation","src":"13675:163:19","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13852:9:19","parameters":{"id":15087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15082,"mutability":"mutable","name":"mnemonic","nameLocation":"13878:8:19","nodeType":"VariableDeclaration","scope":15091,"src":"13862:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15081,"name":"string","nodeType":"ElementaryTypeName","src":"13862:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15084,"mutability":"mutable","name":"index","nameLocation":"13895:5:19","nodeType":"VariableDeclaration","scope":15091,"src":"13888:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15083,"name":"uint32","nodeType":"ElementaryTypeName","src":"13888:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15086,"mutability":"mutable","name":"language","nameLocation":"13918:8:19","nodeType":"VariableDeclaration","scope":15091,"src":"13902:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15085,"name":"string","nodeType":"ElementaryTypeName","src":"13902:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13861:66:19"},"returnParameters":{"id":15090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15089,"mutability":"mutable","name":"privateKey","nameLocation":"13983:10:19","nodeType":"VariableDeclaration","scope":15091,"src":"13975:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15088,"name":"uint256","nodeType":"ElementaryTypeName","src":"13975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13974:20:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15105,"nodeType":"FunctionDefinition","src":"14150:184:19","nodes":[],"documentation":{"id":15092,"nodeType":"StructuredDocumentation","src":"14001:144:19","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"14159:9:19","parameters":{"id":15101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15094,"mutability":"mutable","name":"mnemonic","nameLocation":"14185:8:19","nodeType":"VariableDeclaration","scope":15105,"src":"14169:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15093,"name":"string","nodeType":"ElementaryTypeName","src":"14169:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15096,"mutability":"mutable","name":"derivationPath","nameLocation":"14211:14:19","nodeType":"VariableDeclaration","scope":15105,"src":"14195:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15095,"name":"string","nodeType":"ElementaryTypeName","src":"14195:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15098,"mutability":"mutable","name":"index","nameLocation":"14234:5:19","nodeType":"VariableDeclaration","scope":15105,"src":"14227:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15097,"name":"uint32","nodeType":"ElementaryTypeName","src":"14227:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15100,"mutability":"mutable","name":"language","nameLocation":"14257:8:19","nodeType":"VariableDeclaration","scope":15105,"src":"14241:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15099,"name":"string","nodeType":"ElementaryTypeName","src":"14241:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14168:98:19"},"returnParameters":{"id":15104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15103,"mutability":"mutable","name":"privateKey","nameLocation":"14322:10:19","nodeType":"VariableDeclaration","scope":15105,"src":"14314:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15102,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:20:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15115,"nodeType":"FunctionDefinition","src":"14409:106:19","nodes":[],"documentation":{"id":15106,"nodeType":"StructuredDocumentation","src":"14340:64:19","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"14418:13:19","parameters":{"id":15109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15108,"mutability":"mutable","name":"privateKey","nameLocation":"14440:10:19","nodeType":"VariableDeclaration","scope":15115,"src":"14432:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15107,"name":"uint256","nodeType":"ElementaryTypeName","src":"14432:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14431:20:19"},"returnParameters":{"id":15114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15111,"mutability":"mutable","name":"publicKeyX","nameLocation":"14483:10:19","nodeType":"VariableDeclaration","scope":15115,"src":"14475:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15110,"name":"uint256","nodeType":"ElementaryTypeName","src":"14475:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15113,"mutability":"mutable","name":"publicKeyY","nameLocation":"14503:10:19","nodeType":"VariableDeclaration","scope":15115,"src":"14495:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15112,"name":"uint256","nodeType":"ElementaryTypeName","src":"14495:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14474:40:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15123,"nodeType":"FunctionDefinition","src":"14599:76:19","nodes":[],"documentation":{"id":15116,"nodeType":"StructuredDocumentation","src":"14521:73:19","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"14608:11:19","parameters":{"id":15119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15118,"mutability":"mutable","name":"privateKey","nameLocation":"14628:10:19","nodeType":"VariableDeclaration","scope":15123,"src":"14620:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15117,"name":"uint256","nodeType":"ElementaryTypeName","src":"14620:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14619:20:19"},"returnParameters":{"id":15122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15121,"mutability":"mutable","name":"keyAddr","nameLocation":"14666:7:19","nodeType":"VariableDeclaration","scope":15123,"src":"14658:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15120,"name":"address","nodeType":"ElementaryTypeName","src":"14658:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14657:17:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15136,"nodeType":"FunctionDefinition","src":"14908:155:19","nodes":[],"documentation":{"id":15124,"nodeType":"StructuredDocumentation","src":"14681:222:19","text":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"97cb9189","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"14917:12:19","parameters":{"id":15131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15126,"mutability":"mutable","name":"mnemonic","nameLocation":"14946:8:19","nodeType":"VariableDeclaration","scope":15136,"src":"14930:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15125,"name":"string","nodeType":"ElementaryTypeName","src":"14930:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15128,"mutability":"mutable","name":"derivationPath","nameLocation":"14972:14:19","nodeType":"VariableDeclaration","scope":15136,"src":"14956:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15127,"name":"string","nodeType":"ElementaryTypeName","src":"14956:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15130,"mutability":"mutable","name":"count","nameLocation":"14995:5:19","nodeType":"VariableDeclaration","scope":15136,"src":"14988:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15129,"name":"uint32","nodeType":"ElementaryTypeName","src":"14988:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14929:72:19"},"returnParameters":{"id":15135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15134,"mutability":"mutable","name":"keyAddrs","nameLocation":"15053:8:19","nodeType":"VariableDeclaration","scope":15136,"src":"15036:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15132,"name":"address","nodeType":"ElementaryTypeName","src":"15036:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15133,"nodeType":"ArrayTypeName","src":"15036:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15035:27:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15151,"nodeType":"FunctionDefinition","src":"15322:203:19","nodes":[],"documentation":{"id":15137,"nodeType":"StructuredDocumentation","src":"15069:248:19","text":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"f8d58eaf","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"15331:12:19","parameters":{"id":15146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15139,"mutability":"mutable","name":"mnemonic","nameLocation":"15369:8:19","nodeType":"VariableDeclaration","scope":15151,"src":"15353:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15138,"name":"string","nodeType":"ElementaryTypeName","src":"15353:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15141,"mutability":"mutable","name":"derivationPath","nameLocation":"15403:14:19","nodeType":"VariableDeclaration","scope":15151,"src":"15387:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15140,"name":"string","nodeType":"ElementaryTypeName","src":"15387:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15143,"mutability":"mutable","name":"language","nameLocation":"15443:8:19","nodeType":"VariableDeclaration","scope":15151,"src":"15427:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15142,"name":"string","nodeType":"ElementaryTypeName","src":"15427:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15145,"mutability":"mutable","name":"count","nameLocation":"15468:5:19","nodeType":"VariableDeclaration","scope":15151,"src":"15461:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15144,"name":"uint32","nodeType":"ElementaryTypeName","src":"15461:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15343:136:19"},"returnParameters":{"id":15150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15149,"mutability":"mutable","name":"keyAddrs","nameLocation":"15515:8:19","nodeType":"VariableDeclaration","scope":15151,"src":"15498:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15147,"name":"address","nodeType":"ElementaryTypeName","src":"15498:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15148,"nodeType":"ArrayTypeName","src":"15498:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15497:27:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15164,"nodeType":"FunctionDefinition","src":"15804:102:19","nodes":[],"documentation":{"id":15152,"nodeType":"StructuredDocumentation","src":"15531:268:19","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"15813:11:19","parameters":{"id":15158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15155,"mutability":"mutable","name":"wallet","nameLocation":"15841:6:19","nodeType":"VariableDeclaration","scope":15164,"src":"15825:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15154,"nodeType":"UserDefinedTypeName","pathNode":{"id":15153,"name":"Wallet","nameLocations":["15825:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":14891,"src":"15825:6:19"},"referencedDeclaration":14891,"src":"15825:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":15157,"mutability":"mutable","name":"digest","nameLocation":"15857:6:19","nodeType":"VariableDeclaration","scope":15164,"src":"15849:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15849:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15824:40:19"},"returnParameters":{"id":15163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15160,"mutability":"mutable","name":"r","nameLocation":"15891:1:19","nodeType":"VariableDeclaration","scope":15164,"src":"15883:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15883:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15162,"mutability":"mutable","name":"vs","nameLocation":"15902:2:19","nodeType":"VariableDeclaration","scope":15164,"src":"15894:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15894:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15882:23:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15176,"nodeType":"FunctionDefinition","src":"16217:103:19","nodes":[],"documentation":{"id":15165,"nodeType":"StructuredDocumentation","src":"15912:300:19","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"16226:11:19","parameters":{"id":15170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15167,"mutability":"mutable","name":"privateKey","nameLocation":"16246:10:19","nodeType":"VariableDeclaration","scope":15176,"src":"16238:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15166,"name":"uint256","nodeType":"ElementaryTypeName","src":"16238:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15169,"mutability":"mutable","name":"digest","nameLocation":"16266:6:19","nodeType":"VariableDeclaration","scope":15176,"src":"16258:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16258:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16237:36:19"},"returnParameters":{"id":15175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15172,"mutability":"mutable","name":"r","nameLocation":"16305:1:19","nodeType":"VariableDeclaration","scope":15176,"src":"16297:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16297:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15174,"mutability":"mutable","name":"vs","nameLocation":"16316:2:19","nodeType":"VariableDeclaration","scope":15176,"src":"16308:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16308:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16296:23:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15186,"nodeType":"FunctionDefinition","src":"16996:83:19","nodes":[],"documentation":{"id":15177,"nodeType":"StructuredDocumentation","src":"16326:665:19","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"17005:11:19","parameters":{"id":15180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15179,"mutability":"mutable","name":"digest","nameLocation":"17025:6:19","nodeType":"VariableDeclaration","scope":15186,"src":"17017:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17017:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17016:16:19"},"returnParameters":{"id":15185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15182,"mutability":"mutable","name":"r","nameLocation":"17064:1:19","nodeType":"VariableDeclaration","scope":15186,"src":"17056:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17056:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15184,"mutability":"mutable","name":"vs","nameLocation":"17075:2:19","nodeType":"VariableDeclaration","scope":15186,"src":"17067:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17067:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17055:23:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15198,"nodeType":"FunctionDefinition","src":"17493:99:19","nodes":[],"documentation":{"id":15187,"nodeType":"StructuredDocumentation","src":"17085:403:19","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"17502:11:19","parameters":{"id":15192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15189,"mutability":"mutable","name":"signer","nameLocation":"17522:6:19","nodeType":"VariableDeclaration","scope":15198,"src":"17514:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15188,"name":"address","nodeType":"ElementaryTypeName","src":"17514:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15191,"mutability":"mutable","name":"digest","nameLocation":"17538:6:19","nodeType":"VariableDeclaration","scope":15198,"src":"17530:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17530:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17513:32:19"},"returnParameters":{"id":15197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15194,"mutability":"mutable","name":"r","nameLocation":"17577:1:19","nodeType":"VariableDeclaration","scope":15198,"src":"17569:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17569:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15196,"mutability":"mutable","name":"vs","nameLocation":"17588:2:19","nodeType":"VariableDeclaration","scope":15198,"src":"17580:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17580:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17568:23:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15210,"nodeType":"FunctionDefinition","src":"17666:99:19","nodes":[],"documentation":{"id":15199,"nodeType":"StructuredDocumentation","src":"17598:63:19","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"17675:8:19","parameters":{"id":15204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15201,"mutability":"mutable","name":"privateKey","nameLocation":"17692:10:19","nodeType":"VariableDeclaration","scope":15210,"src":"17684:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15200,"name":"uint256","nodeType":"ElementaryTypeName","src":"17684:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15203,"mutability":"mutable","name":"digest","nameLocation":"17712:6:19","nodeType":"VariableDeclaration","scope":15210,"src":"17704:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17704:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17683:36:19"},"returnParameters":{"id":15209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15206,"mutability":"mutable","name":"r","nameLocation":"17751:1:19","nodeType":"VariableDeclaration","scope":15210,"src":"17743:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17743:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15208,"mutability":"mutable","name":"s","nameLocation":"17762:1:19","nodeType":"VariableDeclaration","scope":15210,"src":"17754:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17754:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17742:22:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15225,"nodeType":"FunctionDefinition","src":"17807:103:19","nodes":[],"documentation":{"id":15211,"nodeType":"StructuredDocumentation","src":"17771:31:19","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17816:4:19","parameters":{"id":15217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15214,"mutability":"mutable","name":"wallet","nameLocation":"17837:6:19","nodeType":"VariableDeclaration","scope":15225,"src":"17821:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15213,"nodeType":"UserDefinedTypeName","pathNode":{"id":15212,"name":"Wallet","nameLocations":["17821:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":14891,"src":"17821:6:19"},"referencedDeclaration":14891,"src":"17821:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":15216,"mutability":"mutable","name":"digest","nameLocation":"17853:6:19","nodeType":"VariableDeclaration","scope":15225,"src":"17845:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17845:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17820:40:19"},"returnParameters":{"id":15224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15219,"mutability":"mutable","name":"v","nameLocation":"17885:1:19","nodeType":"VariableDeclaration","scope":15225,"src":"17879:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15218,"name":"uint8","nodeType":"ElementaryTypeName","src":"17879:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15221,"mutability":"mutable","name":"r","nameLocation":"17896:1:19","nodeType":"VariableDeclaration","scope":15225,"src":"17888:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17888:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15223,"mutability":"mutable","name":"s","nameLocation":"17907:1:19","nodeType":"VariableDeclaration","scope":15225,"src":"17899:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17899:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17878:31:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15239,"nodeType":"FunctionDefinition","src":"17984:104:19","nodes":[],"documentation":{"id":15226,"nodeType":"StructuredDocumentation","src":"17916:63:19","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17993:4:19","parameters":{"id":15231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15228,"mutability":"mutable","name":"privateKey","nameLocation":"18006:10:19","nodeType":"VariableDeclaration","scope":15239,"src":"17998:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15227,"name":"uint256","nodeType":"ElementaryTypeName","src":"17998:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15230,"mutability":"mutable","name":"digest","nameLocation":"18026:6:19","nodeType":"VariableDeclaration","scope":15239,"src":"18018:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18018:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17997:36:19"},"returnParameters":{"id":15238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15233,"mutability":"mutable","name":"v","nameLocation":"18063:1:19","nodeType":"VariableDeclaration","scope":15239,"src":"18057:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15232,"name":"uint8","nodeType":"ElementaryTypeName","src":"18057:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15235,"mutability":"mutable","name":"r","nameLocation":"18074:1:19","nodeType":"VariableDeclaration","scope":15239,"src":"18066:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18066:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15237,"mutability":"mutable","name":"s","nameLocation":"18085:1:19","nodeType":"VariableDeclaration","scope":15239,"src":"18077:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18077:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18056:31:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15251,"nodeType":"FunctionDefinition","src":"18527:84:19","nodes":[],"documentation":{"id":15240,"nodeType":"StructuredDocumentation","src":"18094:428:19","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18536:4:19","parameters":{"id":15243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15242,"mutability":"mutable","name":"digest","nameLocation":"18549:6:19","nodeType":"VariableDeclaration","scope":15251,"src":"18541:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18541:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18540:16:19"},"returnParameters":{"id":15250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15245,"mutability":"mutable","name":"v","nameLocation":"18586:1:19","nodeType":"VariableDeclaration","scope":15251,"src":"18580:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15244,"name":"uint8","nodeType":"ElementaryTypeName","src":"18580:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15247,"mutability":"mutable","name":"r","nameLocation":"18597:1:19","nodeType":"VariableDeclaration","scope":15251,"src":"18589:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18589:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15249,"mutability":"mutable","name":"s","nameLocation":"18608:1:19","nodeType":"VariableDeclaration","scope":15251,"src":"18600:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18600:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18579:31:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15265,"nodeType":"FunctionDefinition","src":"18788:100:19","nodes":[],"documentation":{"id":15252,"nodeType":"StructuredDocumentation","src":"18617:166:19","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18797:4:19","parameters":{"id":15257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15254,"mutability":"mutable","name":"signer","nameLocation":"18810:6:19","nodeType":"VariableDeclaration","scope":15265,"src":"18802:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15253,"name":"address","nodeType":"ElementaryTypeName","src":"18802:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15256,"mutability":"mutable","name":"digest","nameLocation":"18826:6:19","nodeType":"VariableDeclaration","scope":15265,"src":"18818:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18818:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18801:32:19"},"returnParameters":{"id":15264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15259,"mutability":"mutable","name":"v","nameLocation":"18863:1:19","nodeType":"VariableDeclaration","scope":15265,"src":"18857:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15258,"name":"uint8","nodeType":"ElementaryTypeName","src":"18857:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15261,"mutability":"mutable","name":"r","nameLocation":"18874:1:19","nodeType":"VariableDeclaration","scope":15265,"src":"18866:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18866:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15263,"mutability":"mutable","name":"s","nameLocation":"18885:1:19","nodeType":"VariableDeclaration","scope":15265,"src":"18877:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18877:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18856:31:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15273,"nodeType":"FunctionDefinition","src":"19075:80:19","nodes":[],"documentation":{"id":15266,"nodeType":"StructuredDocumentation","src":"18932:138:19","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"19084:10:19","parameters":{"id":15269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15268,"mutability":"mutable","name":"name","nameLocation":"19111:4:19","nodeType":"VariableDeclaration","scope":15273,"src":"19095:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15267,"name":"string","nodeType":"ElementaryTypeName","src":"19095:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19094:22:19"},"returnParameters":{"id":15272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15271,"mutability":"mutable","name":"value","nameLocation":"19148:5:19","nodeType":"VariableDeclaration","scope":15273,"src":"19140:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15270,"name":"address","nodeType":"ElementaryTypeName","src":"19140:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19139:15:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15284,"nodeType":"FunctionDefinition","src":"19338:112:19","nodes":[],"documentation":{"id":15274,"nodeType":"StructuredDocumentation","src":"19161:172:19","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"19347:10:19","parameters":{"id":15279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15276,"mutability":"mutable","name":"name","nameLocation":"19374:4:19","nodeType":"VariableDeclaration","scope":15284,"src":"19358:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15275,"name":"string","nodeType":"ElementaryTypeName","src":"19358:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15278,"mutability":"mutable","name":"delim","nameLocation":"19396:5:19","nodeType":"VariableDeclaration","scope":15284,"src":"19380:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15277,"name":"string","nodeType":"ElementaryTypeName","src":"19380:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19357:45:19"},"returnParameters":{"id":15283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15282,"mutability":"mutable","name":"value","nameLocation":"19443:5:19","nodeType":"VariableDeclaration","scope":15284,"src":"19426:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15280,"name":"address","nodeType":"ElementaryTypeName","src":"19426:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15281,"nodeType":"ArrayTypeName","src":"19426:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"19425:24:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15292,"nodeType":"FunctionDefinition","src":"19596:74:19","nodes":[],"documentation":{"id":15285,"nodeType":"StructuredDocumentation","src":"19456:135:19","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"19605:7:19","parameters":{"id":15288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15287,"mutability":"mutable","name":"name","nameLocation":"19629:4:19","nodeType":"VariableDeclaration","scope":15292,"src":"19613:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15286,"name":"string","nodeType":"ElementaryTypeName","src":"19613:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19612:22:19"},"returnParameters":{"id":15291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15290,"mutability":"mutable","name":"value","nameLocation":"19663:5:19","nodeType":"VariableDeclaration","scope":15292,"src":"19658:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15289,"name":"bool","nodeType":"ElementaryTypeName","src":"19658:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19657:12:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15303,"nodeType":"FunctionDefinition","src":"19850:106:19","nodes":[],"documentation":{"id":15293,"nodeType":"StructuredDocumentation","src":"19676:169:19","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"19859:7:19","parameters":{"id":15298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15295,"mutability":"mutable","name":"name","nameLocation":"19883:4:19","nodeType":"VariableDeclaration","scope":15303,"src":"19867:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15294,"name":"string","nodeType":"ElementaryTypeName","src":"19867:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15297,"mutability":"mutable","name":"delim","nameLocation":"19905:5:19","nodeType":"VariableDeclaration","scope":15303,"src":"19889:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15296,"name":"string","nodeType":"ElementaryTypeName","src":"19889:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19866:45:19"},"returnParameters":{"id":15302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15301,"mutability":"mutable","name":"value","nameLocation":"19949:5:19","nodeType":"VariableDeclaration","scope":15303,"src":"19935:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15299,"name":"bool","nodeType":"ElementaryTypeName","src":"19935:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15300,"nodeType":"ArrayTypeName","src":"19935:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"19934:21:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15311,"nodeType":"FunctionDefinition","src":"20105:80:19","nodes":[],"documentation":{"id":15304,"nodeType":"StructuredDocumentation","src":"19962:138:19","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"20114:10:19","parameters":{"id":15307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15306,"mutability":"mutable","name":"name","nameLocation":"20141:4:19","nodeType":"VariableDeclaration","scope":15311,"src":"20125:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15305,"name":"string","nodeType":"ElementaryTypeName","src":"20125:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20124:22:19"},"returnParameters":{"id":15310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15309,"mutability":"mutable","name":"value","nameLocation":"20178:5:19","nodeType":"VariableDeclaration","scope":15311,"src":"20170:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20170:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20169:15:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15322,"nodeType":"FunctionDefinition","src":"20368:112:19","nodes":[],"documentation":{"id":15312,"nodeType":"StructuredDocumentation","src":"20191:172:19","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"20377:10:19","parameters":{"id":15317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15314,"mutability":"mutable","name":"name","nameLocation":"20404:4:19","nodeType":"VariableDeclaration","scope":15322,"src":"20388:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15313,"name":"string","nodeType":"ElementaryTypeName","src":"20388:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15316,"mutability":"mutable","name":"delim","nameLocation":"20426:5:19","nodeType":"VariableDeclaration","scope":15322,"src":"20410:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15315,"name":"string","nodeType":"ElementaryTypeName","src":"20410:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20387:45:19"},"returnParameters":{"id":15321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15320,"mutability":"mutable","name":"value","nameLocation":"20473:5:19","nodeType":"VariableDeclaration","scope":15322,"src":"20456:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20456:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15319,"nodeType":"ArrayTypeName","src":"20456:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"20455:24:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15330,"nodeType":"FunctionDefinition","src":"20627:83:19","nodes":[],"documentation":{"id":15323,"nodeType":"StructuredDocumentation","src":"20486:136:19","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"20636:8:19","parameters":{"id":15326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15325,"mutability":"mutable","name":"name","nameLocation":"20661:4:19","nodeType":"VariableDeclaration","scope":15330,"src":"20645:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15324,"name":"string","nodeType":"ElementaryTypeName","src":"20645:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20644:22:19"},"returnParameters":{"id":15329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15328,"mutability":"mutable","name":"value","nameLocation":"20703:5:19","nodeType":"VariableDeclaration","scope":15330,"src":"20690:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15327,"name":"bytes","nodeType":"ElementaryTypeName","src":"20690:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20689:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15341,"nodeType":"FunctionDefinition","src":"20891:108:19","nodes":[],"documentation":{"id":15331,"nodeType":"StructuredDocumentation","src":"20716:170:19","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"20900:8:19","parameters":{"id":15336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15333,"mutability":"mutable","name":"name","nameLocation":"20925:4:19","nodeType":"VariableDeclaration","scope":15341,"src":"20909:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15332,"name":"string","nodeType":"ElementaryTypeName","src":"20909:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15335,"mutability":"mutable","name":"delim","nameLocation":"20947:5:19","nodeType":"VariableDeclaration","scope":15341,"src":"20931:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15334,"name":"string","nodeType":"ElementaryTypeName","src":"20931:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20908:45:19"},"returnParameters":{"id":15340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15339,"mutability":"mutable","name":"value","nameLocation":"20992:5:19","nodeType":"VariableDeclaration","scope":15341,"src":"20977:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15337,"name":"bytes","nodeType":"ElementaryTypeName","src":"20977:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15338,"nodeType":"ArrayTypeName","src":"20977:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"20976:22:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15349,"nodeType":"FunctionDefinition","src":"21101:77:19","nodes":[],"documentation":{"id":15342,"nodeType":"StructuredDocumentation","src":"21005:91:19","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"21110:9:19","parameters":{"id":15345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15344,"mutability":"mutable","name":"name","nameLocation":"21136:4:19","nodeType":"VariableDeclaration","scope":15349,"src":"21120:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15343,"name":"string","nodeType":"ElementaryTypeName","src":"21120:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21119:22:19"},"returnParameters":{"id":15348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15347,"mutability":"mutable","name":"result","nameLocation":"21170:6:19","nodeType":"VariableDeclaration","scope":15349,"src":"21165:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15346,"name":"bool","nodeType":"ElementaryTypeName","src":"21165:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21164:13:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15357,"nodeType":"FunctionDefinition","src":"21326:75:19","nodes":[],"documentation":{"id":15350,"nodeType":"StructuredDocumentation","src":"21184:137:19","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"21335:6:19","parameters":{"id":15353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15352,"mutability":"mutable","name":"name","nameLocation":"21358:4:19","nodeType":"VariableDeclaration","scope":15357,"src":"21342:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15351,"name":"string","nodeType":"ElementaryTypeName","src":"21342:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21341:22:19"},"returnParameters":{"id":15356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15355,"mutability":"mutable","name":"value","nameLocation":"21394:5:19","nodeType":"VariableDeclaration","scope":15357,"src":"21387:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15354,"name":"int256","nodeType":"ElementaryTypeName","src":"21387:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21386:14:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15368,"nodeType":"FunctionDefinition","src":"21583:107:19","nodes":[],"documentation":{"id":15358,"nodeType":"StructuredDocumentation","src":"21407:171:19","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"21592:6:19","parameters":{"id":15363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15360,"mutability":"mutable","name":"name","nameLocation":"21615:4:19","nodeType":"VariableDeclaration","scope":15368,"src":"21599:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15359,"name":"string","nodeType":"ElementaryTypeName","src":"21599:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15362,"mutability":"mutable","name":"delim","nameLocation":"21637:5:19","nodeType":"VariableDeclaration","scope":15368,"src":"21621:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15361,"name":"string","nodeType":"ElementaryTypeName","src":"21621:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21598:45:19"},"returnParameters":{"id":15367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15366,"mutability":"mutable","name":"value","nameLocation":"21683:5:19","nodeType":"VariableDeclaration","scope":15368,"src":"21667:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15364,"name":"int256","nodeType":"ElementaryTypeName","src":"21667:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15365,"nodeType":"ArrayTypeName","src":"21667:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21666:23:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15378,"nodeType":"FunctionDefinition","src":"21881:91:19","nodes":[],"documentation":{"id":15369,"nodeType":"StructuredDocumentation","src":"21696:180:19","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21890:5:19","parameters":{"id":15374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15371,"mutability":"mutable","name":"name","nameLocation":"21912:4:19","nodeType":"VariableDeclaration","scope":15378,"src":"21896:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15370,"name":"string","nodeType":"ElementaryTypeName","src":"21896:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15373,"mutability":"mutable","name":"defaultValue","nameLocation":"21923:12:19","nodeType":"VariableDeclaration","scope":15378,"src":"21918:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15372,"name":"bool","nodeType":"ElementaryTypeName","src":"21918:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21895:41:19"},"returnParameters":{"id":15377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15376,"mutability":"mutable","name":"value","nameLocation":"21965:5:19","nodeType":"VariableDeclaration","scope":15378,"src":"21960:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15375,"name":"bool","nodeType":"ElementaryTypeName","src":"21960:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21959:12:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15388,"nodeType":"FunctionDefinition","src":"22166:97:19","nodes":[],"documentation":{"id":15379,"nodeType":"StructuredDocumentation","src":"21978:183:19","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22175:5:19","parameters":{"id":15384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15381,"mutability":"mutable","name":"name","nameLocation":"22197:4:19","nodeType":"VariableDeclaration","scope":15388,"src":"22181:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15380,"name":"string","nodeType":"ElementaryTypeName","src":"22181:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15383,"mutability":"mutable","name":"defaultValue","nameLocation":"22211:12:19","nodeType":"VariableDeclaration","scope":15388,"src":"22203:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15382,"name":"uint256","nodeType":"ElementaryTypeName","src":"22203:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22180:44:19"},"returnParameters":{"id":15387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15386,"mutability":"mutable","name":"value","nameLocation":"22256:5:19","nodeType":"VariableDeclaration","scope":15388,"src":"22248:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15385,"name":"uint256","nodeType":"ElementaryTypeName","src":"22248:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22247:15:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15402,"nodeType":"FunctionDefinition","src":"22491:164:19","nodes":[],"documentation":{"id":15389,"nodeType":"StructuredDocumentation","src":"22269:217:19","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22500:5:19","parameters":{"id":15397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15391,"mutability":"mutable","name":"name","nameLocation":"22522:4:19","nodeType":"VariableDeclaration","scope":15402,"src":"22506:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15390,"name":"string","nodeType":"ElementaryTypeName","src":"22506:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15393,"mutability":"mutable","name":"delim","nameLocation":"22544:5:19","nodeType":"VariableDeclaration","scope":15402,"src":"22528:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15392,"name":"string","nodeType":"ElementaryTypeName","src":"22528:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15396,"mutability":"mutable","name":"defaultValue","nameLocation":"22570:12:19","nodeType":"VariableDeclaration","scope":15402,"src":"22551:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15394,"name":"address","nodeType":"ElementaryTypeName","src":"22551:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15395,"nodeType":"ArrayTypeName","src":"22551:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"22505:78:19"},"returnParameters":{"id":15401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15400,"mutability":"mutable","name":"value","nameLocation":"22648:5:19","nodeType":"VariableDeclaration","scope":15402,"src":"22631:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15398,"name":"address","nodeType":"ElementaryTypeName","src":"22631:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15399,"nodeType":"ArrayTypeName","src":"22631:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"22630:24:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15416,"nodeType":"FunctionDefinition","src":"22883:164:19","nodes":[],"documentation":{"id":15403,"nodeType":"StructuredDocumentation","src":"22661:217:19","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22892:5:19","parameters":{"id":15411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15405,"mutability":"mutable","name":"name","nameLocation":"22914:4:19","nodeType":"VariableDeclaration","scope":15416,"src":"22898:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15404,"name":"string","nodeType":"ElementaryTypeName","src":"22898:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15407,"mutability":"mutable","name":"delim","nameLocation":"22936:5:19","nodeType":"VariableDeclaration","scope":15416,"src":"22920:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15406,"name":"string","nodeType":"ElementaryTypeName","src":"22920:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15410,"mutability":"mutable","name":"defaultValue","nameLocation":"22962:12:19","nodeType":"VariableDeclaration","scope":15416,"src":"22943:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22943:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15409,"nodeType":"ArrayTypeName","src":"22943:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"22897:78:19"},"returnParameters":{"id":15415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15414,"mutability":"mutable","name":"value","nameLocation":"23040:5:19","nodeType":"VariableDeclaration","scope":15416,"src":"23023:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23023:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15413,"nodeType":"ArrayTypeName","src":"23023:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23022:24:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15430,"nodeType":"FunctionDefinition","src":"23274:162:19","nodes":[],"documentation":{"id":15417,"nodeType":"StructuredDocumentation","src":"23053:216:19","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23283:5:19","parameters":{"id":15425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15419,"mutability":"mutable","name":"name","nameLocation":"23305:4:19","nodeType":"VariableDeclaration","scope":15430,"src":"23289:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15418,"name":"string","nodeType":"ElementaryTypeName","src":"23289:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15421,"mutability":"mutable","name":"delim","nameLocation":"23327:5:19","nodeType":"VariableDeclaration","scope":15430,"src":"23311:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15420,"name":"string","nodeType":"ElementaryTypeName","src":"23311:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15424,"mutability":"mutable","name":"defaultValue","nameLocation":"23352:12:19","nodeType":"VariableDeclaration","scope":15430,"src":"23334:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15422,"name":"string","nodeType":"ElementaryTypeName","src":"23334:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15423,"nodeType":"ArrayTypeName","src":"23334:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"23288:77:19"},"returnParameters":{"id":15429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15428,"mutability":"mutable","name":"value","nameLocation":"23429:5:19","nodeType":"VariableDeclaration","scope":15430,"src":"23413:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15426,"name":"string","nodeType":"ElementaryTypeName","src":"23413:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15427,"nodeType":"ArrayTypeName","src":"23413:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"23412:23:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15444,"nodeType":"FunctionDefinition","src":"23662:160:19","nodes":[],"documentation":{"id":15431,"nodeType":"StructuredDocumentation","src":"23442:215:19","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23671:5:19","parameters":{"id":15439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15433,"mutability":"mutable","name":"name","nameLocation":"23693:4:19","nodeType":"VariableDeclaration","scope":15444,"src":"23677:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15432,"name":"string","nodeType":"ElementaryTypeName","src":"23677:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15435,"mutability":"mutable","name":"delim","nameLocation":"23715:5:19","nodeType":"VariableDeclaration","scope":15444,"src":"23699:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15434,"name":"string","nodeType":"ElementaryTypeName","src":"23699:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15438,"mutability":"mutable","name":"defaultValue","nameLocation":"23739:12:19","nodeType":"VariableDeclaration","scope":15444,"src":"23722:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15436,"name":"bytes","nodeType":"ElementaryTypeName","src":"23722:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15437,"nodeType":"ArrayTypeName","src":"23722:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23676:76:19"},"returnParameters":{"id":15443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15442,"mutability":"mutable","name":"value","nameLocation":"23815:5:19","nodeType":"VariableDeclaration","scope":15444,"src":"23800:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15440,"name":"bytes","nodeType":"ElementaryTypeName","src":"23800:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15441,"nodeType":"ArrayTypeName","src":"23800:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23799:22:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15454,"nodeType":"FunctionDefinition","src":"24015:95:19","nodes":[],"documentation":{"id":15445,"nodeType":"StructuredDocumentation","src":"23828:182:19","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24024:5:19","parameters":{"id":15450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15447,"mutability":"mutable","name":"name","nameLocation":"24046:4:19","nodeType":"VariableDeclaration","scope":15454,"src":"24030:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15446,"name":"string","nodeType":"ElementaryTypeName","src":"24030:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15449,"mutability":"mutable","name":"defaultValue","nameLocation":"24059:12:19","nodeType":"VariableDeclaration","scope":15454,"src":"24052:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15448,"name":"int256","nodeType":"ElementaryTypeName","src":"24052:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24029:43:19"},"returnParameters":{"id":15453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15452,"mutability":"mutable","name":"value","nameLocation":"24103:5:19","nodeType":"VariableDeclaration","scope":15454,"src":"24096:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15451,"name":"int256","nodeType":"ElementaryTypeName","src":"24096:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24095:14:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15464,"nodeType":"FunctionDefinition","src":"24304:97:19","nodes":[],"documentation":{"id":15455,"nodeType":"StructuredDocumentation","src":"24116:183:19","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24313:5:19","parameters":{"id":15460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15457,"mutability":"mutable","name":"name","nameLocation":"24335:4:19","nodeType":"VariableDeclaration","scope":15464,"src":"24319:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15456,"name":"string","nodeType":"ElementaryTypeName","src":"24319:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15459,"mutability":"mutable","name":"defaultValue","nameLocation":"24349:12:19","nodeType":"VariableDeclaration","scope":15464,"src":"24341:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15458,"name":"address","nodeType":"ElementaryTypeName","src":"24341:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24318:44:19"},"returnParameters":{"id":15463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15462,"mutability":"mutable","name":"value","nameLocation":"24394:5:19","nodeType":"VariableDeclaration","scope":15464,"src":"24386:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15461,"name":"address","nodeType":"ElementaryTypeName","src":"24386:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24385:15:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15474,"nodeType":"FunctionDefinition","src":"24595:97:19","nodes":[],"documentation":{"id":15465,"nodeType":"StructuredDocumentation","src":"24407:183:19","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24604:5:19","parameters":{"id":15470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15467,"mutability":"mutable","name":"name","nameLocation":"24626:4:19","nodeType":"VariableDeclaration","scope":15474,"src":"24610:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15466,"name":"string","nodeType":"ElementaryTypeName","src":"24610:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15469,"mutability":"mutable","name":"defaultValue","nameLocation":"24640:12:19","nodeType":"VariableDeclaration","scope":15474,"src":"24632:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24632:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24609:44:19"},"returnParameters":{"id":15473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15472,"mutability":"mutable","name":"value","nameLocation":"24685:5:19","nodeType":"VariableDeclaration","scope":15474,"src":"24677:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24677:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24676:15:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15484,"nodeType":"FunctionDefinition","src":"24885:111:19","nodes":[],"documentation":{"id":15475,"nodeType":"StructuredDocumentation","src":"24698:182:19","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24894:5:19","parameters":{"id":15480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15477,"mutability":"mutable","name":"name","nameLocation":"24916:4:19","nodeType":"VariableDeclaration","scope":15484,"src":"24900:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15476,"name":"string","nodeType":"ElementaryTypeName","src":"24900:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15479,"mutability":"mutable","name":"defaultValue","nameLocation":"24938:12:19","nodeType":"VariableDeclaration","scope":15484,"src":"24922:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15478,"name":"string","nodeType":"ElementaryTypeName","src":"24922:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24899:52:19"},"returnParameters":{"id":15483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15482,"mutability":"mutable","name":"value","nameLocation":"24989:5:19","nodeType":"VariableDeclaration","scope":15484,"src":"24975:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15481,"name":"string","nodeType":"ElementaryTypeName","src":"24975:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24974:21:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15494,"nodeType":"FunctionDefinition","src":"25188:109:19","nodes":[],"documentation":{"id":15485,"nodeType":"StructuredDocumentation","src":"25002:181:19","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25197:5:19","parameters":{"id":15490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15487,"mutability":"mutable","name":"name","nameLocation":"25219:4:19","nodeType":"VariableDeclaration","scope":15494,"src":"25203:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15486,"name":"string","nodeType":"ElementaryTypeName","src":"25203:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15489,"mutability":"mutable","name":"defaultValue","nameLocation":"25240:12:19","nodeType":"VariableDeclaration","scope":15494,"src":"25225:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15488,"name":"bytes","nodeType":"ElementaryTypeName","src":"25225:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25202:51:19"},"returnParameters":{"id":15493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15492,"mutability":"mutable","name":"value","nameLocation":"25290:5:19","nodeType":"VariableDeclaration","scope":15494,"src":"25277:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15491,"name":"bytes","nodeType":"ElementaryTypeName","src":"25277:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25276:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15508,"nodeType":"FunctionDefinition","src":"25522:158:19","nodes":[],"documentation":{"id":15495,"nodeType":"StructuredDocumentation","src":"25303:214:19","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25531:5:19","parameters":{"id":15503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15497,"mutability":"mutable","name":"name","nameLocation":"25553:4:19","nodeType":"VariableDeclaration","scope":15508,"src":"25537:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15496,"name":"string","nodeType":"ElementaryTypeName","src":"25537:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15499,"mutability":"mutable","name":"delim","nameLocation":"25575:5:19","nodeType":"VariableDeclaration","scope":15508,"src":"25559:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15498,"name":"string","nodeType":"ElementaryTypeName","src":"25559:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15502,"mutability":"mutable","name":"defaultValue","nameLocation":"25598:12:19","nodeType":"VariableDeclaration","scope":15508,"src":"25582:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15500,"name":"bool","nodeType":"ElementaryTypeName","src":"25582:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15501,"nodeType":"ArrayTypeName","src":"25582:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"25536:75:19"},"returnParameters":{"id":15507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15506,"mutability":"mutable","name":"value","nameLocation":"25673:5:19","nodeType":"VariableDeclaration","scope":15508,"src":"25659:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15504,"name":"bool","nodeType":"ElementaryTypeName","src":"25659:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15505,"nodeType":"ArrayTypeName","src":"25659:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"25658:21:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15522,"nodeType":"FunctionDefinition","src":"25908:164:19","nodes":[],"documentation":{"id":15509,"nodeType":"StructuredDocumentation","src":"25686:217:19","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25917:5:19","parameters":{"id":15517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15511,"mutability":"mutable","name":"name","nameLocation":"25939:4:19","nodeType":"VariableDeclaration","scope":15522,"src":"25923:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15510,"name":"string","nodeType":"ElementaryTypeName","src":"25923:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15513,"mutability":"mutable","name":"delim","nameLocation":"25961:5:19","nodeType":"VariableDeclaration","scope":15522,"src":"25945:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15512,"name":"string","nodeType":"ElementaryTypeName","src":"25945:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15516,"mutability":"mutable","name":"defaultValue","nameLocation":"25987:12:19","nodeType":"VariableDeclaration","scope":15522,"src":"25968:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15514,"name":"uint256","nodeType":"ElementaryTypeName","src":"25968:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15515,"nodeType":"ArrayTypeName","src":"25968:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25922:78:19"},"returnParameters":{"id":15521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15520,"mutability":"mutable","name":"value","nameLocation":"26065:5:19","nodeType":"VariableDeclaration","scope":15522,"src":"26048:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15518,"name":"uint256","nodeType":"ElementaryTypeName","src":"26048:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15519,"nodeType":"ArrayTypeName","src":"26048:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26047:24:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15536,"nodeType":"FunctionDefinition","src":"26299:162:19","nodes":[],"documentation":{"id":15523,"nodeType":"StructuredDocumentation","src":"26078:216:19","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"26308:5:19","parameters":{"id":15531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15525,"mutability":"mutable","name":"name","nameLocation":"26330:4:19","nodeType":"VariableDeclaration","scope":15536,"src":"26314:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15524,"name":"string","nodeType":"ElementaryTypeName","src":"26314:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15527,"mutability":"mutable","name":"delim","nameLocation":"26352:5:19","nodeType":"VariableDeclaration","scope":15536,"src":"26336:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15526,"name":"string","nodeType":"ElementaryTypeName","src":"26336:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15530,"mutability":"mutable","name":"defaultValue","nameLocation":"26377:12:19","nodeType":"VariableDeclaration","scope":15536,"src":"26359:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15528,"name":"int256","nodeType":"ElementaryTypeName","src":"26359:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15529,"nodeType":"ArrayTypeName","src":"26359:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"26313:77:19"},"returnParameters":{"id":15535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15534,"mutability":"mutable","name":"value","nameLocation":"26454:5:19","nodeType":"VariableDeclaration","scope":15536,"src":"26438:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15532,"name":"int256","nodeType":"ElementaryTypeName","src":"26438:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15533,"nodeType":"ArrayTypeName","src":"26438:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"26437:23:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15544,"nodeType":"FunctionDefinition","src":"26609:85:19","nodes":[],"documentation":{"id":15537,"nodeType":"StructuredDocumentation","src":"26467:137:19","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"26618:9:19","parameters":{"id":15540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15539,"mutability":"mutable","name":"name","nameLocation":"26644:4:19","nodeType":"VariableDeclaration","scope":15544,"src":"26628:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15538,"name":"string","nodeType":"ElementaryTypeName","src":"26628:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26627:22:19"},"returnParameters":{"id":15543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15542,"mutability":"mutable","name":"value","nameLocation":"26687:5:19","nodeType":"VariableDeclaration","scope":15544,"src":"26673:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15541,"name":"string","nodeType":"ElementaryTypeName","src":"26673:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26672:21:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15555,"nodeType":"FunctionDefinition","src":"26876:110:19","nodes":[],"documentation":{"id":15545,"nodeType":"StructuredDocumentation","src":"26700:171:19","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"26885:9:19","parameters":{"id":15550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15547,"mutability":"mutable","name":"name","nameLocation":"26911:4:19","nodeType":"VariableDeclaration","scope":15555,"src":"26895:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15546,"name":"string","nodeType":"ElementaryTypeName","src":"26895:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15549,"mutability":"mutable","name":"delim","nameLocation":"26933:5:19","nodeType":"VariableDeclaration","scope":15555,"src":"26917:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15548,"name":"string","nodeType":"ElementaryTypeName","src":"26917:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26894:45:19"},"returnParameters":{"id":15554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15553,"mutability":"mutable","name":"value","nameLocation":"26979:5:19","nodeType":"VariableDeclaration","scope":15555,"src":"26963:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15551,"name":"string","nodeType":"ElementaryTypeName","src":"26963:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15552,"nodeType":"ArrayTypeName","src":"26963:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"26962:23:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15563,"nodeType":"FunctionDefinition","src":"27135:77:19","nodes":[],"documentation":{"id":15556,"nodeType":"StructuredDocumentation","src":"26992:138:19","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"27144:7:19","parameters":{"id":15559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15558,"mutability":"mutable","name":"name","nameLocation":"27168:4:19","nodeType":"VariableDeclaration","scope":15563,"src":"27152:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15557,"name":"string","nodeType":"ElementaryTypeName","src":"27152:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27151:22:19"},"returnParameters":{"id":15562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15561,"mutability":"mutable","name":"value","nameLocation":"27205:5:19","nodeType":"VariableDeclaration","scope":15563,"src":"27197:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15560,"name":"uint256","nodeType":"ElementaryTypeName","src":"27197:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27196:15:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15574,"nodeType":"FunctionDefinition","src":"27395:109:19","nodes":[],"documentation":{"id":15564,"nodeType":"StructuredDocumentation","src":"27218:172:19","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"27404:7:19","parameters":{"id":15569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15566,"mutability":"mutable","name":"name","nameLocation":"27428:4:19","nodeType":"VariableDeclaration","scope":15574,"src":"27412:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15565,"name":"string","nodeType":"ElementaryTypeName","src":"27412:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15568,"mutability":"mutable","name":"delim","nameLocation":"27450:5:19","nodeType":"VariableDeclaration","scope":15574,"src":"27434:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15567,"name":"string","nodeType":"ElementaryTypeName","src":"27434:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27411:45:19"},"returnParameters":{"id":15573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15572,"mutability":"mutable","name":"value","nameLocation":"27497:5:19","nodeType":"VariableDeclaration","scope":15574,"src":"27480:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15570,"name":"uint256","nodeType":"ElementaryTypeName","src":"27480:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15571,"nodeType":"ArrayTypeName","src":"27480:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"27479:24:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15583,"nodeType":"FunctionDefinition","src":"27581:77:19","nodes":[],"documentation":{"id":15575,"nodeType":"StructuredDocumentation","src":"27510:66:19","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"27590:9:19","parameters":{"id":15579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15578,"mutability":"mutable","name":"context","nameLocation":"27613:7:19","nodeType":"VariableDeclaration","scope":15583,"src":"27600:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$14812","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":15577,"nodeType":"UserDefinedTypeName","pathNode":{"id":15576,"name":"ForgeContext","nameLocations":["27600:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":14812,"src":"27600:12:19"},"referencedDeclaration":14812,"src":"27600:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$14812","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"27599:22:19"},"returnParameters":{"id":15582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15581,"mutability":"mutable","name":"result","nameLocation":"27650:6:19","nodeType":"VariableDeclaration","scope":15583,"src":"27645:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15580,"name":"bool","nodeType":"ElementaryTypeName","src":"27645:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27644:13:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15591,"nodeType":"FunctionDefinition","src":"27700:70:19","nodes":[],"documentation":{"id":15584,"nodeType":"StructuredDocumentation","src":"27664:31:19","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"27709:6:19","parameters":{"id":15589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15586,"mutability":"mutable","name":"name","nameLocation":"27732:4:19","nodeType":"VariableDeclaration","scope":15591,"src":"27716:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15585,"name":"string","nodeType":"ElementaryTypeName","src":"27716:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15588,"mutability":"mutable","name":"value","nameLocation":"27754:5:19","nodeType":"VariableDeclaration","scope":15591,"src":"27738:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15587,"name":"string","nodeType":"ElementaryTypeName","src":"27738:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27715:45:19"},"returnParameters":{"id":15590,"nodeType":"ParameterList","parameters":[],"src":"27769:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15603,"nodeType":"FunctionDefinition","src":"27902:109:19","nodes":[],"documentation":{"id":15592,"nodeType":"StructuredDocumentation","src":"27806:91:19","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"27911:8:19","parameters":{"id":15595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15594,"mutability":"mutable","name":"target","nameLocation":"27928:6:19","nodeType":"VariableDeclaration","scope":15603,"src":"27920:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15593,"name":"address","nodeType":"ElementaryTypeName","src":"27920:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27919:16:19"},"returnParameters":{"id":15602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15598,"mutability":"mutable","name":"readSlots","nameLocation":"27971:9:19","nodeType":"VariableDeclaration","scope":15603,"src":"27954:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27954:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15597,"nodeType":"ArrayTypeName","src":"27954:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15601,"mutability":"mutable","name":"writeSlots","nameLocation":"27999:10:19","nodeType":"VariableDeclaration","scope":15603,"src":"27982:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27982:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15600,"nodeType":"ArrayTypeName","src":"27982:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"27953:57:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15611,"nodeType":"FunctionDefinition","src":"28067:74:19","nodes":[],"documentation":{"id":15604,"nodeType":"StructuredDocumentation","src":"28017:45:19","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"28076:4:19","parameters":{"id":15607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15606,"mutability":"mutable","name":"privateKey","nameLocation":"28089:10:19","nodeType":"VariableDeclaration","scope":15611,"src":"28081:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15605,"name":"uint256","nodeType":"ElementaryTypeName","src":"28081:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28080:20:19"},"returnParameters":{"id":15610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15609,"mutability":"mutable","name":"keyAddr","nameLocation":"28132:7:19","nodeType":"VariableDeclaration","scope":15611,"src":"28124:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15608,"name":"address","nodeType":"ElementaryTypeName","src":"28124:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28123:17:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15628,"nodeType":"FunctionDefinition","src":"28204:160:19","nodes":[],"documentation":{"id":15612,"nodeType":"StructuredDocumentation","src":"28147:52:19","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"28213:11:19","parameters":{"id":15622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15614,"mutability":"mutable","name":"fromBlock","nameLocation":"28233:9:19","nodeType":"VariableDeclaration","scope":15628,"src":"28225:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15613,"name":"uint256","nodeType":"ElementaryTypeName","src":"28225:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15616,"mutability":"mutable","name":"toBlock","nameLocation":"28252:7:19","nodeType":"VariableDeclaration","scope":15628,"src":"28244:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15615,"name":"uint256","nodeType":"ElementaryTypeName","src":"28244:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15618,"mutability":"mutable","name":"target","nameLocation":"28269:6:19","nodeType":"VariableDeclaration","scope":15628,"src":"28261:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15617,"name":"address","nodeType":"ElementaryTypeName","src":"28261:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15621,"mutability":"mutable","name":"topics","nameLocation":"28296:6:19","nodeType":"VariableDeclaration","scope":15628,"src":"28277:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28277:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15620,"nodeType":"ArrayTypeName","src":"28277:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"28224:79:19"},"returnParameters":{"id":15627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15626,"mutability":"mutable","name":"logs","nameLocation":"28358:4:19","nodeType":"VariableDeclaration","scope":15628,"src":"28338:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$14853_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":15624,"nodeType":"UserDefinedTypeName","pathNode":{"id":15623,"name":"EthGetLogs","nameLocations":["28338:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":14853,"src":"28338:10:19"},"referencedDeclaration":14853,"src":"28338:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$14853_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":15625,"nodeType":"ArrayTypeName","src":"28338:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$14853_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"28337:26:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15634,"nodeType":"FunctionDefinition","src":"28701:70:19","nodes":[],"documentation":{"id":15629,"nodeType":"StructuredDocumentation","src":"28370:326:19","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"28710:14:19","parameters":{"id":15630,"nodeType":"ParameterList","parameters":[],"src":"28724:2:19"},"returnParameters":{"id":15633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15632,"mutability":"mutable","name":"blobBaseFee","nameLocation":"28758:11:19","nodeType":"VariableDeclaration","scope":15634,"src":"28750:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15631,"name":"uint256","nodeType":"ElementaryTypeName","src":"28750:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28749:21:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15640,"nodeType":"FunctionDefinition","src":"29086:65:19","nodes":[],"documentation":{"id":15635,"nodeType":"StructuredDocumentation","src":"28777:304:19","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"29095:14:19","parameters":{"id":15636,"nodeType":"ParameterList","parameters":[],"src":"29109:2:19"},"returnParameters":{"id":15639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15638,"mutability":"mutable","name":"height","nameLocation":"29143:6:19","nodeType":"VariableDeclaration","scope":15640,"src":"29135:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15637,"name":"uint256","nodeType":"ElementaryTypeName","src":"29135:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29134:16:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15646,"nodeType":"FunctionDefinition","src":"29475:71:19","nodes":[],"documentation":{"id":15641,"nodeType":"StructuredDocumentation","src":"29157:313:19","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"29484:17:19","parameters":{"id":15642,"nodeType":"ParameterList","parameters":[],"src":"29501:2:19"},"returnParameters":{"id":15645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15644,"mutability":"mutable","name":"timestamp","nameLocation":"29535:9:19","nodeType":"VariableDeclaration","scope":15646,"src":"29527:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15643,"name":"uint256","nodeType":"ElementaryTypeName","src":"29527:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29526:19:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15660,"nodeType":"FunctionDefinition","src":"29639:146:19","nodes":[],"documentation":{"id":15647,"nodeType":"StructuredDocumentation","src":"29552:82:19","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"29648:24:19","parameters":{"id":15652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15649,"mutability":"mutable","name":"target","nameLocation":"29681:6:19","nodeType":"VariableDeclaration","scope":15660,"src":"29673:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15648,"name":"address","nodeType":"ElementaryTypeName","src":"29673:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15651,"mutability":"mutable","name":"elementSlot","nameLocation":"29697:11:19","nodeType":"VariableDeclaration","scope":15660,"src":"29689:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29689:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29672:37:19"},"returnParameters":{"id":15659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15654,"mutability":"mutable","name":"found","nameLocation":"29749:5:19","nodeType":"VariableDeclaration","scope":15660,"src":"29744:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15653,"name":"bool","nodeType":"ElementaryTypeName","src":"29744:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15656,"mutability":"mutable","name":"key","nameLocation":"29764:3:19","nodeType":"VariableDeclaration","scope":15660,"src":"29756:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29756:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15658,"mutability":"mutable","name":"parent","nameLocation":"29777:6:19","nodeType":"VariableDeclaration","scope":15660,"src":"29769:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29769:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29743:41:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15670,"nodeType":"FunctionDefinition","src":"29882:97:19","nodes":[],"documentation":{"id":15661,"nodeType":"StructuredDocumentation","src":"29791:86:19","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"29891:16:19","parameters":{"id":15666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15663,"mutability":"mutable","name":"target","nameLocation":"29916:6:19","nodeType":"VariableDeclaration","scope":15670,"src":"29908:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15662,"name":"address","nodeType":"ElementaryTypeName","src":"29908:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15665,"mutability":"mutable","name":"mappingSlot","nameLocation":"29932:11:19","nodeType":"VariableDeclaration","scope":15670,"src":"29924:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29924:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29907:37:19"},"returnParameters":{"id":15669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15668,"mutability":"mutable","name":"length","nameLocation":"29971:6:19","nodeType":"VariableDeclaration","scope":15670,"src":"29963:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15667,"name":"uint256","nodeType":"ElementaryTypeName","src":"29963:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29962:16:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15682,"nodeType":"FunctionDefinition","src":"30183:109:19","nodes":[],"documentation":{"id":15671,"nodeType":"StructuredDocumentation","src":"29985:193:19","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"30192:16:19","parameters":{"id":15678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15673,"mutability":"mutable","name":"target","nameLocation":"30217:6:19","nodeType":"VariableDeclaration","scope":15682,"src":"30209:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15672,"name":"address","nodeType":"ElementaryTypeName","src":"30209:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15675,"mutability":"mutable","name":"mappingSlot","nameLocation":"30233:11:19","nodeType":"VariableDeclaration","scope":15682,"src":"30225:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30225:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15677,"mutability":"mutable","name":"idx","nameLocation":"30254:3:19","nodeType":"VariableDeclaration","scope":15682,"src":"30246:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15676,"name":"uint256","nodeType":"ElementaryTypeName","src":"30246:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30208:50:19"},"returnParameters":{"id":15681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15680,"mutability":"mutable","name":"value","nameLocation":"30285:5:19","nodeType":"VariableDeclaration","scope":15682,"src":"30277:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30277:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30276:15:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15690,"nodeType":"FunctionDefinition","src":"30336:72:19","nodes":[],"documentation":{"id":15683,"nodeType":"StructuredDocumentation","src":"30298:33:19","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"30345:8:19","parameters":{"id":15686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15685,"mutability":"mutable","name":"account","nameLocation":"30362:7:19","nodeType":"VariableDeclaration","scope":15690,"src":"30354:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15684,"name":"address","nodeType":"ElementaryTypeName","src":"30354:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30353:17:19"},"returnParameters":{"id":15689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15688,"mutability":"mutable","name":"nonce","nameLocation":"30401:5:19","nodeType":"VariableDeclaration","scope":15690,"src":"30394:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15687,"name":"uint64","nodeType":"ElementaryTypeName","src":"30394:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30393:14:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15699,"nodeType":"FunctionDefinition","src":"30451:74:19","nodes":[],"documentation":{"id":15691,"nodeType":"StructuredDocumentation","src":"30414:32:19","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"30460:8:19","parameters":{"id":15695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15694,"mutability":"mutable","name":"wallet","nameLocation":"30485:6:19","nodeType":"VariableDeclaration","scope":15699,"src":"30469:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15693,"nodeType":"UserDefinedTypeName","pathNode":{"id":15692,"name":"Wallet","nameLocations":["30469:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":14891,"src":"30469:6:19"},"referencedDeclaration":14891,"src":"30469:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$14891_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"30468:24:19"},"returnParameters":{"id":15698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15697,"mutability":"mutable","name":"nonce","nameLocation":"30518:5:19","nodeType":"VariableDeclaration","scope":15699,"src":"30511:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15696,"name":"uint64","nodeType":"ElementaryTypeName","src":"30511:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30510:14:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15707,"nodeType":"FunctionDefinition","src":"30689:95:19","nodes":[],"documentation":{"id":15700,"nodeType":"StructuredDocumentation","src":"30531:153:19","text":"Gets the RLP encoded block header for a given block number.\n Returns the block header in the same format as `cast block <block_number> --raw`."},"functionSelector":"2c667606","implemented":false,"kind":"function","modifiers":[],"name":"getRawBlockHeader","nameLocation":"30698:17:19","parameters":{"id":15703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15702,"mutability":"mutable","name":"blockNumber","nameLocation":"30724:11:19","nodeType":"VariableDeclaration","scope":15707,"src":"30716:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15701,"name":"uint256","nodeType":"ElementaryTypeName","src":"30716:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30715:21:19"},"returnParameters":{"id":15706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15705,"mutability":"mutable","name":"rlpHeader","nameLocation":"30773:9:19","nodeType":"VariableDeclaration","scope":15707,"src":"30760:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15704,"name":"bytes","nodeType":"ElementaryTypeName","src":"30760:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30759:24:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15715,"nodeType":"FunctionDefinition","src":"30826:64:19","nodes":[],"documentation":{"id":15708,"nodeType":"StructuredDocumentation","src":"30790:31:19","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"30835:15:19","parameters":{"id":15709,"nodeType":"ParameterList","parameters":[],"src":"30850:2:19"},"returnParameters":{"id":15714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15713,"mutability":"mutable","name":"logs","nameLocation":"30884:4:19","nodeType":"VariableDeclaration","scope":15715,"src":"30871:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$14826_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":15711,"nodeType":"UserDefinedTypeName","pathNode":{"id":15710,"name":"Log","nameLocations":["30871:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":14826,"src":"30871:3:19"},"referencedDeclaration":14826,"src":"30871:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$14826_storage_ptr","typeString":"struct VmSafe.Log"}},"id":15712,"nodeType":"ArrayTypeName","src":"30871:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$14826_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"30870:19:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15721,"nodeType":"FunctionDefinition","src":"30975:67:19","nodes":[],"documentation":{"id":15716,"nodeType":"StructuredDocumentation","src":"30896:74:19","text":"Returns state diffs from current `vm.startStateDiffRecording` session."},"functionSelector":"80df01cc","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiff","nameLocation":"30984:12:19","parameters":{"id":15717,"nodeType":"ParameterList","parameters":[],"src":"30996:2:19"},"returnParameters":{"id":15720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15719,"mutability":"mutable","name":"diff","nameLocation":"31036:4:19","nodeType":"VariableDeclaration","scope":15721,"src":"31022:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15718,"name":"string","nodeType":"ElementaryTypeName","src":"31022:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31021:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15727,"nodeType":"FunctionDefinition","src":"31143:71:19","nodes":[],"documentation":{"id":15722,"nodeType":"StructuredDocumentation","src":"31048:90:19","text":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"functionSelector":"f54fe009","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiffJson","nameLocation":"31152:16:19","parameters":{"id":15723,"nodeType":"ParameterList","parameters":[],"src":"31168:2:19"},"returnParameters":{"id":15726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15725,"mutability":"mutable","name":"diff","nameLocation":"31208:4:19","nodeType":"VariableDeclaration","scope":15727,"src":"31194:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15724,"name":"string","nodeType":"ElementaryTypeName","src":"31194:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31193:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15734,"nodeType":"FunctionDefinition","src":"31292:62:19","nodes":[],"documentation":{"id":15728,"nodeType":"StructuredDocumentation","src":"31220:67:19","text":"Gets the gas used in the last call from the callee perspective."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"31301:11:19","parameters":{"id":15729,"nodeType":"ParameterList","parameters":[],"src":"31312:2:19"},"returnParameters":{"id":15733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15732,"mutability":"mutable","name":"gas","nameLocation":"31349:3:19","nodeType":"VariableDeclaration","scope":15734,"src":"31338:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$14973_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":15731,"nodeType":"UserDefinedTypeName","pathNode":{"id":15730,"name":"Gas","nameLocations":["31338:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":14973,"src":"31338:3:19"},"referencedDeclaration":14973,"src":"31338:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$14973_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"31337:16:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15744,"nodeType":"FunctionDefinition","src":"31406:81:19","nodes":[],"documentation":{"id":15735,"nodeType":"StructuredDocumentation","src":"31360:41:19","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"31415:4:19","parameters":{"id":15740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15737,"mutability":"mutable","name":"target","nameLocation":"31428:6:19","nodeType":"VariableDeclaration","scope":15744,"src":"31420:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15736,"name":"address","nodeType":"ElementaryTypeName","src":"31420:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15739,"mutability":"mutable","name":"slot","nameLocation":"31444:4:19","nodeType":"VariableDeclaration","scope":15744,"src":"31436:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31436:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31419:30:19"},"returnParameters":{"id":15743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15742,"mutability":"mutable","name":"data","nameLocation":"31481:4:19","nodeType":"VariableDeclaration","scope":15744,"src":"31473:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31473:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31472:14:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15748,"nodeType":"FunctionDefinition","src":"31578:37:19","nodes":[],"documentation":{"id":15745,"nodeType":"StructuredDocumentation","src":"31493:80:19","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"31587:16:19","parameters":{"id":15746,"nodeType":"ParameterList","parameters":[],"src":"31603:2:19"},"returnParameters":{"id":15747,"nodeType":"ParameterList","parameters":[],"src":"31614:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15752,"nodeType":"FunctionDefinition","src":"31775:27:19","nodes":[],"documentation":{"id":15749,"nodeType":"StructuredDocumentation","src":"31621:149:19","text":"Records all storage reads and writes. Use `accesses` to get the recorded data.\n Subsequent calls to `record` will clear the previous data."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"31784:6:19","parameters":{"id":15750,"nodeType":"ParameterList","parameters":[],"src":"31790:2:19"},"returnParameters":{"id":15751,"nodeType":"ParameterList","parameters":[],"src":"31801:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15756,"nodeType":"FunctionDefinition","src":"31849:31:19","nodes":[],"documentation":{"id":15753,"nodeType":"StructuredDocumentation","src":"31808:36:19","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"31858:10:19","parameters":{"id":15754,"nodeType":"ParameterList","parameters":[],"src":"31868:2:19"},"returnParameters":{"id":15755,"nodeType":"ParameterList","parameters":[],"src":"31879:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15760,"nodeType":"FunctionDefinition","src":"31951:37:19","nodes":[],"documentation":{"id":15757,"nodeType":"StructuredDocumentation","src":"31886:60:19","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"31960:16:19","parameters":{"id":15758,"nodeType":"ParameterList","parameters":[],"src":"31976:2:19"},"returnParameters":{"id":15759,"nodeType":"ParameterList","parameters":[],"src":"31987:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15764,"nodeType":"FunctionDefinition","src":"32078:38:19","nodes":[],"documentation":{"id":15761,"nodeType":"StructuredDocumentation","src":"31994:79:19","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"32087:17:19","parameters":{"id":15762,"nodeType":"ParameterList","parameters":[],"src":"32104:2:19"},"returnParameters":{"id":15763,"nodeType":"ParameterList","parameters":[],"src":"32115:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15774,"nodeType":"FunctionDefinition","src":"32193:98:19","nodes":[],"documentation":{"id":15765,"nodeType":"StructuredDocumentation","src":"32122:66:19","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"32202:3:19","parameters":{"id":15770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15767,"mutability":"mutable","name":"method","nameLocation":"32222:6:19","nodeType":"VariableDeclaration","scope":15774,"src":"32206:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15766,"name":"string","nodeType":"ElementaryTypeName","src":"32206:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15769,"mutability":"mutable","name":"params","nameLocation":"32246:6:19","nodeType":"VariableDeclaration","scope":15774,"src":"32230:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15768,"name":"string","nodeType":"ElementaryTypeName","src":"32230:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32205:48:19"},"returnParameters":{"id":15773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15772,"mutability":"mutable","name":"data","nameLocation":"32285:4:19","nodeType":"VariableDeclaration","scope":15774,"src":"32272:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15771,"name":"bytes","nodeType":"ElementaryTypeName","src":"32272:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32271:19:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15786,"nodeType":"FunctionDefinition","src":"32366:142:19","nodes":[],"documentation":{"id":15775,"nodeType":"StructuredDocumentation","src":"32297:64:19","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"32375:3:19","parameters":{"id":15782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15777,"mutability":"mutable","name":"urlOrAlias","nameLocation":"32395:10:19","nodeType":"VariableDeclaration","scope":15786,"src":"32379:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15776,"name":"string","nodeType":"ElementaryTypeName","src":"32379:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15779,"mutability":"mutable","name":"method","nameLocation":"32423:6:19","nodeType":"VariableDeclaration","scope":15786,"src":"32407:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15778,"name":"string","nodeType":"ElementaryTypeName","src":"32407:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15781,"mutability":"mutable","name":"params","nameLocation":"32447:6:19","nodeType":"VariableDeclaration","scope":15786,"src":"32431:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15780,"name":"string","nodeType":"ElementaryTypeName","src":"32431:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32378:76:19"},"returnParameters":{"id":15785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15784,"mutability":"mutable","name":"data","nameLocation":"32502:4:19","nodeType":"VariableDeclaration","scope":15786,"src":"32489:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15783,"name":"bytes","nodeType":"ElementaryTypeName","src":"32489:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32488:19:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15790,"nodeType":"FunctionDefinition","src":"32562:45:19","nodes":[],"documentation":{"id":15787,"nodeType":"StructuredDocumentation","src":"32514:43:19","text":"Records the debug trace during the run."},"functionSelector":"419c8832","implemented":false,"kind":"function","modifiers":[],"name":"startDebugTraceRecording","nameLocation":"32571:24:19","parameters":{"id":15788,"nodeType":"ParameterList","parameters":[],"src":"32595:2:19"},"returnParameters":{"id":15789,"nodeType":"ParameterList","parameters":[],"src":"32606:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15794,"nodeType":"FunctionDefinition","src":"32675:42:19","nodes":[],"documentation":{"id":15791,"nodeType":"StructuredDocumentation","src":"32613:57:19","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"32684:21:19","parameters":{"id":15792,"nodeType":"ParameterList","parameters":[],"src":"32705:2:19"},"returnParameters":{"id":15793,"nodeType":"ParameterList","parameters":[],"src":"32716:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15798,"nodeType":"FunctionDefinition","src":"32861:44:19","nodes":[],"documentation":{"id":15795,"nodeType":"StructuredDocumentation","src":"32723:133:19","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"32870:23:19","parameters":{"id":15796,"nodeType":"ParameterList","parameters":[],"src":"32893:2:19"},"returnParameters":{"id":15797,"nodeType":"ParameterList","parameters":[],"src":"32904:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15806,"nodeType":"FunctionDefinition","src":"32984:87:19","nodes":[],"documentation":{"id":15799,"nodeType":"StructuredDocumentation","src":"32911:68:19","text":"Stop debug trace recording and returns the recorded debug trace."},"functionSelector":"ced398a2","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnDebugTraceRecording","nameLocation":"32993:32:19","parameters":{"id":15800,"nodeType":"ParameterList","parameters":[],"src":"33025:2:19"},"returnParameters":{"id":15805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15804,"mutability":"mutable","name":"step","nameLocation":"33065:4:19","nodeType":"VariableDeclaration","scope":15806,"src":"33046:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$14988_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DebugStep[]"},"typeName":{"baseType":{"id":15802,"nodeType":"UserDefinedTypeName","pathNode":{"id":15801,"name":"DebugStep","nameLocations":["33046:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":14988,"src":"33046:9:19"},"referencedDeclaration":14988,"src":"33046:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_DebugStep_$14988_storage_ptr","typeString":"struct VmSafe.DebugStep"}},"id":15803,"nodeType":"ArrayTypeName","src":"33046:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$14988_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DebugStep[]"}},"visibility":"internal"}],"src":"33045:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15814,"nodeType":"FunctionDefinition","src":"33179:92:19","nodes":[],"documentation":{"id":15807,"nodeType":"StructuredDocumentation","src":"33077:97:19","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"33188:22:19","parameters":{"id":15808,"nodeType":"ParameterList","parameters":[],"src":"33210:2:19"},"returnParameters":{"id":15813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15812,"mutability":"mutable","name":"accountAccesses","nameLocation":"33254:15:19","nodeType":"VariableDeclaration","scope":15814,"src":"33231:38:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$14947_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":15810,"nodeType":"UserDefinedTypeName","pathNode":{"id":15809,"name":"AccountAccess","nameLocations":["33231:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":14947,"src":"33231:13:19"},"referencedDeclaration":14947,"src":"33231:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$14947_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":15811,"nodeType":"ArrayTypeName","src":"33231:15:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$14947_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"33230:40:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15818,"nodeType":"FunctionDefinition","src":"33367:41:19","nodes":[],"documentation":{"id":15815,"nodeType":"StructuredDocumentation","src":"33277:85:19","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"33376:20:19","parameters":{"id":15816,"nodeType":"ParameterList","parameters":[],"src":"33396:2:19"},"returnParameters":{"id":15817,"nodeType":"ParameterList","parameters":[],"src":"33407:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15822,"nodeType":"FunctionDefinition","src":"33464:31:19","nodes":[],"documentation":{"id":15819,"nodeType":"StructuredDocumentation","src":"33414:45:19","text":"Stops recording storage reads and writes."},"functionSelector":"996be76d","implemented":false,"kind":"function","modifiers":[],"name":"stopRecord","nameLocation":"33473:10:19","parameters":{"id":15820,"nodeType":"ParameterList","parameters":[],"src":"33483:2:19"},"returnParameters":{"id":15821,"nodeType":"ParameterList","parameters":[],"src":"33494:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15828,"nodeType":"FunctionDefinition","src":"33694:50:19","nodes":[],"documentation":{"id":15823,"nodeType":"StructuredDocumentation","src":"33538:151:19","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"33703:9:19","parameters":{"id":15826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15825,"mutability":"mutable","name":"path","nameLocation":"33729:4:19","nodeType":"VariableDeclaration","scope":15828,"src":"33713:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15824,"name":"string","nodeType":"ElementaryTypeName","src":"33713:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33712:22:19"},"returnParameters":{"id":15827,"nodeType":"ParameterList","parameters":[],"src":"33743:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15838,"nodeType":"FunctionDefinition","src":"34059:93:19","nodes":[],"documentation":{"id":15829,"nodeType":"StructuredDocumentation","src":"33750:304:19","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"34068:8:19","parameters":{"id":15834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15831,"mutability":"mutable","name":"from","nameLocation":"34093:4:19","nodeType":"VariableDeclaration","scope":15838,"src":"34077:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15830,"name":"string","nodeType":"ElementaryTypeName","src":"34077:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15833,"mutability":"mutable","name":"to","nameLocation":"34115:2:19","nodeType":"VariableDeclaration","scope":15838,"src":"34099:18:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15832,"name":"string","nodeType":"ElementaryTypeName","src":"34099:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34076:42:19"},"returnParameters":{"id":15837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15836,"mutability":"mutable","name":"copied","nameLocation":"34144:6:19","nodeType":"VariableDeclaration","scope":15838,"src":"34137:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15835,"name":"uint64","nodeType":"ElementaryTypeName","src":"34137:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"34136:15:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15846,"nodeType":"FunctionDefinition","src":"34557:66:19","nodes":[],"documentation":{"id":15839,"nodeType":"StructuredDocumentation","src":"34158:394:19","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"34566:9:19","parameters":{"id":15844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15841,"mutability":"mutable","name":"path","nameLocation":"34592:4:19","nodeType":"VariableDeclaration","scope":15846,"src":"34576:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15840,"name":"string","nodeType":"ElementaryTypeName","src":"34576:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15843,"mutability":"mutable","name":"recursive","nameLocation":"34603:9:19","nodeType":"VariableDeclaration","scope":15846,"src":"34598:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15842,"name":"bool","nodeType":"ElementaryTypeName","src":"34598:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34575:38:19"},"returnParameters":{"id":15845,"nodeType":"ParameterList","parameters":[],"src":"34622:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15854,"nodeType":"FunctionDefinition","src":"34853:93:19","nodes":[],"documentation":{"id":15847,"nodeType":"StructuredDocumentation","src":"34629:219:19","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"34862:10:19","parameters":{"id":15850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15849,"mutability":"mutable","name":"artifactPath","nameLocation":"34889:12:19","nodeType":"VariableDeclaration","scope":15854,"src":"34873:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15848,"name":"string","nodeType":"ElementaryTypeName","src":"34873:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34872:30:19"},"returnParameters":{"id":15853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15852,"mutability":"mutable","name":"deployedAddress","nameLocation":"34929:15:19","nodeType":"VariableDeclaration","scope":15854,"src":"34921:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15851,"name":"address","nodeType":"ElementaryTypeName","src":"34921:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34920:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15864,"nodeType":"FunctionDefinition","src":"35240:141:19","nodes":[],"documentation":{"id":15855,"nodeType":"StructuredDocumentation","src":"34952:283:19","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"35249:10:19","parameters":{"id":15860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15857,"mutability":"mutable","name":"artifactPath","nameLocation":"35276:12:19","nodeType":"VariableDeclaration","scope":15864,"src":"35260:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15856,"name":"string","nodeType":"ElementaryTypeName","src":"35260:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15859,"mutability":"mutable","name":"constructorArgs","nameLocation":"35305:15:19","nodeType":"VariableDeclaration","scope":15864,"src":"35290:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15858,"name":"bytes","nodeType":"ElementaryTypeName","src":"35290:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35259:62:19"},"returnParameters":{"id":15863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15862,"mutability":"mutable","name":"deployedAddress","nameLocation":"35364:15:19","nodeType":"VariableDeclaration","scope":15864,"src":"35356:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15861,"name":"address","nodeType":"ElementaryTypeName","src":"35356:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35355:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15874,"nodeType":"FunctionDefinition","src":"35653:108:19","nodes":[],"documentation":{"id":15865,"nodeType":"StructuredDocumentation","src":"35387:261:19","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts `msg.value`."},"functionSelector":"0af6a701","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"35662:10:19","parameters":{"id":15870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15867,"mutability":"mutable","name":"artifactPath","nameLocation":"35689:12:19","nodeType":"VariableDeclaration","scope":15874,"src":"35673:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15866,"name":"string","nodeType":"ElementaryTypeName","src":"35673:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15869,"mutability":"mutable","name":"value","nameLocation":"35711:5:19","nodeType":"VariableDeclaration","scope":15874,"src":"35703:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15868,"name":"uint256","nodeType":"ElementaryTypeName","src":"35703:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35672:45:19"},"returnParameters":{"id":15873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15872,"mutability":"mutable","name":"deployedAddress","nameLocation":"35744:15:19","nodeType":"VariableDeclaration","scope":15874,"src":"35736:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15871,"name":"address","nodeType":"ElementaryTypeName","src":"35736:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35735:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15886,"nodeType":"FunctionDefinition","src":"36071:156:19","nodes":[],"documentation":{"id":15875,"nodeType":"StructuredDocumentation","src":"35767:299:19","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments and `msg.value`."},"functionSelector":"ff5d64e4","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"36080:10:19","parameters":{"id":15882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15877,"mutability":"mutable","name":"artifactPath","nameLocation":"36107:12:19","nodeType":"VariableDeclaration","scope":15886,"src":"36091:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15876,"name":"string","nodeType":"ElementaryTypeName","src":"36091:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15879,"mutability":"mutable","name":"constructorArgs","nameLocation":"36136:15:19","nodeType":"VariableDeclaration","scope":15886,"src":"36121:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15878,"name":"bytes","nodeType":"ElementaryTypeName","src":"36121:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15881,"mutability":"mutable","name":"value","nameLocation":"36161:5:19","nodeType":"VariableDeclaration","scope":15886,"src":"36153:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15880,"name":"uint256","nodeType":"ElementaryTypeName","src":"36153:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36090:77:19"},"returnParameters":{"id":15885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15884,"mutability":"mutable","name":"deployedAddress","nameLocation":"36210:15:19","nodeType":"VariableDeclaration","scope":15886,"src":"36202:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15883,"name":"address","nodeType":"ElementaryTypeName","src":"36202:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36201:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15896,"nodeType":"FunctionDefinition","src":"36481:107:19","nodes":[],"documentation":{"id":15887,"nodeType":"StructuredDocumentation","src":"36233:243:19","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"17ab1d79","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"36490:10:19","parameters":{"id":15892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15889,"mutability":"mutable","name":"artifactPath","nameLocation":"36517:12:19","nodeType":"VariableDeclaration","scope":15896,"src":"36501:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15888,"name":"string","nodeType":"ElementaryTypeName","src":"36501:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15891,"mutability":"mutable","name":"salt","nameLocation":"36539:4:19","nodeType":"VariableDeclaration","scope":15896,"src":"36531:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36531:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36500:44:19"},"returnParameters":{"id":15895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15894,"mutability":"mutable","name":"deployedAddress","nameLocation":"36571:15:19","nodeType":"VariableDeclaration","scope":15896,"src":"36563:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15893,"name":"address","nodeType":"ElementaryTypeName","src":"36563:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36562:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15908,"nodeType":"FunctionDefinition","src":"36906:155:19","nodes":[],"documentation":{"id":15897,"nodeType":"StructuredDocumentation","src":"36594:307:19","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"016155bf","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"36915:10:19","parameters":{"id":15904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15899,"mutability":"mutable","name":"artifactPath","nameLocation":"36942:12:19","nodeType":"VariableDeclaration","scope":15908,"src":"36926:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15898,"name":"string","nodeType":"ElementaryTypeName","src":"36926:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15901,"mutability":"mutable","name":"constructorArgs","nameLocation":"36971:15:19","nodeType":"VariableDeclaration","scope":15908,"src":"36956:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15900,"name":"bytes","nodeType":"ElementaryTypeName","src":"36956:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15903,"mutability":"mutable","name":"salt","nameLocation":"36996:4:19","nodeType":"VariableDeclaration","scope":15908,"src":"36988:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36988:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36925:76:19"},"returnParameters":{"id":15907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15906,"mutability":"mutable","name":"deployedAddress","nameLocation":"37044:15:19","nodeType":"VariableDeclaration","scope":15908,"src":"37036:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15905,"name":"address","nodeType":"ElementaryTypeName","src":"37036:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37035:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15920,"nodeType":"FunctionDefinition","src":"37357:138:19","nodes":[],"documentation":{"id":15909,"nodeType":"StructuredDocumentation","src":"37067:285:19","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts `msg.value`."},"functionSelector":"002cb687","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"37366:10:19","parameters":{"id":15916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15911,"mutability":"mutable","name":"artifactPath","nameLocation":"37393:12:19","nodeType":"VariableDeclaration","scope":15920,"src":"37377:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15910,"name":"string","nodeType":"ElementaryTypeName","src":"37377:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15913,"mutability":"mutable","name":"value","nameLocation":"37415:5:19","nodeType":"VariableDeclaration","scope":15920,"src":"37407:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15912,"name":"uint256","nodeType":"ElementaryTypeName","src":"37407:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15915,"mutability":"mutable","name":"salt","nameLocation":"37430:4:19","nodeType":"VariableDeclaration","scope":15920,"src":"37422:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37422:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"37376:59:19"},"returnParameters":{"id":15919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15918,"mutability":"mutable","name":"deployedAddress","nameLocation":"37478:15:19","nodeType":"VariableDeclaration","scope":15920,"src":"37470:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15917,"name":"address","nodeType":"ElementaryTypeName","src":"37470:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37469:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15934,"nodeType":"FunctionDefinition","src":"37829:170:19","nodes":[],"documentation":{"id":15921,"nodeType":"StructuredDocumentation","src":"37501:323:19","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments and `msg.value`."},"functionSelector":"3aa773ea","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"37838:10:19","parameters":{"id":15930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15923,"mutability":"mutable","name":"artifactPath","nameLocation":"37865:12:19","nodeType":"VariableDeclaration","scope":15934,"src":"37849:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15922,"name":"string","nodeType":"ElementaryTypeName","src":"37849:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15925,"mutability":"mutable","name":"constructorArgs","nameLocation":"37894:15:19","nodeType":"VariableDeclaration","scope":15934,"src":"37879:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15924,"name":"bytes","nodeType":"ElementaryTypeName","src":"37879:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15927,"mutability":"mutable","name":"value","nameLocation":"37919:5:19","nodeType":"VariableDeclaration","scope":15934,"src":"37911:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15926,"name":"uint256","nodeType":"ElementaryTypeName","src":"37911:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15929,"mutability":"mutable","name":"salt","nameLocation":"37934:4:19","nodeType":"VariableDeclaration","scope":15934,"src":"37926:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37926:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"37848:91:19"},"returnParameters":{"id":15933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15932,"mutability":"mutable","name":"deployedAddress","nameLocation":"37982:15:19","nodeType":"VariableDeclaration","scope":15934,"src":"37974:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15931,"name":"address","nodeType":"ElementaryTypeName","src":"37974:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37973:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15942,"nodeType":"FunctionDefinition","src":"38094:74:19","nodes":[],"documentation":{"id":15935,"nodeType":"StructuredDocumentation","src":"38005:84:19","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"38103:6:19","parameters":{"id":15938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15937,"mutability":"mutable","name":"path","nameLocation":"38126:4:19","nodeType":"VariableDeclaration","scope":15942,"src":"38110:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15936,"name":"string","nodeType":"ElementaryTypeName","src":"38110:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38109:22:19"},"returnParameters":{"id":15941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15940,"mutability":"mutable","name":"result","nameLocation":"38160:6:19","nodeType":"VariableDeclaration","scope":15942,"src":"38155:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15939,"name":"bool","nodeType":"ElementaryTypeName","src":"38155:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38154:13:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15951,"nodeType":"FunctionDefinition","src":"38233:84:19","nodes":[],"documentation":{"id":15943,"nodeType":"StructuredDocumentation","src":"38174:54:19","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"38242:3:19","parameters":{"id":15947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15946,"mutability":"mutable","name":"commandInput","nameLocation":"38264:12:19","nodeType":"VariableDeclaration","scope":15951,"src":"38246:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15944,"name":"string","nodeType":"ElementaryTypeName","src":"38246:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15945,"nodeType":"ArrayTypeName","src":"38246:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38245:32:19"},"returnParameters":{"id":15950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15949,"mutability":"mutable","name":"result","nameLocation":"38309:6:19","nodeType":"VariableDeclaration","scope":15951,"src":"38296:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15948,"name":"bytes","nodeType":"ElementaryTypeName","src":"38296:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38295:21:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15960,"nodeType":"FunctionDefinition","src":"38416:93:19","nodes":[],"documentation":{"id":15952,"nodeType":"StructuredDocumentation","src":"38323:88:19","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"38425:10:19","parameters":{"id":15955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15954,"mutability":"mutable","name":"path","nameLocation":"38452:4:19","nodeType":"VariableDeclaration","scope":15960,"src":"38436:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15953,"name":"string","nodeType":"ElementaryTypeName","src":"38436:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38435:22:19"},"returnParameters":{"id":15959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15958,"mutability":"mutable","name":"metadata","nameLocation":"38499:8:19","nodeType":"VariableDeclaration","scope":15960,"src":"38481:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$14881_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":15957,"nodeType":"UserDefinedTypeName","pathNode":{"id":15956,"name":"FsMetadata","nameLocations":["38481:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":14881,"src":"38481:10:19"},"referencedDeclaration":14881,"src":"38481:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$14881_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"38480:28:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15968,"nodeType":"FunctionDefinition","src":"38578:95:19","nodes":[],"documentation":{"id":15961,"nodeType":"StructuredDocumentation","src":"38515:58:19","text":"Gets the artifact path from code (aka. creation code)."},"functionSelector":"eb74848c","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByCode","nameLocation":"38587:21:19","parameters":{"id":15964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15963,"mutability":"mutable","name":"code","nameLocation":"38624:4:19","nodeType":"VariableDeclaration","scope":15968,"src":"38609:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15962,"name":"bytes","nodeType":"ElementaryTypeName","src":"38609:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38608:21:19"},"returnParameters":{"id":15967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15966,"mutability":"mutable","name":"path","nameLocation":"38667:4:19","nodeType":"VariableDeclaration","scope":15968,"src":"38653:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15965,"name":"string","nodeType":"ElementaryTypeName","src":"38653:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38652:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15976,"nodeType":"FunctionDefinition","src":"38750:111:19","nodes":[],"documentation":{"id":15969,"nodeType":"StructuredDocumentation","src":"38679:66:19","text":"Gets the artifact path from deployed code (aka. runtime code)."},"functionSelector":"6d853ba5","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByDeployedCode","nameLocation":"38759:29:19","parameters":{"id":15972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15971,"mutability":"mutable","name":"deployedCode","nameLocation":"38804:12:19","nodeType":"VariableDeclaration","scope":15976,"src":"38789:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15970,"name":"bytes","nodeType":"ElementaryTypeName","src":"38789:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38788:29:19"},"returnParameters":{"id":15975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15974,"mutability":"mutable","name":"path","nameLocation":"38855:4:19","nodeType":"VariableDeclaration","scope":15976,"src":"38841:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15973,"name":"string","nodeType":"ElementaryTypeName","src":"38841:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38840:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15990,"nodeType":"FunctionDefinition","src":"39156:166:19","nodes":[],"documentation":{"id":15977,"nodeType":"StructuredDocumentation","src":"38867:284:19","text":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`.\n For example:\n The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`.\n The most recent call can be fetched by passing `txType` as `CALL`."},"functionSelector":"3dc90cb3","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcast","nameLocation":"39165:12:19","parameters":{"id":15985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15979,"mutability":"mutable","name":"contractName","nameLocation":"39194:12:19","nodeType":"VariableDeclaration","scope":15990,"src":"39178:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15978,"name":"string","nodeType":"ElementaryTypeName","src":"39178:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15981,"mutability":"mutable","name":"chainId","nameLocation":"39215:7:19","nodeType":"VariableDeclaration","scope":15990,"src":"39208:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15980,"name":"uint64","nodeType":"ElementaryTypeName","src":"39208:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15984,"mutability":"mutable","name":"txType","nameLocation":"39240:6:19","nodeType":"VariableDeclaration","scope":15990,"src":"39224:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$14817","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":15983,"nodeType":"UserDefinedTypeName","pathNode":{"id":15982,"name":"BroadcastTxType","nameLocations":["39224:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":14817,"src":"39224:15:19"},"referencedDeclaration":14817,"src":"39224:15:19","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$14817","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"39177:70:19"},"returnParameters":{"id":15989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15990,"src":"39295:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$15001_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary"},"typeName":{"id":15987,"nodeType":"UserDefinedTypeName","pathNode":{"id":15986,"name":"BroadcastTxSummary","nameLocations":["39295:18:19"],"nodeType":"IdentifierPath","referencedDeclaration":15001,"src":"39295:18:19"},"referencedDeclaration":15001,"src":"39295:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$15001_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"visibility":"internal"}],"src":"39294:27:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16005,"nodeType":"FunctionDefinition","src":"39581:169:19","nodes":[],"documentation":{"id":15991,"nodeType":"StructuredDocumentation","src":"39328:248:19","text":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f7afe919","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"39590:13:19","parameters":{"id":15999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15993,"mutability":"mutable","name":"contractName","nameLocation":"39620:12:19","nodeType":"VariableDeclaration","scope":16005,"src":"39604:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15992,"name":"string","nodeType":"ElementaryTypeName","src":"39604:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15995,"mutability":"mutable","name":"chainId","nameLocation":"39641:7:19","nodeType":"VariableDeclaration","scope":16005,"src":"39634:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15994,"name":"uint64","nodeType":"ElementaryTypeName","src":"39634:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15998,"mutability":"mutable","name":"txType","nameLocation":"39666:6:19","nodeType":"VariableDeclaration","scope":16005,"src":"39650:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$14817","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":15997,"nodeType":"UserDefinedTypeName","pathNode":{"id":15996,"name":"BroadcastTxType","nameLocations":["39650:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":14817,"src":"39650:15:19"},"referencedDeclaration":14817,"src":"39650:15:19","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$14817","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"39603:70:19"},"returnParameters":{"id":16004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16005,"src":"39721:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$15001_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":16001,"nodeType":"UserDefinedTypeName","pathNode":{"id":16000,"name":"BroadcastTxSummary","nameLocations":["39721:18:19"],"nodeType":"IdentifierPath","referencedDeclaration":15001,"src":"39721:18:19"},"referencedDeclaration":15001,"src":"39721:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$15001_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":16002,"nodeType":"ArrayTypeName","src":"39721:20:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$15001_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"39720:29:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16017,"nodeType":"FunctionDefinition","src":"39981:145:19","nodes":[],"documentation":{"id":16006,"nodeType":"StructuredDocumentation","src":"39756:220:19","text":"Returns all broadcasts for the given contract on `chainId`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f2fa4a26","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"39990:13:19","parameters":{"id":16011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16008,"mutability":"mutable","name":"contractName","nameLocation":"40020:12:19","nodeType":"VariableDeclaration","scope":16017,"src":"40004:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16007,"name":"string","nodeType":"ElementaryTypeName","src":"40004:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16010,"mutability":"mutable","name":"chainId","nameLocation":"40041:7:19","nodeType":"VariableDeclaration","scope":16017,"src":"40034:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16009,"name":"uint64","nodeType":"ElementaryTypeName","src":"40034:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"40003:46:19"},"returnParameters":{"id":16016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16017,"src":"40097:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$15001_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":16013,"nodeType":"UserDefinedTypeName","pathNode":{"id":16012,"name":"BroadcastTxSummary","nameLocations":["40097:18:19"],"nodeType":"IdentifierPath","referencedDeclaration":15001,"src":"40097:18:19"},"referencedDeclaration":15001,"src":"40097:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$15001_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":16014,"nodeType":"ArrayTypeName","src":"40097:20:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$15001_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"40096:29:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16025,"nodeType":"FunctionDefinition","src":"40364:101:19","nodes":[],"documentation":{"id":16018,"nodeType":"StructuredDocumentation","src":"40132:227:19","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"40373:7:19","parameters":{"id":16021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16020,"mutability":"mutable","name":"artifactPath","nameLocation":"40397:12:19","nodeType":"VariableDeclaration","scope":16025,"src":"40381:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16019,"name":"string","nodeType":"ElementaryTypeName","src":"40381:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40380:30:19"},"returnParameters":{"id":16024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16023,"mutability":"mutable","name":"creationBytecode","nameLocation":"40447:16:19","nodeType":"VariableDeclaration","scope":16025,"src":"40434:29:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16022,"name":"bytes","nodeType":"ElementaryTypeName","src":"40434:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40433:31:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16033,"nodeType":"FunctionDefinition","src":"40703:108:19","nodes":[],"documentation":{"id":16026,"nodeType":"StructuredDocumentation","src":"40471:227:19","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"40712:15:19","parameters":{"id":16029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16028,"mutability":"mutable","name":"artifactPath","nameLocation":"40744:12:19","nodeType":"VariableDeclaration","scope":16033,"src":"40728:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16027,"name":"string","nodeType":"ElementaryTypeName","src":"40728:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40727:30:19"},"returnParameters":{"id":16032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16031,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"40794:15:19","nodeType":"VariableDeclaration","scope":16033,"src":"40781:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16030,"name":"bytes","nodeType":"ElementaryTypeName","src":"40781:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40780:30:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16041,"nodeType":"FunctionDefinition","src":"40887:101:19","nodes":[],"documentation":{"id":16034,"nodeType":"StructuredDocumentation","src":"40817:65:19","text":"Returns the most recent deployment for the current `chainId`."},"functionSelector":"a8091d97","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"40896:13:19","parameters":{"id":16037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16036,"mutability":"mutable","name":"contractName","nameLocation":"40926:12:19","nodeType":"VariableDeclaration","scope":16041,"src":"40910:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16035,"name":"string","nodeType":"ElementaryTypeName","src":"40910:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40909:30:19"},"returnParameters":{"id":16040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16039,"mutability":"mutable","name":"deployedAddress","nameLocation":"40971:15:19","nodeType":"VariableDeclaration","scope":16041,"src":"40963:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16038,"name":"address","nodeType":"ElementaryTypeName","src":"40963:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40962:25:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16051,"nodeType":"FunctionDefinition","src":"41073:141:19","nodes":[],"documentation":{"id":16042,"nodeType":"StructuredDocumentation","src":"40994:74:19","text":"Returns the most recent deployment for the given contract on `chainId`"},"functionSelector":"0debd5d6","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"41082:13:19","parameters":{"id":16047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16044,"mutability":"mutable","name":"contractName","nameLocation":"41112:12:19","nodeType":"VariableDeclaration","scope":16051,"src":"41096:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16043,"name":"string","nodeType":"ElementaryTypeName","src":"41096:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16046,"mutability":"mutable","name":"chainId","nameLocation":"41133:7:19","nodeType":"VariableDeclaration","scope":16051,"src":"41126:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16045,"name":"uint64","nodeType":"ElementaryTypeName","src":"41126:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"41095:46:19"},"returnParameters":{"id":16050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16049,"mutability":"mutable","name":"deployedAddress","nameLocation":"41197:15:19","nodeType":"VariableDeclaration","scope":16051,"src":"41189:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16048,"name":"address","nodeType":"ElementaryTypeName","src":"41189:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41188:25:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16062,"nodeType":"FunctionDefinition","src":"41483:153:19","nodes":[],"documentation":{"id":16052,"nodeType":"StructuredDocumentation","src":"41220:258:19","text":"Returns all deployments for the given contract on `chainId`\n Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber.\n The most recent deployment is the first element, and the oldest is the last."},"functionSelector":"74e133dd","implemented":false,"kind":"function","modifiers":[],"name":"getDeployments","nameLocation":"41492:14:19","parameters":{"id":16057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16054,"mutability":"mutable","name":"contractName","nameLocation":"41523:12:19","nodeType":"VariableDeclaration","scope":16062,"src":"41507:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16053,"name":"string","nodeType":"ElementaryTypeName","src":"41507:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16056,"mutability":"mutable","name":"chainId","nameLocation":"41544:7:19","nodeType":"VariableDeclaration","scope":16062,"src":"41537:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16055,"name":"uint64","nodeType":"ElementaryTypeName","src":"41537:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"41506:46:19"},"returnParameters":{"id":16061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16060,"mutability":"mutable","name":"deployedAddresses","nameLocation":"41617:17:19","nodeType":"VariableDeclaration","scope":16062,"src":"41600:34:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16058,"name":"address","nodeType":"ElementaryTypeName","src":"41600:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16059,"nodeType":"ArrayTypeName","src":"41600:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"41599:36:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16070,"nodeType":"FunctionDefinition","src":"41742:73:19","nodes":[],"documentation":{"id":16063,"nodeType":"StructuredDocumentation","src":"41642:95:19","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"41751:5:19","parameters":{"id":16066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16065,"mutability":"mutable","name":"path","nameLocation":"41773:4:19","nodeType":"VariableDeclaration","scope":16070,"src":"41757:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16064,"name":"string","nodeType":"ElementaryTypeName","src":"41757:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41756:22:19"},"returnParameters":{"id":16069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16068,"mutability":"mutable","name":"result","nameLocation":"41807:6:19","nodeType":"VariableDeclaration","scope":16070,"src":"41802:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16067,"name":"bool","nodeType":"ElementaryTypeName","src":"41802:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41801:13:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16078,"nodeType":"FunctionDefinition","src":"41924:74:19","nodes":[],"documentation":{"id":16071,"nodeType":"StructuredDocumentation","src":"41821:98:19","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"41933:6:19","parameters":{"id":16074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16073,"mutability":"mutable","name":"path","nameLocation":"41956:4:19","nodeType":"VariableDeclaration","scope":16078,"src":"41940:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16072,"name":"string","nodeType":"ElementaryTypeName","src":"41940:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41939:22:19"},"returnParameters":{"id":16077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16076,"mutability":"mutable","name":"result","nameLocation":"41990:6:19","nodeType":"VariableDeclaration","scope":16078,"src":"41985:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16075,"name":"bool","nodeType":"ElementaryTypeName","src":"41985:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41984:13:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16084,"nodeType":"FunctionDefinition","src":"42054:66:19","nodes":[],"documentation":{"id":16079,"nodeType":"StructuredDocumentation","src":"42004:45:19","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"42063:11:19","parameters":{"id":16080,"nodeType":"ParameterList","parameters":[],"src":"42074:2:19"},"returnParameters":{"id":16083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16082,"mutability":"mutable","name":"path","nameLocation":"42114:4:19","nodeType":"VariableDeclaration","scope":16084,"src":"42100:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16081,"name":"string","nodeType":"ElementaryTypeName","src":"42100:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42099:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16092,"nodeType":"FunctionDefinition","src":"42187:83:19","nodes":[],"documentation":{"id":16085,"nodeType":"StructuredDocumentation","src":"42126:56:19","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"42196:6:19","parameters":{"id":16088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16087,"mutability":"mutable","name":"promptText","nameLocation":"42219:10:19","nodeType":"VariableDeclaration","scope":16092,"src":"42203:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16086,"name":"string","nodeType":"ElementaryTypeName","src":"42203:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42202:28:19"},"returnParameters":{"id":16091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16090,"mutability":"mutable","name":"input","nameLocation":"42263:5:19","nodeType":"VariableDeclaration","scope":16092,"src":"42249:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16089,"name":"string","nodeType":"ElementaryTypeName","src":"42249:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42248:21:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16100,"nodeType":"FunctionDefinition","src":"42333:78:19","nodes":[],"documentation":{"id":16093,"nodeType":"StructuredDocumentation","src":"42276:52:19","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"42342:13:19","parameters":{"id":16096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16095,"mutability":"mutable","name":"promptText","nameLocation":"42372:10:19","nodeType":"VariableDeclaration","scope":16100,"src":"42356:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16094,"name":"string","nodeType":"ElementaryTypeName","src":"42356:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42355:28:19"},"returnParameters":{"id":16099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16100,"src":"42402:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16097,"name":"address","nodeType":"ElementaryTypeName","src":"42402:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"42401:9:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16108,"nodeType":"FunctionDefinition","src":"42485:89:19","nodes":[],"documentation":{"id":16101,"nodeType":"StructuredDocumentation","src":"42417:63:19","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"42494:12:19","parameters":{"id":16104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16103,"mutability":"mutable","name":"promptText","nameLocation":"42523:10:19","nodeType":"VariableDeclaration","scope":16108,"src":"42507:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16102,"name":"string","nodeType":"ElementaryTypeName","src":"42507:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42506:28:19"},"returnParameters":{"id":16107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16106,"mutability":"mutable","name":"input","nameLocation":"42567:5:19","nodeType":"VariableDeclaration","scope":16108,"src":"42553:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16105,"name":"string","nodeType":"ElementaryTypeName","src":"42553:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42552:21:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16116,"nodeType":"FunctionDefinition","src":"42654:81:19","nodes":[],"documentation":{"id":16109,"nodeType":"StructuredDocumentation","src":"42580:69:19","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"42663:16:19","parameters":{"id":16112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16111,"mutability":"mutable","name":"promptText","nameLocation":"42696:10:19","nodeType":"VariableDeclaration","scope":16116,"src":"42680:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16110,"name":"string","nodeType":"ElementaryTypeName","src":"42680:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42679:28:19"},"returnParameters":{"id":16115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16116,"src":"42726:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16113,"name":"uint256","nodeType":"ElementaryTypeName","src":"42726:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42725:9:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16124,"nodeType":"FunctionDefinition","src":"42795:75:19","nodes":[],"documentation":{"id":16117,"nodeType":"StructuredDocumentation","src":"42741:49:19","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"42804:10:19","parameters":{"id":16120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16119,"mutability":"mutable","name":"promptText","nameLocation":"42831:10:19","nodeType":"VariableDeclaration","scope":16124,"src":"42815:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16118,"name":"string","nodeType":"ElementaryTypeName","src":"42815:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42814:28:19"},"returnParameters":{"id":16123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16124,"src":"42861:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16121,"name":"uint256","nodeType":"ElementaryTypeName","src":"42861:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42860:9:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16134,"nodeType":"FunctionDefinition","src":"43118:89:19","nodes":[],"documentation":{"id":16125,"nodeType":"StructuredDocumentation","src":"42876:237:19","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"43127:7:19","parameters":{"id":16128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16127,"mutability":"mutable","name":"path","nameLocation":"43151:4:19","nodeType":"VariableDeclaration","scope":16134,"src":"43135:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16126,"name":"string","nodeType":"ElementaryTypeName","src":"43135:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43134:22:19"},"returnParameters":{"id":16133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16132,"mutability":"mutable","name":"entries","nameLocation":"43198:7:19","nodeType":"VariableDeclaration","scope":16134,"src":"43180:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$14865_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16130,"nodeType":"UserDefinedTypeName","pathNode":{"id":16129,"name":"DirEntry","nameLocations":["43180:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":14865,"src":"43180:8:19"},"referencedDeclaration":14865,"src":"43180:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$14865_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16131,"nodeType":"ArrayTypeName","src":"43180:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$14865_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"43179:27:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16146,"nodeType":"FunctionDefinition","src":"43244:106:19","nodes":[],"documentation":{"id":16135,"nodeType":"StructuredDocumentation","src":"43213:26:19","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"43253:7:19","parameters":{"id":16140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16137,"mutability":"mutable","name":"path","nameLocation":"43277:4:19","nodeType":"VariableDeclaration","scope":16146,"src":"43261:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16136,"name":"string","nodeType":"ElementaryTypeName","src":"43261:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16139,"mutability":"mutable","name":"maxDepth","nameLocation":"43290:8:19","nodeType":"VariableDeclaration","scope":16146,"src":"43283:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16138,"name":"uint64","nodeType":"ElementaryTypeName","src":"43283:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"43260:39:19"},"returnParameters":{"id":16145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16144,"mutability":"mutable","name":"entries","nameLocation":"43341:7:19","nodeType":"VariableDeclaration","scope":16146,"src":"43323:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$14865_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16142,"nodeType":"UserDefinedTypeName","pathNode":{"id":16141,"name":"DirEntry","nameLocations":["43323:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":14865,"src":"43323:8:19"},"referencedDeclaration":14865,"src":"43323:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$14865_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16143,"nodeType":"ArrayTypeName","src":"43323:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$14865_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"43322:27:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16160,"nodeType":"FunctionDefinition","src":"43387:148:19","nodes":[],"documentation":{"id":16147,"nodeType":"StructuredDocumentation","src":"43356:26:19","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"43396:7:19","parameters":{"id":16154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16149,"mutability":"mutable","name":"path","nameLocation":"43420:4:19","nodeType":"VariableDeclaration","scope":16160,"src":"43404:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16148,"name":"string","nodeType":"ElementaryTypeName","src":"43404:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16151,"mutability":"mutable","name":"maxDepth","nameLocation":"43433:8:19","nodeType":"VariableDeclaration","scope":16160,"src":"43426:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16150,"name":"uint64","nodeType":"ElementaryTypeName","src":"43426:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16153,"mutability":"mutable","name":"followLinks","nameLocation":"43448:11:19","nodeType":"VariableDeclaration","scope":16160,"src":"43443:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16152,"name":"bool","nodeType":"ElementaryTypeName","src":"43443:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43403:57:19"},"returnParameters":{"id":16159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16158,"mutability":"mutable","name":"entries","nameLocation":"43526:7:19","nodeType":"VariableDeclaration","scope":16160,"src":"43508:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$14865_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16156,"nodeType":"UserDefinedTypeName","pathNode":{"id":16155,"name":"DirEntry","nameLocations":["43508:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":14865,"src":"43508:8:19"},"referencedDeclaration":14865,"src":"43508:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$14865_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16157,"nodeType":"ArrayTypeName","src":"43508:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$14865_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"43507:27:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16168,"nodeType":"FunctionDefinition","src":"43633:83:19","nodes":[],"documentation":{"id":16161,"nodeType":"StructuredDocumentation","src":"43541:87:19","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"43642:8:19","parameters":{"id":16164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16163,"mutability":"mutable","name":"path","nameLocation":"43667:4:19","nodeType":"VariableDeclaration","scope":16168,"src":"43651:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16162,"name":"string","nodeType":"ElementaryTypeName","src":"43651:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43650:22:19"},"returnParameters":{"id":16167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16166,"mutability":"mutable","name":"data","nameLocation":"43710:4:19","nodeType":"VariableDeclaration","scope":16168,"src":"43696:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16165,"name":"string","nodeType":"ElementaryTypeName","src":"43696:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43695:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16176,"nodeType":"FunctionDefinition","src":"43814:88:19","nodes":[],"documentation":{"id":16169,"nodeType":"StructuredDocumentation","src":"43722:87:19","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"43823:14:19","parameters":{"id":16172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16171,"mutability":"mutable","name":"path","nameLocation":"43854:4:19","nodeType":"VariableDeclaration","scope":16176,"src":"43838:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16170,"name":"string","nodeType":"ElementaryTypeName","src":"43838:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43837:22:19"},"returnParameters":{"id":16175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16174,"mutability":"mutable","name":"data","nameLocation":"43896:4:19","nodeType":"VariableDeclaration","scope":16176,"src":"43883:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16173,"name":"bytes","nodeType":"ElementaryTypeName","src":"43883:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43882:19:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16184,"nodeType":"FunctionDefinition","src":"43951:83:19","nodes":[],"documentation":{"id":16177,"nodeType":"StructuredDocumentation","src":"43908:38:19","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"43960:8:19","parameters":{"id":16180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16179,"mutability":"mutable","name":"path","nameLocation":"43985:4:19","nodeType":"VariableDeclaration","scope":16184,"src":"43969:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16178,"name":"string","nodeType":"ElementaryTypeName","src":"43969:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43968:22:19"},"returnParameters":{"id":16183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16182,"mutability":"mutable","name":"line","nameLocation":"44028:4:19","nodeType":"VariableDeclaration","scope":16184,"src":"44014:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16181,"name":"string","nodeType":"ElementaryTypeName","src":"44014:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44013:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16192,"nodeType":"FunctionDefinition","src":"44293:93:19","nodes":[],"documentation":{"id":16185,"nodeType":"StructuredDocumentation","src":"44040:248:19","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"44302:8:19","parameters":{"id":16188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16187,"mutability":"mutable","name":"linkPath","nameLocation":"44327:8:19","nodeType":"VariableDeclaration","scope":16192,"src":"44311:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16186,"name":"string","nodeType":"ElementaryTypeName","src":"44311:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44310:26:19"},"returnParameters":{"id":16191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16190,"mutability":"mutable","name":"targetPath","nameLocation":"44374:10:19","nodeType":"VariableDeclaration","scope":16192,"src":"44360:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16189,"name":"string","nodeType":"ElementaryTypeName","src":"44360:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44359:26:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16200,"nodeType":"FunctionDefinition","src":"44776:66:19","nodes":[],"documentation":{"id":16193,"nodeType":"StructuredDocumentation","src":"44392:379:19","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"44785:9:19","parameters":{"id":16198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16195,"mutability":"mutable","name":"path","nameLocation":"44811:4:19","nodeType":"VariableDeclaration","scope":16200,"src":"44795:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16194,"name":"string","nodeType":"ElementaryTypeName","src":"44795:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16197,"mutability":"mutable","name":"recursive","nameLocation":"44822:9:19","nodeType":"VariableDeclaration","scope":16200,"src":"44817:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16196,"name":"bool","nodeType":"ElementaryTypeName","src":"44817:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"44794:38:19"},"returnParameters":{"id":16199,"nodeType":"ParameterList","parameters":[],"src":"44841:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16206,"nodeType":"FunctionDefinition","src":"45175:51:19","nodes":[],"documentation":{"id":16201,"nodeType":"StructuredDocumentation","src":"44848:322:19","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"45184:10:19","parameters":{"id":16204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16203,"mutability":"mutable","name":"path","nameLocation":"45211:4:19","nodeType":"VariableDeclaration","scope":16206,"src":"45195:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16202,"name":"string","nodeType":"ElementaryTypeName","src":"45195:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45194:22:19"},"returnParameters":{"id":16205,"nodeType":"ParameterList","parameters":[],"src":"45225:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16216,"nodeType":"FunctionDefinition","src":"45333:91:19","nodes":[],"documentation":{"id":16207,"nodeType":"StructuredDocumentation","src":"45232:96:19","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"45342:6:19","parameters":{"id":16211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16210,"mutability":"mutable","name":"commandInput","nameLocation":"45367:12:19","nodeType":"VariableDeclaration","scope":16216,"src":"45349:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16208,"name":"string","nodeType":"ElementaryTypeName","src":"45349:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16209,"nodeType":"ArrayTypeName","src":"45349:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"45348:32:19"},"returnParameters":{"id":16215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16214,"mutability":"mutable","name":"result","nameLocation":"45416:6:19","nodeType":"VariableDeclaration","scope":16216,"src":"45399:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$14899_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":16213,"nodeType":"UserDefinedTypeName","pathNode":{"id":16212,"name":"FfiResult","nameLocations":["45399:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":14899,"src":"45399:9:19"},"referencedDeclaration":14899,"src":"45399:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$14899_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"45398:25:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16222,"nodeType":"FunctionDefinition","src":"45489:65:19","nodes":[],"documentation":{"id":16217,"nodeType":"StructuredDocumentation","src":"45430:54:19","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"45498:8:19","parameters":{"id":16218,"nodeType":"ParameterList","parameters":[],"src":"45506:2:19"},"returnParameters":{"id":16221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16220,"mutability":"mutable","name":"milliseconds","nameLocation":"45540:12:19","nodeType":"VariableDeclaration","scope":16222,"src":"45532:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16219,"name":"uint256","nodeType":"ElementaryTypeName","src":"45532:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45531:22:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16230,"nodeType":"FunctionDefinition","src":"45723:72:19","nodes":[],"documentation":{"id":16223,"nodeType":"StructuredDocumentation","src":"45560:158:19","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"45732:9:19","parameters":{"id":16228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16225,"mutability":"mutable","name":"path","nameLocation":"45758:4:19","nodeType":"VariableDeclaration","scope":16230,"src":"45742:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16224,"name":"string","nodeType":"ElementaryTypeName","src":"45742:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16227,"mutability":"mutable","name":"data","nameLocation":"45780:4:19","nodeType":"VariableDeclaration","scope":16230,"src":"45764:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16226,"name":"string","nodeType":"ElementaryTypeName","src":"45764:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45741:44:19"},"returnParameters":{"id":16229,"nodeType":"ParameterList","parameters":[],"src":"45794:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16238,"nodeType":"FunctionDefinition","src":"45973:77:19","nodes":[],"documentation":{"id":16231,"nodeType":"StructuredDocumentation","src":"45801:167:19","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"45982:15:19","parameters":{"id":16236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16233,"mutability":"mutable","name":"path","nameLocation":"46014:4:19","nodeType":"VariableDeclaration","scope":16238,"src":"45998:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16232,"name":"string","nodeType":"ElementaryTypeName","src":"45998:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16235,"mutability":"mutable","name":"data","nameLocation":"46035:4:19","nodeType":"VariableDeclaration","scope":16238,"src":"46020:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16234,"name":"bytes","nodeType":"ElementaryTypeName","src":"46020:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"45997:43:19"},"returnParameters":{"id":16237,"nodeType":"ParameterList","parameters":[],"src":"46049:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16246,"nodeType":"FunctionDefinition","src":"46171:72:19","nodes":[],"documentation":{"id":16239,"nodeType":"StructuredDocumentation","src":"46056:110:19","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"46180:9:19","parameters":{"id":16244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16241,"mutability":"mutable","name":"path","nameLocation":"46206:4:19","nodeType":"VariableDeclaration","scope":16246,"src":"46190:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16240,"name":"string","nodeType":"ElementaryTypeName","src":"46190:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16243,"mutability":"mutable","name":"data","nameLocation":"46228:4:19","nodeType":"VariableDeclaration","scope":16246,"src":"46212:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16242,"name":"string","nodeType":"ElementaryTypeName","src":"46212:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46189:44:19"},"returnParameters":{"id":16245,"nodeType":"ParameterList","parameters":[],"src":"46242:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16256,"nodeType":"FunctionDefinition","src":"46329:95:19","nodes":[],"documentation":{"id":16247,"nodeType":"StructuredDocumentation","src":"46280:44:19","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"46338:13:19","parameters":{"id":16252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16249,"mutability":"mutable","name":"json","nameLocation":"46368:4:19","nodeType":"VariableDeclaration","scope":16256,"src":"46352:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16248,"name":"string","nodeType":"ElementaryTypeName","src":"46352:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16251,"mutability":"mutable","name":"key","nameLocation":"46390:3:19","nodeType":"VariableDeclaration","scope":16256,"src":"46374:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16250,"name":"string","nodeType":"ElementaryTypeName","src":"46374:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46351:43:19"},"returnParameters":{"id":16255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16256,"src":"46418:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16253,"name":"bool","nodeType":"ElementaryTypeName","src":"46418:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"46417:6:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16266,"nodeType":"FunctionDefinition","src":"46505:101:19","nodes":[],"documentation":{"id":16257,"nodeType":"StructuredDocumentation","src":"46430:70:19","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"46514:16:19","parameters":{"id":16262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16259,"mutability":"mutable","name":"json","nameLocation":"46547:4:19","nodeType":"VariableDeclaration","scope":16266,"src":"46531:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16258,"name":"string","nodeType":"ElementaryTypeName","src":"46531:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16261,"mutability":"mutable","name":"key","nameLocation":"46569:3:19","nodeType":"VariableDeclaration","scope":16266,"src":"46553:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16260,"name":"string","nodeType":"ElementaryTypeName","src":"46553:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46530:43:19"},"returnParameters":{"id":16265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16266,"src":"46597:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16263,"name":"address","nodeType":"ElementaryTypeName","src":"46597:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46596:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16277,"nodeType":"FunctionDefinition","src":"46689:139:19","nodes":[],"documentation":{"id":16267,"nodeType":"StructuredDocumentation","src":"46612:72:19","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"46698:21:19","parameters":{"id":16272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16269,"mutability":"mutable","name":"json","nameLocation":"46736:4:19","nodeType":"VariableDeclaration","scope":16277,"src":"46720:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16268,"name":"string","nodeType":"ElementaryTypeName","src":"46720:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16271,"mutability":"mutable","name":"key","nameLocation":"46758:3:19","nodeType":"VariableDeclaration","scope":16277,"src":"46742:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16270,"name":"string","nodeType":"ElementaryTypeName","src":"46742:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46719:43:19"},"returnParameters":{"id":16276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16277,"src":"46810:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16273,"name":"address","nodeType":"ElementaryTypeName","src":"46810:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16274,"nodeType":"ArrayTypeName","src":"46810:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"46809:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16287,"nodeType":"FunctionDefinition","src":"46906:95:19","nodes":[],"documentation":{"id":16278,"nodeType":"StructuredDocumentation","src":"46834:67:19","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"46915:13:19","parameters":{"id":16283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16280,"mutability":"mutable","name":"json","nameLocation":"46945:4:19","nodeType":"VariableDeclaration","scope":16287,"src":"46929:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16279,"name":"string","nodeType":"ElementaryTypeName","src":"46929:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16282,"mutability":"mutable","name":"key","nameLocation":"46967:3:19","nodeType":"VariableDeclaration","scope":16287,"src":"46951:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16281,"name":"string","nodeType":"ElementaryTypeName","src":"46951:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46928:43:19"},"returnParameters":{"id":16286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16287,"src":"46995:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16284,"name":"bool","nodeType":"ElementaryTypeName","src":"46995:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"46994:6:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16298,"nodeType":"FunctionDefinition","src":"47081:109:19","nodes":[],"documentation":{"id":16288,"nodeType":"StructuredDocumentation","src":"47007:69:19","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"47090:18:19","parameters":{"id":16293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16290,"mutability":"mutable","name":"json","nameLocation":"47125:4:19","nodeType":"VariableDeclaration","scope":16298,"src":"47109:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16289,"name":"string","nodeType":"ElementaryTypeName","src":"47109:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16292,"mutability":"mutable","name":"key","nameLocation":"47147:3:19","nodeType":"VariableDeclaration","scope":16298,"src":"47131:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16291,"name":"string","nodeType":"ElementaryTypeName","src":"47131:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47108:43:19"},"returnParameters":{"id":16297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16298,"src":"47175:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16294,"name":"bool","nodeType":"ElementaryTypeName","src":"47175:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16295,"nodeType":"ArrayTypeName","src":"47175:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"47174:15:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16308,"nodeType":"FunctionDefinition","src":"47269:104:19","nodes":[],"documentation":{"id":16299,"nodeType":"StructuredDocumentation","src":"47196:68:19","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"47278:14:19","parameters":{"id":16304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16301,"mutability":"mutable","name":"json","nameLocation":"47309:4:19","nodeType":"VariableDeclaration","scope":16308,"src":"47293:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16300,"name":"string","nodeType":"ElementaryTypeName","src":"47293:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16303,"mutability":"mutable","name":"key","nameLocation":"47331:3:19","nodeType":"VariableDeclaration","scope":16308,"src":"47315:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16302,"name":"string","nodeType":"ElementaryTypeName","src":"47315:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47292:43:19"},"returnParameters":{"id":16307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16308,"src":"47359:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16305,"name":"bytes","nodeType":"ElementaryTypeName","src":"47359:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"47358:14:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16318,"nodeType":"FunctionDefinition","src":"47454:101:19","nodes":[],"documentation":{"id":16309,"nodeType":"StructuredDocumentation","src":"47379:70:19","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"47463:16:19","parameters":{"id":16314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16311,"mutability":"mutable","name":"json","nameLocation":"47496:4:19","nodeType":"VariableDeclaration","scope":16318,"src":"47480:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16310,"name":"string","nodeType":"ElementaryTypeName","src":"47480:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16313,"mutability":"mutable","name":"key","nameLocation":"47518:3:19","nodeType":"VariableDeclaration","scope":16318,"src":"47502:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16312,"name":"string","nodeType":"ElementaryTypeName","src":"47502:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47479:43:19"},"returnParameters":{"id":16317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16318,"src":"47546:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47546:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"47545:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16329,"nodeType":"FunctionDefinition","src":"47638:139:19","nodes":[],"documentation":{"id":16319,"nodeType":"StructuredDocumentation","src":"47561:72:19","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"47647:21:19","parameters":{"id":16324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16321,"mutability":"mutable","name":"json","nameLocation":"47685:4:19","nodeType":"VariableDeclaration","scope":16329,"src":"47669:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16320,"name":"string","nodeType":"ElementaryTypeName","src":"47669:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16323,"mutability":"mutable","name":"key","nameLocation":"47707:3:19","nodeType":"VariableDeclaration","scope":16329,"src":"47691:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16322,"name":"string","nodeType":"ElementaryTypeName","src":"47691:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47668:43:19"},"returnParameters":{"id":16328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16329,"src":"47759:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47759:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16326,"nodeType":"ArrayTypeName","src":"47759:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"47758:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16340,"nodeType":"FunctionDefinition","src":"47858:111:19","nodes":[],"documentation":{"id":16330,"nodeType":"StructuredDocumentation","src":"47783:70:19","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"47867:19:19","parameters":{"id":16335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16332,"mutability":"mutable","name":"json","nameLocation":"47903:4:19","nodeType":"VariableDeclaration","scope":16340,"src":"47887:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16331,"name":"string","nodeType":"ElementaryTypeName","src":"47887:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16334,"mutability":"mutable","name":"key","nameLocation":"47925:3:19","nodeType":"VariableDeclaration","scope":16340,"src":"47909:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16333,"name":"string","nodeType":"ElementaryTypeName","src":"47909:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47886:43:19"},"returnParameters":{"id":16339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16340,"src":"47953:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16336,"name":"bytes","nodeType":"ElementaryTypeName","src":"47953:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16337,"nodeType":"ArrayTypeName","src":"47953:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"47952:16:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16350,"nodeType":"FunctionDefinition","src":"48049:96:19","nodes":[],"documentation":{"id":16341,"nodeType":"StructuredDocumentation","src":"47975:69:19","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"48058:12:19","parameters":{"id":16346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16343,"mutability":"mutable","name":"json","nameLocation":"48087:4:19","nodeType":"VariableDeclaration","scope":16350,"src":"48071:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16342,"name":"string","nodeType":"ElementaryTypeName","src":"48071:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16345,"mutability":"mutable","name":"key","nameLocation":"48109:3:19","nodeType":"VariableDeclaration","scope":16350,"src":"48093:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16344,"name":"string","nodeType":"ElementaryTypeName","src":"48093:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48070:43:19"},"returnParameters":{"id":16349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16350,"src":"48137:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16347,"name":"int256","nodeType":"ElementaryTypeName","src":"48137:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"48136:8:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16361,"nodeType":"FunctionDefinition","src":"48227:110:19","nodes":[],"documentation":{"id":16351,"nodeType":"StructuredDocumentation","src":"48151:71:19","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"48236:17:19","parameters":{"id":16356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16353,"mutability":"mutable","name":"json","nameLocation":"48270:4:19","nodeType":"VariableDeclaration","scope":16361,"src":"48254:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16352,"name":"string","nodeType":"ElementaryTypeName","src":"48254:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16355,"mutability":"mutable","name":"key","nameLocation":"48292:3:19","nodeType":"VariableDeclaration","scope":16361,"src":"48276:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16354,"name":"string","nodeType":"ElementaryTypeName","src":"48276:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48253:43:19"},"returnParameters":{"id":16360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16361,"src":"48320:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16357,"name":"int256","nodeType":"ElementaryTypeName","src":"48320:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16358,"nodeType":"ArrayTypeName","src":"48320:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"48319:17:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16372,"nodeType":"FunctionDefinition","src":"48402:111:19","nodes":[],"documentation":{"id":16362,"nodeType":"StructuredDocumentation","src":"48343:54:19","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"48411:13:19","parameters":{"id":16367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16364,"mutability":"mutable","name":"json","nameLocation":"48441:4:19","nodeType":"VariableDeclaration","scope":16372,"src":"48425:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16363,"name":"string","nodeType":"ElementaryTypeName","src":"48425:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16366,"mutability":"mutable","name":"key","nameLocation":"48463:3:19","nodeType":"VariableDeclaration","scope":16372,"src":"48447:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16365,"name":"string","nodeType":"ElementaryTypeName","src":"48447:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48424:43:19"},"returnParameters":{"id":16371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16370,"mutability":"mutable","name":"keys","nameLocation":"48507:4:19","nodeType":"VariableDeclaration","scope":16372,"src":"48491:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16368,"name":"string","nodeType":"ElementaryTypeName","src":"48491:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16369,"nodeType":"ArrayTypeName","src":"48491:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"48490:22:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16382,"nodeType":"FunctionDefinition","src":"48593:106:19","nodes":[],"documentation":{"id":16373,"nodeType":"StructuredDocumentation","src":"48519:69:19","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"48602:15:19","parameters":{"id":16378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16375,"mutability":"mutable","name":"json","nameLocation":"48634:4:19","nodeType":"VariableDeclaration","scope":16382,"src":"48618:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16374,"name":"string","nodeType":"ElementaryTypeName","src":"48618:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16377,"mutability":"mutable","name":"key","nameLocation":"48656:3:19","nodeType":"VariableDeclaration","scope":16382,"src":"48640:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16376,"name":"string","nodeType":"ElementaryTypeName","src":"48640:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48617:43:19"},"returnParameters":{"id":16381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16382,"src":"48684:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16379,"name":"string","nodeType":"ElementaryTypeName","src":"48684:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48683:15:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16393,"nodeType":"FunctionDefinition","src":"48781:113:19","nodes":[],"documentation":{"id":16383,"nodeType":"StructuredDocumentation","src":"48705:71:19","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"48790:20:19","parameters":{"id":16388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16385,"mutability":"mutable","name":"json","nameLocation":"48827:4:19","nodeType":"VariableDeclaration","scope":16393,"src":"48811:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16384,"name":"string","nodeType":"ElementaryTypeName","src":"48811:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16387,"mutability":"mutable","name":"key","nameLocation":"48849:3:19","nodeType":"VariableDeclaration","scope":16393,"src":"48833:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16386,"name":"string","nodeType":"ElementaryTypeName","src":"48833:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48810:43:19"},"returnParameters":{"id":16392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16393,"src":"48877:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16389,"name":"string","nodeType":"ElementaryTypeName","src":"48877:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16390,"nodeType":"ArrayTypeName","src":"48877:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"48876:17:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16405,"nodeType":"FunctionDefinition","src":"49011:165:19","nodes":[],"documentation":{"id":16394,"nodeType":"StructuredDocumentation","src":"48900:106:19","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"49020:18:19","parameters":{"id":16401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16396,"mutability":"mutable","name":"json","nameLocation":"49055:4:19","nodeType":"VariableDeclaration","scope":16405,"src":"49039:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16395,"name":"string","nodeType":"ElementaryTypeName","src":"49039:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16398,"mutability":"mutable","name":"key","nameLocation":"49077:3:19","nodeType":"VariableDeclaration","scope":16405,"src":"49061:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16397,"name":"string","nodeType":"ElementaryTypeName","src":"49061:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16400,"mutability":"mutable","name":"typeDescription","nameLocation":"49098:15:19","nodeType":"VariableDeclaration","scope":16405,"src":"49082:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16399,"name":"string","nodeType":"ElementaryTypeName","src":"49082:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49038:76:19"},"returnParameters":{"id":16404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16405,"src":"49162:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16402,"name":"bytes","nodeType":"ElementaryTypeName","src":"49162:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49161:14:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16415,"nodeType":"FunctionDefinition","src":"49278:139:19","nodes":[],"documentation":{"id":16406,"nodeType":"StructuredDocumentation","src":"49182:91:19","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"49287:13:19","parameters":{"id":16411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16408,"mutability":"mutable","name":"json","nameLocation":"49317:4:19","nodeType":"VariableDeclaration","scope":16415,"src":"49301:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16407,"name":"string","nodeType":"ElementaryTypeName","src":"49301:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16410,"mutability":"mutable","name":"typeDescription","nameLocation":"49339:15:19","nodeType":"VariableDeclaration","scope":16415,"src":"49323:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16409,"name":"string","nodeType":"ElementaryTypeName","src":"49323:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49300:55:19"},"returnParameters":{"id":16414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16415,"src":"49403:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16412,"name":"bytes","nodeType":"ElementaryTypeName","src":"49403:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49402:14:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16427,"nodeType":"FunctionDefinition","src":"49528:160:19","nodes":[],"documentation":{"id":16416,"nodeType":"StructuredDocumentation","src":"49423:100:19","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"49537:13:19","parameters":{"id":16423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16418,"mutability":"mutable","name":"json","nameLocation":"49567:4:19","nodeType":"VariableDeclaration","scope":16427,"src":"49551:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16417,"name":"string","nodeType":"ElementaryTypeName","src":"49551:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16420,"mutability":"mutable","name":"key","nameLocation":"49589:3:19","nodeType":"VariableDeclaration","scope":16427,"src":"49573:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16419,"name":"string","nodeType":"ElementaryTypeName","src":"49573:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16422,"mutability":"mutable","name":"typeDescription","nameLocation":"49610:15:19","nodeType":"VariableDeclaration","scope":16427,"src":"49594:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16421,"name":"string","nodeType":"ElementaryTypeName","src":"49594:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49550:76:19"},"returnParameters":{"id":16426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16427,"src":"49674:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16424,"name":"bytes","nodeType":"ElementaryTypeName","src":"49674:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49673:14:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16437,"nodeType":"FunctionDefinition","src":"49769:98:19","nodes":[],"documentation":{"id":16428,"nodeType":"StructuredDocumentation","src":"49694:70:19","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"49778:13:19","parameters":{"id":16433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16430,"mutability":"mutable","name":"json","nameLocation":"49808:4:19","nodeType":"VariableDeclaration","scope":16437,"src":"49792:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16429,"name":"string","nodeType":"ElementaryTypeName","src":"49792:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16432,"mutability":"mutable","name":"key","nameLocation":"49830:3:19","nodeType":"VariableDeclaration","scope":16437,"src":"49814:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16431,"name":"string","nodeType":"ElementaryTypeName","src":"49814:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49791:43:19"},"returnParameters":{"id":16436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16437,"src":"49858:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16434,"name":"uint256","nodeType":"ElementaryTypeName","src":"49858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49857:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16448,"nodeType":"FunctionDefinition","src":"49950:112:19","nodes":[],"documentation":{"id":16438,"nodeType":"StructuredDocumentation","src":"49873:72:19","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"49959:18:19","parameters":{"id":16443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16440,"mutability":"mutable","name":"json","nameLocation":"49994:4:19","nodeType":"VariableDeclaration","scope":16448,"src":"49978:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16439,"name":"string","nodeType":"ElementaryTypeName","src":"49978:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16442,"mutability":"mutable","name":"key","nameLocation":"50016:3:19","nodeType":"VariableDeclaration","scope":16448,"src":"50000:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16441,"name":"string","nodeType":"ElementaryTypeName","src":"50000:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49977:43:19"},"returnParameters":{"id":16447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16448,"src":"50044:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16444,"name":"uint256","nodeType":"ElementaryTypeName","src":"50044:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16445,"nodeType":"ArrayTypeName","src":"50044:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"50043:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16456,"nodeType":"FunctionDefinition","src":"50103:93:19","nodes":[],"documentation":{"id":16449,"nodeType":"StructuredDocumentation","src":"50068:30:19","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"50112:9:19","parameters":{"id":16452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16451,"mutability":"mutable","name":"json","nameLocation":"50138:4:19","nodeType":"VariableDeclaration","scope":16456,"src":"50122:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16450,"name":"string","nodeType":"ElementaryTypeName","src":"50122:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50121:22:19"},"returnParameters":{"id":16455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16454,"mutability":"mutable","name":"abiEncodedData","nameLocation":"50180:14:19","nodeType":"VariableDeclaration","scope":16456,"src":"50167:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16453,"name":"bytes","nodeType":"ElementaryTypeName","src":"50167:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"50166:29:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16466,"nodeType":"FunctionDefinition","src":"50246:114:19","nodes":[],"documentation":{"id":16457,"nodeType":"StructuredDocumentation","src":"50202:39:19","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"50255:9:19","parameters":{"id":16462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16459,"mutability":"mutable","name":"json","nameLocation":"50281:4:19","nodeType":"VariableDeclaration","scope":16466,"src":"50265:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16458,"name":"string","nodeType":"ElementaryTypeName","src":"50265:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16461,"mutability":"mutable","name":"key","nameLocation":"50303:3:19","nodeType":"VariableDeclaration","scope":16466,"src":"50287:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16460,"name":"string","nodeType":"ElementaryTypeName","src":"50287:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50264:43:19"},"returnParameters":{"id":16465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16464,"mutability":"mutable","name":"abiEncodedData","nameLocation":"50344:14:19","nodeType":"VariableDeclaration","scope":16466,"src":"50331:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16463,"name":"bytes","nodeType":"ElementaryTypeName","src":"50331:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"50330:29:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16478,"nodeType":"FunctionDefinition","src":"50395:148:19","nodes":[],"documentation":{"id":16467,"nodeType":"StructuredDocumentation","src":"50366:24:19","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"50404:16:19","parameters":{"id":16474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16469,"mutability":"mutable","name":"objectKey","nameLocation":"50437:9:19","nodeType":"VariableDeclaration","scope":16478,"src":"50421:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16468,"name":"string","nodeType":"ElementaryTypeName","src":"50421:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16471,"mutability":"mutable","name":"valueKey","nameLocation":"50464:8:19","nodeType":"VariableDeclaration","scope":16478,"src":"50448:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16470,"name":"string","nodeType":"ElementaryTypeName","src":"50448:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16473,"mutability":"mutable","name":"value","nameLocation":"50482:5:19","nodeType":"VariableDeclaration","scope":16478,"src":"50474:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16472,"name":"address","nodeType":"ElementaryTypeName","src":"50474:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"50420:68:19"},"returnParameters":{"id":16477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16476,"mutability":"mutable","name":"json","nameLocation":"50537:4:19","nodeType":"VariableDeclaration","scope":16478,"src":"50523:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16475,"name":"string","nodeType":"ElementaryTypeName","src":"50523:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50522:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16491,"nodeType":"FunctionDefinition","src":"50578:160:19","nodes":[],"documentation":{"id":16479,"nodeType":"StructuredDocumentation","src":"50549:24:19","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"50587:16:19","parameters":{"id":16487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16481,"mutability":"mutable","name":"objectKey","nameLocation":"50620:9:19","nodeType":"VariableDeclaration","scope":16491,"src":"50604:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16480,"name":"string","nodeType":"ElementaryTypeName","src":"50604:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16483,"mutability":"mutable","name":"valueKey","nameLocation":"50647:8:19","nodeType":"VariableDeclaration","scope":16491,"src":"50631:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16482,"name":"string","nodeType":"ElementaryTypeName","src":"50631:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16486,"mutability":"mutable","name":"values","nameLocation":"50676:6:19","nodeType":"VariableDeclaration","scope":16491,"src":"50657:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16484,"name":"address","nodeType":"ElementaryTypeName","src":"50657:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16485,"nodeType":"ArrayTypeName","src":"50657:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"50603:80:19"},"returnParameters":{"id":16490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16489,"mutability":"mutable","name":"json","nameLocation":"50732:4:19","nodeType":"VariableDeclaration","scope":16491,"src":"50718:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16488,"name":"string","nodeType":"ElementaryTypeName","src":"50718:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50717:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16503,"nodeType":"FunctionDefinition","src":"50773:142:19","nodes":[],"documentation":{"id":16492,"nodeType":"StructuredDocumentation","src":"50744:24:19","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"50782:13:19","parameters":{"id":16499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16494,"mutability":"mutable","name":"objectKey","nameLocation":"50812:9:19","nodeType":"VariableDeclaration","scope":16503,"src":"50796:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16493,"name":"string","nodeType":"ElementaryTypeName","src":"50796:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16496,"mutability":"mutable","name":"valueKey","nameLocation":"50839:8:19","nodeType":"VariableDeclaration","scope":16503,"src":"50823:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16495,"name":"string","nodeType":"ElementaryTypeName","src":"50823:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16498,"mutability":"mutable","name":"value","nameLocation":"50854:5:19","nodeType":"VariableDeclaration","scope":16503,"src":"50849:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16497,"name":"bool","nodeType":"ElementaryTypeName","src":"50849:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"50795:65:19"},"returnParameters":{"id":16502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16501,"mutability":"mutable","name":"json","nameLocation":"50909:4:19","nodeType":"VariableDeclaration","scope":16503,"src":"50895:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16500,"name":"string","nodeType":"ElementaryTypeName","src":"50895:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50894:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16516,"nodeType":"FunctionDefinition","src":"50950:154:19","nodes":[],"documentation":{"id":16504,"nodeType":"StructuredDocumentation","src":"50921:24:19","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"50959:13:19","parameters":{"id":16512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16506,"mutability":"mutable","name":"objectKey","nameLocation":"50989:9:19","nodeType":"VariableDeclaration","scope":16516,"src":"50973:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16505,"name":"string","nodeType":"ElementaryTypeName","src":"50973:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16508,"mutability":"mutable","name":"valueKey","nameLocation":"51016:8:19","nodeType":"VariableDeclaration","scope":16516,"src":"51000:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16507,"name":"string","nodeType":"ElementaryTypeName","src":"51000:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16511,"mutability":"mutable","name":"values","nameLocation":"51042:6:19","nodeType":"VariableDeclaration","scope":16516,"src":"51026:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16509,"name":"bool","nodeType":"ElementaryTypeName","src":"51026:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16510,"nodeType":"ArrayTypeName","src":"51026:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"50972:77:19"},"returnParameters":{"id":16515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16514,"mutability":"mutable","name":"json","nameLocation":"51098:4:19","nodeType":"VariableDeclaration","scope":16516,"src":"51084:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16513,"name":"string","nodeType":"ElementaryTypeName","src":"51084:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51083:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16528,"nodeType":"FunctionDefinition","src":"51139:148:19","nodes":[],"documentation":{"id":16517,"nodeType":"StructuredDocumentation","src":"51110:24:19","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"51148:16:19","parameters":{"id":16524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16519,"mutability":"mutable","name":"objectKey","nameLocation":"51181:9:19","nodeType":"VariableDeclaration","scope":16528,"src":"51165:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16518,"name":"string","nodeType":"ElementaryTypeName","src":"51165:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16521,"mutability":"mutable","name":"valueKey","nameLocation":"51208:8:19","nodeType":"VariableDeclaration","scope":16528,"src":"51192:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16520,"name":"string","nodeType":"ElementaryTypeName","src":"51192:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16523,"mutability":"mutable","name":"value","nameLocation":"51226:5:19","nodeType":"VariableDeclaration","scope":16528,"src":"51218:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"51164:68:19"},"returnParameters":{"id":16527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16526,"mutability":"mutable","name":"json","nameLocation":"51281:4:19","nodeType":"VariableDeclaration","scope":16528,"src":"51267:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16525,"name":"string","nodeType":"ElementaryTypeName","src":"51267:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51266:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16541,"nodeType":"FunctionDefinition","src":"51322:160:19","nodes":[],"documentation":{"id":16529,"nodeType":"StructuredDocumentation","src":"51293:24:19","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"51331:16:19","parameters":{"id":16537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16531,"mutability":"mutable","name":"objectKey","nameLocation":"51364:9:19","nodeType":"VariableDeclaration","scope":16541,"src":"51348:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16530,"name":"string","nodeType":"ElementaryTypeName","src":"51348:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16533,"mutability":"mutable","name":"valueKey","nameLocation":"51391:8:19","nodeType":"VariableDeclaration","scope":16541,"src":"51375:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16532,"name":"string","nodeType":"ElementaryTypeName","src":"51375:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16536,"mutability":"mutable","name":"values","nameLocation":"51420:6:19","nodeType":"VariableDeclaration","scope":16541,"src":"51401:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51401:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16535,"nodeType":"ArrayTypeName","src":"51401:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"51347:80:19"},"returnParameters":{"id":16540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16539,"mutability":"mutable","name":"json","nameLocation":"51476:4:19","nodeType":"VariableDeclaration","scope":16541,"src":"51462:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16538,"name":"string","nodeType":"ElementaryTypeName","src":"51462:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51461:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16553,"nodeType":"FunctionDefinition","src":"51517:153:19","nodes":[],"documentation":{"id":16542,"nodeType":"StructuredDocumentation","src":"51488:24:19","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"51526:14:19","parameters":{"id":16549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16544,"mutability":"mutable","name":"objectKey","nameLocation":"51557:9:19","nodeType":"VariableDeclaration","scope":16553,"src":"51541:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16543,"name":"string","nodeType":"ElementaryTypeName","src":"51541:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16546,"mutability":"mutable","name":"valueKey","nameLocation":"51584:8:19","nodeType":"VariableDeclaration","scope":16553,"src":"51568:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16545,"name":"string","nodeType":"ElementaryTypeName","src":"51568:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16548,"mutability":"mutable","name":"value","nameLocation":"51609:5:19","nodeType":"VariableDeclaration","scope":16553,"src":"51594:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16547,"name":"bytes","nodeType":"ElementaryTypeName","src":"51594:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51540:75:19"},"returnParameters":{"id":16552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16551,"mutability":"mutable","name":"json","nameLocation":"51664:4:19","nodeType":"VariableDeclaration","scope":16553,"src":"51650:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16550,"name":"string","nodeType":"ElementaryTypeName","src":"51650:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51649:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16566,"nodeType":"FunctionDefinition","src":"51705:156:19","nodes":[],"documentation":{"id":16554,"nodeType":"StructuredDocumentation","src":"51676:24:19","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"51714:14:19","parameters":{"id":16562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16556,"mutability":"mutable","name":"objectKey","nameLocation":"51745:9:19","nodeType":"VariableDeclaration","scope":16566,"src":"51729:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16555,"name":"string","nodeType":"ElementaryTypeName","src":"51729:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16558,"mutability":"mutable","name":"valueKey","nameLocation":"51772:8:19","nodeType":"VariableDeclaration","scope":16566,"src":"51756:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16557,"name":"string","nodeType":"ElementaryTypeName","src":"51756:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16561,"mutability":"mutable","name":"values","nameLocation":"51799:6:19","nodeType":"VariableDeclaration","scope":16566,"src":"51782:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16559,"name":"bytes","nodeType":"ElementaryTypeName","src":"51782:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16560,"nodeType":"ArrayTypeName","src":"51782:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"51728:78:19"},"returnParameters":{"id":16565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16564,"mutability":"mutable","name":"json","nameLocation":"51855:4:19","nodeType":"VariableDeclaration","scope":16566,"src":"51841:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16563,"name":"string","nodeType":"ElementaryTypeName","src":"51841:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51840:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16578,"nodeType":"FunctionDefinition","src":"51896:143:19","nodes":[],"documentation":{"id":16567,"nodeType":"StructuredDocumentation","src":"51867:24:19","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"51905:12:19","parameters":{"id":16574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16569,"mutability":"mutable","name":"objectKey","nameLocation":"51934:9:19","nodeType":"VariableDeclaration","scope":16578,"src":"51918:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16568,"name":"string","nodeType":"ElementaryTypeName","src":"51918:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16571,"mutability":"mutable","name":"valueKey","nameLocation":"51961:8:19","nodeType":"VariableDeclaration","scope":16578,"src":"51945:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16570,"name":"string","nodeType":"ElementaryTypeName","src":"51945:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16573,"mutability":"mutable","name":"value","nameLocation":"51978:5:19","nodeType":"VariableDeclaration","scope":16578,"src":"51971:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16572,"name":"int256","nodeType":"ElementaryTypeName","src":"51971:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"51917:67:19"},"returnParameters":{"id":16577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16576,"mutability":"mutable","name":"json","nameLocation":"52033:4:19","nodeType":"VariableDeclaration","scope":16578,"src":"52019:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16575,"name":"string","nodeType":"ElementaryTypeName","src":"52019:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52018:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16591,"nodeType":"FunctionDefinition","src":"52074:155:19","nodes":[],"documentation":{"id":16579,"nodeType":"StructuredDocumentation","src":"52045:24:19","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"52083:12:19","parameters":{"id":16587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16581,"mutability":"mutable","name":"objectKey","nameLocation":"52112:9:19","nodeType":"VariableDeclaration","scope":16591,"src":"52096:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16580,"name":"string","nodeType":"ElementaryTypeName","src":"52096:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16583,"mutability":"mutable","name":"valueKey","nameLocation":"52139:8:19","nodeType":"VariableDeclaration","scope":16591,"src":"52123:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16582,"name":"string","nodeType":"ElementaryTypeName","src":"52123:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16586,"mutability":"mutable","name":"values","nameLocation":"52167:6:19","nodeType":"VariableDeclaration","scope":16591,"src":"52149:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16584,"name":"int256","nodeType":"ElementaryTypeName","src":"52149:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16585,"nodeType":"ArrayTypeName","src":"52149:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"52095:79:19"},"returnParameters":{"id":16590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16589,"mutability":"mutable","name":"json","nameLocation":"52223:4:19","nodeType":"VariableDeclaration","scope":16591,"src":"52209:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16588,"name":"string","nodeType":"ElementaryTypeName","src":"52209:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52208:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16601,"nodeType":"FunctionDefinition","src":"52426:111:19","nodes":[],"documentation":{"id":16592,"nodeType":"StructuredDocumentation","src":"52235:186:19","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"52435:13:19","parameters":{"id":16597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16594,"mutability":"mutable","name":"objectKey","nameLocation":"52465:9:19","nodeType":"VariableDeclaration","scope":16601,"src":"52449:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16593,"name":"string","nodeType":"ElementaryTypeName","src":"52449:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16596,"mutability":"mutable","name":"value","nameLocation":"52492:5:19","nodeType":"VariableDeclaration","scope":16601,"src":"52476:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16595,"name":"string","nodeType":"ElementaryTypeName","src":"52476:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52448:50:19"},"returnParameters":{"id":16600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16599,"mutability":"mutable","name":"json","nameLocation":"52531:4:19","nodeType":"VariableDeclaration","scope":16601,"src":"52517:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16598,"name":"string","nodeType":"ElementaryTypeName","src":"52517:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52516:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16611,"nodeType":"FunctionDefinition","src":"52572:149:19","nodes":[],"documentation":{"id":16602,"nodeType":"StructuredDocumentation","src":"52543:24:19","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"52581:17:19","parameters":{"id":16607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16604,"mutability":"mutable","name":"typeDescription","nameLocation":"52615:15:19","nodeType":"VariableDeclaration","scope":16611,"src":"52599:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16603,"name":"string","nodeType":"ElementaryTypeName","src":"52599:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16606,"mutability":"mutable","name":"value","nameLocation":"52647:5:19","nodeType":"VariableDeclaration","scope":16611,"src":"52632:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16605,"name":"bytes","nodeType":"ElementaryTypeName","src":"52632:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"52598:55:19"},"returnParameters":{"id":16610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16609,"mutability":"mutable","name":"json","nameLocation":"52715:4:19","nodeType":"VariableDeclaration","scope":16611,"src":"52701:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16608,"name":"string","nodeType":"ElementaryTypeName","src":"52701:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52700:20:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16625,"nodeType":"FunctionDefinition","src":"52756:211:19","nodes":[],"documentation":{"id":16612,"nodeType":"StructuredDocumentation","src":"52727:24:19","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"52765:17:19","parameters":{"id":16621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16614,"mutability":"mutable","name":"objectKey","nameLocation":"52808:9:19","nodeType":"VariableDeclaration","scope":16625,"src":"52792:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16613,"name":"string","nodeType":"ElementaryTypeName","src":"52792:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16616,"mutability":"mutable","name":"valueKey","nameLocation":"52843:8:19","nodeType":"VariableDeclaration","scope":16625,"src":"52827:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16615,"name":"string","nodeType":"ElementaryTypeName","src":"52827:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16618,"mutability":"mutable","name":"typeDescription","nameLocation":"52877:15:19","nodeType":"VariableDeclaration","scope":16625,"src":"52861:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16617,"name":"string","nodeType":"ElementaryTypeName","src":"52861:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16620,"mutability":"mutable","name":"value","nameLocation":"52917:5:19","nodeType":"VariableDeclaration","scope":16625,"src":"52902:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16619,"name":"bytes","nodeType":"ElementaryTypeName","src":"52902:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"52782:146:19"},"returnParameters":{"id":16624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16623,"mutability":"mutable","name":"json","nameLocation":"52961:4:19","nodeType":"VariableDeclaration","scope":16625,"src":"52947:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16622,"name":"string","nodeType":"ElementaryTypeName","src":"52947:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52946:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16637,"nodeType":"FunctionDefinition","src":"53002:155:19","nodes":[],"documentation":{"id":16626,"nodeType":"StructuredDocumentation","src":"52973:24:19","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"53011:15:19","parameters":{"id":16633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16628,"mutability":"mutable","name":"objectKey","nameLocation":"53043:9:19","nodeType":"VariableDeclaration","scope":16637,"src":"53027:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16627,"name":"string","nodeType":"ElementaryTypeName","src":"53027:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16630,"mutability":"mutable","name":"valueKey","nameLocation":"53070:8:19","nodeType":"VariableDeclaration","scope":16637,"src":"53054:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16629,"name":"string","nodeType":"ElementaryTypeName","src":"53054:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16632,"mutability":"mutable","name":"value","nameLocation":"53096:5:19","nodeType":"VariableDeclaration","scope":16637,"src":"53080:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16631,"name":"string","nodeType":"ElementaryTypeName","src":"53080:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53026:76:19"},"returnParameters":{"id":16636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16635,"mutability":"mutable","name":"json","nameLocation":"53151:4:19","nodeType":"VariableDeclaration","scope":16637,"src":"53137:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16634,"name":"string","nodeType":"ElementaryTypeName","src":"53137:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53136:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16650,"nodeType":"FunctionDefinition","src":"53192:158:19","nodes":[],"documentation":{"id":16638,"nodeType":"StructuredDocumentation","src":"53163:24:19","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"53201:15:19","parameters":{"id":16646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16640,"mutability":"mutable","name":"objectKey","nameLocation":"53233:9:19","nodeType":"VariableDeclaration","scope":16650,"src":"53217:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16639,"name":"string","nodeType":"ElementaryTypeName","src":"53217:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16642,"mutability":"mutable","name":"valueKey","nameLocation":"53260:8:19","nodeType":"VariableDeclaration","scope":16650,"src":"53244:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16641,"name":"string","nodeType":"ElementaryTypeName","src":"53244:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16645,"mutability":"mutable","name":"values","nameLocation":"53288:6:19","nodeType":"VariableDeclaration","scope":16650,"src":"53270:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16643,"name":"string","nodeType":"ElementaryTypeName","src":"53270:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16644,"nodeType":"ArrayTypeName","src":"53270:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"53216:79:19"},"returnParameters":{"id":16649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16648,"mutability":"mutable","name":"json","nameLocation":"53344:4:19","nodeType":"VariableDeclaration","scope":16650,"src":"53330:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16647,"name":"string","nodeType":"ElementaryTypeName","src":"53330:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53329:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16662,"nodeType":"FunctionDefinition","src":"53385:150:19","nodes":[],"documentation":{"id":16651,"nodeType":"StructuredDocumentation","src":"53356:24:19","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"53394:18:19","parameters":{"id":16658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16653,"mutability":"mutable","name":"objectKey","nameLocation":"53429:9:19","nodeType":"VariableDeclaration","scope":16662,"src":"53413:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16652,"name":"string","nodeType":"ElementaryTypeName","src":"53413:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16655,"mutability":"mutable","name":"valueKey","nameLocation":"53456:8:19","nodeType":"VariableDeclaration","scope":16662,"src":"53440:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16654,"name":"string","nodeType":"ElementaryTypeName","src":"53440:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16657,"mutability":"mutable","name":"value","nameLocation":"53474:5:19","nodeType":"VariableDeclaration","scope":16662,"src":"53466:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16656,"name":"uint256","nodeType":"ElementaryTypeName","src":"53466:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53412:68:19"},"returnParameters":{"id":16661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16660,"mutability":"mutable","name":"json","nameLocation":"53529:4:19","nodeType":"VariableDeclaration","scope":16662,"src":"53515:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16659,"name":"string","nodeType":"ElementaryTypeName","src":"53515:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53514:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16674,"nodeType":"FunctionDefinition","src":"53570:145:19","nodes":[],"documentation":{"id":16663,"nodeType":"StructuredDocumentation","src":"53541:24:19","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"53579:13:19","parameters":{"id":16670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16665,"mutability":"mutable","name":"objectKey","nameLocation":"53609:9:19","nodeType":"VariableDeclaration","scope":16674,"src":"53593:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16664,"name":"string","nodeType":"ElementaryTypeName","src":"53593:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16667,"mutability":"mutable","name":"valueKey","nameLocation":"53636:8:19","nodeType":"VariableDeclaration","scope":16674,"src":"53620:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16666,"name":"string","nodeType":"ElementaryTypeName","src":"53620:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16669,"mutability":"mutable","name":"value","nameLocation":"53654:5:19","nodeType":"VariableDeclaration","scope":16674,"src":"53646:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16668,"name":"uint256","nodeType":"ElementaryTypeName","src":"53646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53592:68:19"},"returnParameters":{"id":16673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16672,"mutability":"mutable","name":"json","nameLocation":"53709:4:19","nodeType":"VariableDeclaration","scope":16674,"src":"53695:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16671,"name":"string","nodeType":"ElementaryTypeName","src":"53695:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53694:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16687,"nodeType":"FunctionDefinition","src":"53750:157:19","nodes":[],"documentation":{"id":16675,"nodeType":"StructuredDocumentation","src":"53721:24:19","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"53759:13:19","parameters":{"id":16683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16677,"mutability":"mutable","name":"objectKey","nameLocation":"53789:9:19","nodeType":"VariableDeclaration","scope":16687,"src":"53773:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16676,"name":"string","nodeType":"ElementaryTypeName","src":"53773:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16679,"mutability":"mutable","name":"valueKey","nameLocation":"53816:8:19","nodeType":"VariableDeclaration","scope":16687,"src":"53800:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16678,"name":"string","nodeType":"ElementaryTypeName","src":"53800:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16682,"mutability":"mutable","name":"values","nameLocation":"53845:6:19","nodeType":"VariableDeclaration","scope":16687,"src":"53826:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16680,"name":"uint256","nodeType":"ElementaryTypeName","src":"53826:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16681,"nodeType":"ArrayTypeName","src":"53826:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"53772:80:19"},"returnParameters":{"id":16686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16685,"mutability":"mutable","name":"json","nameLocation":"53901:4:19","nodeType":"VariableDeclaration","scope":16687,"src":"53887:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16684,"name":"string","nodeType":"ElementaryTypeName","src":"53887:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53886:20:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16695,"nodeType":"FunctionDefinition","src":"54007:72:19","nodes":[],"documentation":{"id":16688,"nodeType":"StructuredDocumentation","src":"53913:89:19","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"54016:9:19","parameters":{"id":16693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16690,"mutability":"mutable","name":"json","nameLocation":"54042:4:19","nodeType":"VariableDeclaration","scope":16695,"src":"54026:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16689,"name":"string","nodeType":"ElementaryTypeName","src":"54026:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16692,"mutability":"mutable","name":"path","nameLocation":"54064:4:19","nodeType":"VariableDeclaration","scope":16695,"src":"54048:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16691,"name":"string","nodeType":"ElementaryTypeName","src":"54048:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54025:44:19"},"returnParameters":{"id":16694,"nodeType":"ParameterList","parameters":[],"src":"54078:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16705,"nodeType":"FunctionDefinition","src":"54305:98:19","nodes":[],"documentation":{"id":16696,"nodeType":"StructuredDocumentation","src":"54085:215:19","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"54314:9:19","parameters":{"id":16703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16698,"mutability":"mutable","name":"json","nameLocation":"54340:4:19","nodeType":"VariableDeclaration","scope":16705,"src":"54324:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16697,"name":"string","nodeType":"ElementaryTypeName","src":"54324:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16700,"mutability":"mutable","name":"path","nameLocation":"54362:4:19","nodeType":"VariableDeclaration","scope":16705,"src":"54346:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16699,"name":"string","nodeType":"ElementaryTypeName","src":"54346:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16702,"mutability":"mutable","name":"valueKey","nameLocation":"54384:8:19","nodeType":"VariableDeclaration","scope":16705,"src":"54368:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16701,"name":"string","nodeType":"ElementaryTypeName","src":"54368:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54323:70:19"},"returnParameters":{"id":16704,"nodeType":"ParameterList","parameters":[],"src":"54402:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16715,"nodeType":"FunctionDefinition","src":"54565:91:19","nodes":[],"documentation":{"id":16706,"nodeType":"StructuredDocumentation","src":"54409:151:19","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"54574:9:19","parameters":{"id":16711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16708,"mutability":"mutable","name":"json","nameLocation":"54600:4:19","nodeType":"VariableDeclaration","scope":16715,"src":"54584:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16707,"name":"string","nodeType":"ElementaryTypeName","src":"54584:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16710,"mutability":"mutable","name":"key","nameLocation":"54622:3:19","nodeType":"VariableDeclaration","scope":16715,"src":"54606:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16709,"name":"string","nodeType":"ElementaryTypeName","src":"54606:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54583:43:19"},"returnParameters":{"id":16714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16715,"src":"54650:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16712,"name":"bool","nodeType":"ElementaryTypeName","src":"54650:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"54649:6:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16721,"nodeType":"FunctionDefinition","src":"54747:50:19","nodes":[],"documentation":{"id":16716,"nodeType":"StructuredDocumentation","src":"54698:44:19","text":"Attach an EIP-4844 blob to the next call"},"functionSelector":"10cb385c","implemented":false,"kind":"function","modifiers":[],"name":"attachBlob","nameLocation":"54756:10:19","parameters":{"id":16719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16718,"mutability":"mutable","name":"blob","nameLocation":"54782:4:19","nodeType":"VariableDeclaration","scope":16721,"src":"54767:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16717,"name":"bytes","nodeType":"ElementaryTypeName","src":"54767:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54766:21:19"},"returnParameters":{"id":16720,"nodeType":"ParameterList","parameters":[],"src":"54796:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16728,"nodeType":"FunctionDefinition","src":"54862:79:19","nodes":[],"documentation":{"id":16722,"nodeType":"StructuredDocumentation","src":"54803:54:19","text":"Designate the next call as an EIP-7702 transaction"},"functionSelector":"14ae3519","implemented":false,"kind":"function","modifiers":[],"name":"attachDelegation","nameLocation":"54871:16:19","parameters":{"id":16726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16725,"mutability":"mutable","name":"signedDelegation","nameLocation":"54914:16:19","nodeType":"VariableDeclaration","scope":16728,"src":"54888:42:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_calldata_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":16724,"nodeType":"UserDefinedTypeName","pathNode":{"id":16723,"name":"SignedDelegation","nameLocations":["54888:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":15013,"src":"54888:16:19"},"referencedDeclaration":15013,"src":"54888:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"54887:44:19"},"returnParameters":{"id":16727,"nodeType":"ParameterList","parameters":[],"src":"54940:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16737,"nodeType":"FunctionDefinition","src":"55043:96:19","nodes":[],"documentation":{"id":16729,"nodeType":"StructuredDocumentation","src":"54947:91:19","text":"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"functionSelector":"f4460d34","implemented":false,"kind":"function","modifiers":[],"name":"attachDelegation","nameLocation":"55052:16:19","parameters":{"id":16735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16732,"mutability":"mutable","name":"signedDelegation","nameLocation":"55095:16:19","nodeType":"VariableDeclaration","scope":16737,"src":"55069:42:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_calldata_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":16731,"nodeType":"UserDefinedTypeName","pathNode":{"id":16730,"name":"SignedDelegation","nameLocations":["55069:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":15013,"src":"55069:16:19"},"referencedDeclaration":15013,"src":"55069:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"},{"constant":false,"id":16734,"mutability":"mutable","name":"crossChain","nameLocation":"55118:10:19","nodeType":"VariableDeclaration","scope":16737,"src":"55113:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16733,"name":"bool","nodeType":"ElementaryTypeName","src":"55113:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"55068:61:19"},"returnParameters":{"id":16736,"nodeType":"ParameterList","parameters":[],"src":"55138:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16743,"nodeType":"FunctionDefinition","src":"55214:63:19","nodes":[],"documentation":{"id":16738,"nodeType":"StructuredDocumentation","src":"55145:64:19","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"55223:23:19","parameters":{"id":16741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16740,"mutability":"mutable","name":"data","nameLocation":"55262:4:19","nodeType":"VariableDeclaration","scope":16743,"src":"55247:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16739,"name":"bytes","nodeType":"ElementaryTypeName","src":"55247:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"55246:21:19"},"returnParameters":{"id":16742,"nodeType":"ParameterList","parameters":[],"src":"55276:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16747,"nodeType":"FunctionDefinition","src":"55780:30:19","nodes":[],"documentation":{"id":16744,"nodeType":"StructuredDocumentation","src":"55283:492:19","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"55789:9:19","parameters":{"id":16745,"nodeType":"ParameterList","parameters":[],"src":"55798:2:19"},"returnParameters":{"id":16746,"nodeType":"ParameterList","parameters":[],"src":"55809:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16753,"nodeType":"FunctionDefinition","src":"55980:44:19","nodes":[],"documentation":{"id":16748,"nodeType":"StructuredDocumentation","src":"55816:159:19","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"55989:9:19","parameters":{"id":16751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16750,"mutability":"mutable","name":"signer","nameLocation":"56007:6:19","nodeType":"VariableDeclaration","scope":16753,"src":"55999:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16749,"name":"address","nodeType":"ElementaryTypeName","src":"55999:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"55998:16:19"},"returnParameters":{"id":16752,"nodeType":"ParameterList","parameters":[],"src":"56023:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16759,"nodeType":"FunctionDefinition","src":"56198:48:19","nodes":[],"documentation":{"id":16754,"nodeType":"StructuredDocumentation","src":"56030:163:19","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"56207:9:19","parameters":{"id":16757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16756,"mutability":"mutable","name":"privateKey","nameLocation":"56225:10:19","nodeType":"VariableDeclaration","scope":16759,"src":"56217:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16755,"name":"uint256","nodeType":"ElementaryTypeName","src":"56217:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56216:20:19"},"returnParameters":{"id":16758,"nodeType":"ParameterList","parameters":[],"src":"56245:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16766,"nodeType":"FunctionDefinition","src":"56335:66:19","nodes":[],"documentation":{"id":16760,"nodeType":"StructuredDocumentation","src":"56252:78:19","text":"Returns addresses of available unlocked wallets in the script environment."},"functionSelector":"db7a4605","implemented":false,"kind":"function","modifiers":[],"name":"getWallets","nameLocation":"56344:10:19","parameters":{"id":16761,"nodeType":"ParameterList","parameters":[],"src":"56354:2:19"},"returnParameters":{"id":16765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16764,"mutability":"mutable","name":"wallets","nameLocation":"56392:7:19","nodeType":"VariableDeclaration","scope":16766,"src":"56375:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16762,"name":"address","nodeType":"ElementaryTypeName","src":"56375:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16763,"nodeType":"ArrayTypeName","src":"56375:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"56374:26:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16777,"nodeType":"FunctionDefinition","src":"56501:153:19","nodes":[],"documentation":{"id":16767,"nodeType":"StructuredDocumentation","src":"56407:89:19","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"functionSelector":"c7fa7288","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"56510:23:19","parameters":{"id":16772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16769,"mutability":"mutable","name":"implementation","nameLocation":"56542:14:19","nodeType":"VariableDeclaration","scope":16777,"src":"56534:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16768,"name":"address","nodeType":"ElementaryTypeName","src":"56534:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16771,"mutability":"mutable","name":"privateKey","nameLocation":"56566:10:19","nodeType":"VariableDeclaration","scope":16777,"src":"56558:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16770,"name":"uint256","nodeType":"ElementaryTypeName","src":"56558:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56533:44:19"},"returnParameters":{"id":16776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16775,"mutability":"mutable","name":"signedDelegation","nameLocation":"56636:16:19","nodeType":"VariableDeclaration","scope":16777,"src":"56612:40:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":16774,"nodeType":"UserDefinedTypeName","pathNode":{"id":16773,"name":"SignedDelegation","nameLocations":["56612:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":15013,"src":"56612:16:19"},"referencedDeclaration":15013,"src":"56612:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"56611:42:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16790,"nodeType":"FunctionDefinition","src":"56773:167:19","nodes":[],"documentation":{"id":16778,"nodeType":"StructuredDocumentation","src":"56660:108:19","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce"},"functionSelector":"cde3e5be","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"56782:23:19","parameters":{"id":16785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16780,"mutability":"mutable","name":"implementation","nameLocation":"56814:14:19","nodeType":"VariableDeclaration","scope":16790,"src":"56806:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16779,"name":"address","nodeType":"ElementaryTypeName","src":"56806:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16782,"mutability":"mutable","name":"privateKey","nameLocation":"56838:10:19","nodeType":"VariableDeclaration","scope":16790,"src":"56830:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16781,"name":"uint256","nodeType":"ElementaryTypeName","src":"56830:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16784,"mutability":"mutable","name":"nonce","nameLocation":"56857:5:19","nodeType":"VariableDeclaration","scope":16790,"src":"56850:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16783,"name":"uint64","nodeType":"ElementaryTypeName","src":"56850:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"56805:58:19"},"returnParameters":{"id":16789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16788,"mutability":"mutable","name":"signedDelegation","nameLocation":"56922:16:19","nodeType":"VariableDeclaration","scope":16790,"src":"56898:40:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":16787,"nodeType":"UserDefinedTypeName","pathNode":{"id":16786,"name":"SignedDelegation","nameLocations":["56898:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":15013,"src":"56898:16:19"},"referencedDeclaration":15013,"src":"56898:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"56897:42:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16803,"nodeType":"FunctionDefinition","src":"57077:170:19","nodes":[],"documentation":{"id":16791,"nodeType":"StructuredDocumentation","src":"56946:126:19","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"functionSelector":"d936e146","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"57086:23:19","parameters":{"id":16798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16793,"mutability":"mutable","name":"implementation","nameLocation":"57118:14:19","nodeType":"VariableDeclaration","scope":16803,"src":"57110:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16792,"name":"address","nodeType":"ElementaryTypeName","src":"57110:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16795,"mutability":"mutable","name":"privateKey","nameLocation":"57142:10:19","nodeType":"VariableDeclaration","scope":16803,"src":"57134:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16794,"name":"uint256","nodeType":"ElementaryTypeName","src":"57134:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16797,"mutability":"mutable","name":"crossChain","nameLocation":"57159:10:19","nodeType":"VariableDeclaration","scope":16803,"src":"57154:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16796,"name":"bool","nodeType":"ElementaryTypeName","src":"57154:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"57109:61:19"},"returnParameters":{"id":16802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16801,"mutability":"mutable","name":"signedDelegation","nameLocation":"57229:16:19","nodeType":"VariableDeclaration","scope":16803,"src":"57205:40:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":16800,"nodeType":"UserDefinedTypeName","pathNode":{"id":16799,"name":"SignedDelegation","nameLocations":["57205:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":15013,"src":"57205:16:19"},"referencedDeclaration":15013,"src":"57205:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"57204:42:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16814,"nodeType":"FunctionDefinition","src":"57307:144:19","nodes":[],"documentation":{"id":16804,"nodeType":"StructuredDocumentation","src":"57253:49:19","text":"Sign an EIP-7702 authorization for delegation"},"functionSelector":"5b593c7b","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"57316:14:19","parameters":{"id":16809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16806,"mutability":"mutable","name":"implementation","nameLocation":"57339:14:19","nodeType":"VariableDeclaration","scope":16814,"src":"57331:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16805,"name":"address","nodeType":"ElementaryTypeName","src":"57331:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16808,"mutability":"mutable","name":"privateKey","nameLocation":"57363:10:19","nodeType":"VariableDeclaration","scope":16814,"src":"57355:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16807,"name":"uint256","nodeType":"ElementaryTypeName","src":"57355:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57330:44:19"},"returnParameters":{"id":16813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16812,"mutability":"mutable","name":"signedDelegation","nameLocation":"57433:16:19","nodeType":"VariableDeclaration","scope":16814,"src":"57409:40:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":16811,"nodeType":"UserDefinedTypeName","pathNode":{"id":16810,"name":"SignedDelegation","nameLocations":["57409:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":15013,"src":"57409:16:19"},"referencedDeclaration":15013,"src":"57409:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"57408:42:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16827,"nodeType":"FunctionDefinition","src":"57530:158:19","nodes":[],"documentation":{"id":16815,"nodeType":"StructuredDocumentation","src":"57457:68:19","text":"Sign an EIP-7702 authorization for delegation for specific nonce"},"functionSelector":"ceba2ec3","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"57539:14:19","parameters":{"id":16822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16817,"mutability":"mutable","name":"implementation","nameLocation":"57562:14:19","nodeType":"VariableDeclaration","scope":16827,"src":"57554:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16816,"name":"address","nodeType":"ElementaryTypeName","src":"57554:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16819,"mutability":"mutable","name":"privateKey","nameLocation":"57586:10:19","nodeType":"VariableDeclaration","scope":16827,"src":"57578:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16818,"name":"uint256","nodeType":"ElementaryTypeName","src":"57578:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16821,"mutability":"mutable","name":"nonce","nameLocation":"57605:5:19","nodeType":"VariableDeclaration","scope":16827,"src":"57598:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16820,"name":"uint64","nodeType":"ElementaryTypeName","src":"57598:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"57553:58:19"},"returnParameters":{"id":16826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16825,"mutability":"mutable","name":"signedDelegation","nameLocation":"57670:16:19","nodeType":"VariableDeclaration","scope":16827,"src":"57646:40:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":16824,"nodeType":"UserDefinedTypeName","pathNode":{"id":16823,"name":"SignedDelegation","nameLocations":["57646:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":15013,"src":"57646:16:19"},"referencedDeclaration":15013,"src":"57646:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"57645:42:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16840,"nodeType":"FunctionDefinition","src":"57785:161:19","nodes":[],"documentation":{"id":16828,"nodeType":"StructuredDocumentation","src":"57694:86:19","text":"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity."},"functionSelector":"cdd7563d","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"57794:14:19","parameters":{"id":16835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16830,"mutability":"mutable","name":"implementation","nameLocation":"57817:14:19","nodeType":"VariableDeclaration","scope":16840,"src":"57809:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16829,"name":"address","nodeType":"ElementaryTypeName","src":"57809:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16832,"mutability":"mutable","name":"privateKey","nameLocation":"57841:10:19","nodeType":"VariableDeclaration","scope":16840,"src":"57833:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16831,"name":"uint256","nodeType":"ElementaryTypeName","src":"57833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16834,"mutability":"mutable","name":"crossChain","nameLocation":"57858:10:19","nodeType":"VariableDeclaration","scope":16840,"src":"57853:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16833,"name":"bool","nodeType":"ElementaryTypeName","src":"57853:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"57808:61:19"},"returnParameters":{"id":16839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16838,"mutability":"mutable","name":"signedDelegation","nameLocation":"57928:16:19","nodeType":"VariableDeclaration","scope":16840,"src":"57904:40:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":16837,"nodeType":"UserDefinedTypeName","pathNode":{"id":16836,"name":"SignedDelegation","nameLocations":["57904:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":15013,"src":"57904:16:19"},"referencedDeclaration":15013,"src":"57904:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$15013_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"57903:42:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16844,"nodeType":"FunctionDefinition","src":"58456:35:19","nodes":[],"documentation":{"id":16841,"nodeType":"StructuredDocumentation","src":"57952:499:19","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"58465:14:19","parameters":{"id":16842,"nodeType":"ParameterList","parameters":[],"src":"58479:2:19"},"returnParameters":{"id":16843,"nodeType":"ParameterList","parameters":[],"src":"58490:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16850,"nodeType":"FunctionDefinition","src":"58653:49:19","nodes":[],"documentation":{"id":16845,"nodeType":"StructuredDocumentation","src":"58497:151:19","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"58662:14:19","parameters":{"id":16848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16847,"mutability":"mutable","name":"signer","nameLocation":"58685:6:19","nodeType":"VariableDeclaration","scope":16850,"src":"58677:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16846,"name":"address","nodeType":"ElementaryTypeName","src":"58677:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"58676:16:19"},"returnParameters":{"id":16849,"nodeType":"ParameterList","parameters":[],"src":"58701:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16856,"nodeType":"FunctionDefinition","src":"58868:53:19","nodes":[],"documentation":{"id":16851,"nodeType":"StructuredDocumentation","src":"58708:155:19","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"58877:14:19","parameters":{"id":16854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16853,"mutability":"mutable","name":"privateKey","nameLocation":"58900:10:19","nodeType":"VariableDeclaration","scope":16856,"src":"58892:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16852,"name":"uint256","nodeType":"ElementaryTypeName","src":"58892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58891:20:19"},"returnParameters":{"id":16855,"nodeType":"ParameterList","parameters":[],"src":"58920:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16860,"nodeType":"FunctionDefinition","src":"58974:34:19","nodes":[],"documentation":{"id":16857,"nodeType":"StructuredDocumentation","src":"58927:42:19","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"58983:13:19","parameters":{"id":16858,"nodeType":"ParameterList","parameters":[],"src":"58996:2:19"},"returnParameters":{"id":16859,"nodeType":"ParameterList","parameters":[],"src":"59007:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16870,"nodeType":"FunctionDefinition","src":"59120:98:19","nodes":[],"documentation":{"id":16861,"nodeType":"StructuredDocumentation","src":"59047:68:19","text":"Returns true if `search` is found in `subject`, false otherwise."},"functionSelector":"3fb18aec","implemented":false,"kind":"function","modifiers":[],"name":"contains","nameLocation":"59129:8:19","parameters":{"id":16866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16863,"mutability":"mutable","name":"subject","nameLocation":"59154:7:19","nodeType":"VariableDeclaration","scope":16870,"src":"59138:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16862,"name":"string","nodeType":"ElementaryTypeName","src":"59138:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16865,"mutability":"mutable","name":"search","nameLocation":"59179:6:19","nodeType":"VariableDeclaration","scope":16870,"src":"59163:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16864,"name":"string","nodeType":"ElementaryTypeName","src":"59163:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59137:49:19"},"returnParameters":{"id":16869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16868,"mutability":"mutable","name":"result","nameLocation":"59210:6:19","nodeType":"VariableDeclaration","scope":16870,"src":"59205:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16867,"name":"bool","nodeType":"ElementaryTypeName","src":"59205:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"59204:13:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16880,"nodeType":"FunctionDefinition","src":"59434:93:19","nodes":[],"documentation":{"id":16871,"nodeType":"StructuredDocumentation","src":"59224:205:19","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"59443:7:19","parameters":{"id":16876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16873,"mutability":"mutable","name":"input","nameLocation":"59467:5:19","nodeType":"VariableDeclaration","scope":16880,"src":"59451:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16872,"name":"string","nodeType":"ElementaryTypeName","src":"59451:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16875,"mutability":"mutable","name":"key","nameLocation":"59490:3:19","nodeType":"VariableDeclaration","scope":16880,"src":"59474:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16874,"name":"string","nodeType":"ElementaryTypeName","src":"59474:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59450:44:19"},"returnParameters":{"id":16879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16880,"src":"59518:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16877,"name":"uint256","nodeType":"ElementaryTypeName","src":"59518:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59517:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16888,"nodeType":"FunctionDefinition","src":"59586:100:19","nodes":[],"documentation":{"id":16881,"nodeType":"StructuredDocumentation","src":"59533:48:19","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"59595:12:19","parameters":{"id":16884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16883,"mutability":"mutable","name":"stringifiedValue","nameLocation":"59624:16:19","nodeType":"VariableDeclaration","scope":16888,"src":"59608:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16882,"name":"string","nodeType":"ElementaryTypeName","src":"59608:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59607:34:19"},"returnParameters":{"id":16887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16886,"mutability":"mutable","name":"parsedValue","nameLocation":"59673:11:19","nodeType":"VariableDeclaration","scope":16888,"src":"59665:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16885,"name":"address","nodeType":"ElementaryTypeName","src":"59665:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"59664:21:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16896,"nodeType":"FunctionDefinition","src":"59741:94:19","nodes":[],"documentation":{"id":16889,"nodeType":"StructuredDocumentation","src":"59692:44:19","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"59750:9:19","parameters":{"id":16892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16891,"mutability":"mutable","name":"stringifiedValue","nameLocation":"59776:16:19","nodeType":"VariableDeclaration","scope":16896,"src":"59760:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16890,"name":"string","nodeType":"ElementaryTypeName","src":"59760:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59759:34:19"},"returnParameters":{"id":16895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16894,"mutability":"mutable","name":"parsedValue","nameLocation":"59822:11:19","nodeType":"VariableDeclaration","scope":16896,"src":"59817:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16893,"name":"bool","nodeType":"ElementaryTypeName","src":"59817:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"59816:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16904,"nodeType":"FunctionDefinition","src":"59889:103:19","nodes":[],"documentation":{"id":16897,"nodeType":"StructuredDocumentation","src":"59841:43:19","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"59898:10:19","parameters":{"id":16900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16899,"mutability":"mutable","name":"stringifiedValue","nameLocation":"59925:16:19","nodeType":"VariableDeclaration","scope":16904,"src":"59909:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16898,"name":"string","nodeType":"ElementaryTypeName","src":"59909:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59908:34:19"},"returnParameters":{"id":16903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16902,"mutability":"mutable","name":"parsedValue","nameLocation":"59979:11:19","nodeType":"VariableDeclaration","scope":16904,"src":"59966:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16901,"name":"bytes","nodeType":"ElementaryTypeName","src":"59966:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"59965:26:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16912,"nodeType":"FunctionDefinition","src":"60050:100:19","nodes":[],"documentation":{"id":16905,"nodeType":"StructuredDocumentation","src":"59998:47:19","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"60059:12:19","parameters":{"id":16908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16907,"mutability":"mutable","name":"stringifiedValue","nameLocation":"60088:16:19","nodeType":"VariableDeclaration","scope":16912,"src":"60072:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16906,"name":"string","nodeType":"ElementaryTypeName","src":"60072:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60071:34:19"},"returnParameters":{"id":16911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16910,"mutability":"mutable","name":"parsedValue","nameLocation":"60137:11:19","nodeType":"VariableDeclaration","scope":16912,"src":"60129:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60129:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"60128:21:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16920,"nodeType":"FunctionDefinition","src":"60207:95:19","nodes":[],"documentation":{"id":16913,"nodeType":"StructuredDocumentation","src":"60156:46:19","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"60216:8:19","parameters":{"id":16916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16915,"mutability":"mutable","name":"stringifiedValue","nameLocation":"60241:16:19","nodeType":"VariableDeclaration","scope":16920,"src":"60225:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16914,"name":"string","nodeType":"ElementaryTypeName","src":"60225:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60224:34:19"},"returnParameters":{"id":16919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16918,"mutability":"mutable","name":"parsedValue","nameLocation":"60289:11:19","nodeType":"VariableDeclaration","scope":16920,"src":"60282:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16917,"name":"int256","nodeType":"ElementaryTypeName","src":"60282:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60281:20:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16928,"nodeType":"FunctionDefinition","src":"60360:97:19","nodes":[],"documentation":{"id":16921,"nodeType":"StructuredDocumentation","src":"60308:47:19","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"60369:9:19","parameters":{"id":16924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16923,"mutability":"mutable","name":"stringifiedValue","nameLocation":"60395:16:19","nodeType":"VariableDeclaration","scope":16928,"src":"60379:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16922,"name":"string","nodeType":"ElementaryTypeName","src":"60379:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60378:34:19"},"returnParameters":{"id":16927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16926,"mutability":"mutable","name":"parsedValue","nameLocation":"60444:11:19","nodeType":"VariableDeclaration","scope":16928,"src":"60436:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16925,"name":"uint256","nodeType":"ElementaryTypeName","src":"60436:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60435:21:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16940,"nodeType":"FunctionDefinition","src":"60535:151:19","nodes":[],"documentation":{"id":16929,"nodeType":"StructuredDocumentation","src":"60463:67:19","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"60544:7:19","parameters":{"id":16936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16931,"mutability":"mutable","name":"input","nameLocation":"60568:5:19","nodeType":"VariableDeclaration","scope":16940,"src":"60552:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16930,"name":"string","nodeType":"ElementaryTypeName","src":"60552:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16933,"mutability":"mutable","name":"from","nameLocation":"60591:4:19","nodeType":"VariableDeclaration","scope":16940,"src":"60575:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16932,"name":"string","nodeType":"ElementaryTypeName","src":"60575:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16935,"mutability":"mutable","name":"to","nameLocation":"60613:2:19","nodeType":"VariableDeclaration","scope":16940,"src":"60597:18:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16934,"name":"string","nodeType":"ElementaryTypeName","src":"60597:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60551:65:19"},"returnParameters":{"id":16939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16938,"mutability":"mutable","name":"output","nameLocation":"60678:6:19","nodeType":"VariableDeclaration","scope":16940,"src":"60664:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16937,"name":"string","nodeType":"ElementaryTypeName","src":"60664:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60663:22:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16951,"nodeType":"FunctionDefinition","src":"60779:113:19","nodes":[],"documentation":{"id":16941,"nodeType":"StructuredDocumentation","src":"60692:82:19","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"60788:5:19","parameters":{"id":16946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16943,"mutability":"mutable","name":"input","nameLocation":"60810:5:19","nodeType":"VariableDeclaration","scope":16951,"src":"60794:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16942,"name":"string","nodeType":"ElementaryTypeName","src":"60794:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16945,"mutability":"mutable","name":"delimiter","nameLocation":"60833:9:19","nodeType":"VariableDeclaration","scope":16951,"src":"60817:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16944,"name":"string","nodeType":"ElementaryTypeName","src":"60817:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60793:50:19"},"returnParameters":{"id":16950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16949,"mutability":"mutable","name":"outputs","nameLocation":"60883:7:19","nodeType":"VariableDeclaration","scope":16951,"src":"60867:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16947,"name":"string","nodeType":"ElementaryTypeName","src":"60867:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16948,"nodeType":"ArrayTypeName","src":"60867:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"60866:25:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16959,"nodeType":"FunctionDefinition","src":"60954:89:19","nodes":[],"documentation":{"id":16952,"nodeType":"StructuredDocumentation","src":"60898:51:19","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"60963:11:19","parameters":{"id":16955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16954,"mutability":"mutable","name":"input","nameLocation":"60991:5:19","nodeType":"VariableDeclaration","scope":16959,"src":"60975:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16953,"name":"string","nodeType":"ElementaryTypeName","src":"60975:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60974:23:19"},"returnParameters":{"id":16958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16957,"mutability":"mutable","name":"output","nameLocation":"61035:6:19","nodeType":"VariableDeclaration","scope":16959,"src":"61021:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16956,"name":"string","nodeType":"ElementaryTypeName","src":"61021:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61020:22:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16967,"nodeType":"FunctionDefinition","src":"61097:88:19","nodes":[],"documentation":{"id":16960,"nodeType":"StructuredDocumentation","src":"61049:43:19","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"61106:8:19","parameters":{"id":16963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16962,"mutability":"mutable","name":"value","nameLocation":"61123:5:19","nodeType":"VariableDeclaration","scope":16967,"src":"61115:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16961,"name":"address","nodeType":"ElementaryTypeName","src":"61115:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"61114:15:19"},"returnParameters":{"id":16966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16965,"mutability":"mutable","name":"stringifiedValue","nameLocation":"61167:16:19","nodeType":"VariableDeclaration","scope":16967,"src":"61153:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16964,"name":"string","nodeType":"ElementaryTypeName","src":"61153:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61152:32:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16975,"nodeType":"FunctionDefinition","src":"61239:95:19","nodes":[],"documentation":{"id":16968,"nodeType":"StructuredDocumentation","src":"61191:43:19","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"61248:8:19","parameters":{"id":16971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16970,"mutability":"mutable","name":"value","nameLocation":"61272:5:19","nodeType":"VariableDeclaration","scope":16975,"src":"61257:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16969,"name":"bytes","nodeType":"ElementaryTypeName","src":"61257:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"61256:22:19"},"returnParameters":{"id":16974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16973,"mutability":"mutable","name":"stringifiedValue","nameLocation":"61316:16:19","nodeType":"VariableDeclaration","scope":16975,"src":"61302:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16972,"name":"string","nodeType":"ElementaryTypeName","src":"61302:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61301:32:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16983,"nodeType":"FunctionDefinition","src":"61388:88:19","nodes":[],"documentation":{"id":16976,"nodeType":"StructuredDocumentation","src":"61340:43:19","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"61397:8:19","parameters":{"id":16979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16978,"mutability":"mutable","name":"value","nameLocation":"61414:5:19","nodeType":"VariableDeclaration","scope":16983,"src":"61406:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"61406:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"61405:15:19"},"returnParameters":{"id":16982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16981,"mutability":"mutable","name":"stringifiedValue","nameLocation":"61458:16:19","nodeType":"VariableDeclaration","scope":16983,"src":"61444:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16980,"name":"string","nodeType":"ElementaryTypeName","src":"61444:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61443:32:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16991,"nodeType":"FunctionDefinition","src":"61530:85:19","nodes":[],"documentation":{"id":16984,"nodeType":"StructuredDocumentation","src":"61482:43:19","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"61539:8:19","parameters":{"id":16987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16986,"mutability":"mutable","name":"value","nameLocation":"61553:5:19","nodeType":"VariableDeclaration","scope":16991,"src":"61548:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16985,"name":"bool","nodeType":"ElementaryTypeName","src":"61548:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"61547:12:19"},"returnParameters":{"id":16990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16989,"mutability":"mutable","name":"stringifiedValue","nameLocation":"61597:16:19","nodeType":"VariableDeclaration","scope":16991,"src":"61583:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16988,"name":"string","nodeType":"ElementaryTypeName","src":"61583:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61582:32:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16999,"nodeType":"FunctionDefinition","src":"61669:88:19","nodes":[],"documentation":{"id":16992,"nodeType":"StructuredDocumentation","src":"61621:43:19","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"61678:8:19","parameters":{"id":16995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16994,"mutability":"mutable","name":"value","nameLocation":"61695:5:19","nodeType":"VariableDeclaration","scope":16999,"src":"61687:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16993,"name":"uint256","nodeType":"ElementaryTypeName","src":"61687:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61686:15:19"},"returnParameters":{"id":16998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16997,"mutability":"mutable","name":"stringifiedValue","nameLocation":"61739:16:19","nodeType":"VariableDeclaration","scope":16999,"src":"61725:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16996,"name":"string","nodeType":"ElementaryTypeName","src":"61725:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61724:32:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17007,"nodeType":"FunctionDefinition","src":"61811:87:19","nodes":[],"documentation":{"id":17000,"nodeType":"StructuredDocumentation","src":"61763:43:19","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"61820:8:19","parameters":{"id":17003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17002,"mutability":"mutable","name":"value","nameLocation":"61836:5:19","nodeType":"VariableDeclaration","scope":17007,"src":"61829:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17001,"name":"int256","nodeType":"ElementaryTypeName","src":"61829:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"61828:14:19"},"returnParameters":{"id":17006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17005,"mutability":"mutable","name":"stringifiedValue","nameLocation":"61880:16:19","nodeType":"VariableDeclaration","scope":17007,"src":"61866:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17004,"name":"string","nodeType":"ElementaryTypeName","src":"61866:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61865:32:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17015,"nodeType":"FunctionDefinition","src":"61960:89:19","nodes":[],"documentation":{"id":17008,"nodeType":"StructuredDocumentation","src":"61904:51:19","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"61969:11:19","parameters":{"id":17011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17010,"mutability":"mutable","name":"input","nameLocation":"61997:5:19","nodeType":"VariableDeclaration","scope":17015,"src":"61981:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17009,"name":"string","nodeType":"ElementaryTypeName","src":"61981:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61980:23:19"},"returnParameters":{"id":17014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17013,"mutability":"mutable","name":"output","nameLocation":"62041:6:19","nodeType":"VariableDeclaration","scope":17015,"src":"62027:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17012,"name":"string","nodeType":"ElementaryTypeName","src":"62027:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62026:22:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17023,"nodeType":"FunctionDefinition","src":"62132:82:19","nodes":[],"documentation":{"id":17016,"nodeType":"StructuredDocumentation","src":"62055:72:19","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"62141:4:19","parameters":{"id":17019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17018,"mutability":"mutable","name":"input","nameLocation":"62162:5:19","nodeType":"VariableDeclaration","scope":17023,"src":"62146:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17017,"name":"string","nodeType":"ElementaryTypeName","src":"62146:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62145:23:19"},"returnParameters":{"id":17022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17021,"mutability":"mutable","name":"output","nameLocation":"62206:6:19","nodeType":"VariableDeclaration","scope":17023,"src":"62192:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17020,"name":"string","nodeType":"ElementaryTypeName","src":"62192:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62191:22:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17035,"nodeType":"FunctionDefinition","src":"62409:113:19","nodes":[],"documentation":{"id":17024,"nodeType":"StructuredDocumentation","src":"62254:150:19","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"62418:24:19","parameters":{"id":17033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17026,"mutability":"mutable","name":"left","nameLocation":"62451:4:19","nodeType":"VariableDeclaration","scope":17035,"src":"62443:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17025,"name":"uint256","nodeType":"ElementaryTypeName","src":"62443:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17028,"mutability":"mutable","name":"right","nameLocation":"62465:5:19","nodeType":"VariableDeclaration","scope":17035,"src":"62457:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17027,"name":"uint256","nodeType":"ElementaryTypeName","src":"62457:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17030,"mutability":"mutable","name":"maxDelta","nameLocation":"62480:8:19","nodeType":"VariableDeclaration","scope":17035,"src":"62472:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17029,"name":"uint256","nodeType":"ElementaryTypeName","src":"62472:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17032,"mutability":"mutable","name":"decimals","nameLocation":"62498:8:19","nodeType":"VariableDeclaration","scope":17035,"src":"62490:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17031,"name":"uint256","nodeType":"ElementaryTypeName","src":"62490:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62442:65:19"},"returnParameters":{"id":17034,"nodeType":"ParameterList","parameters":[],"src":"62521:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17049,"nodeType":"FunctionDefinition","src":"62737:182:19","nodes":[],"documentation":{"id":17036,"nodeType":"StructuredDocumentation","src":"62528:204:19","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"62746:24:19","parameters":{"id":17047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17038,"mutability":"mutable","name":"left","nameLocation":"62788:4:19","nodeType":"VariableDeclaration","scope":17049,"src":"62780:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17037,"name":"uint256","nodeType":"ElementaryTypeName","src":"62780:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17040,"mutability":"mutable","name":"right","nameLocation":"62810:5:19","nodeType":"VariableDeclaration","scope":17049,"src":"62802:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17039,"name":"uint256","nodeType":"ElementaryTypeName","src":"62802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17042,"mutability":"mutable","name":"maxDelta","nameLocation":"62833:8:19","nodeType":"VariableDeclaration","scope":17049,"src":"62825:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17041,"name":"uint256","nodeType":"ElementaryTypeName","src":"62825:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17044,"mutability":"mutable","name":"decimals","nameLocation":"62859:8:19","nodeType":"VariableDeclaration","scope":17049,"src":"62851:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17043,"name":"uint256","nodeType":"ElementaryTypeName","src":"62851:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17046,"mutability":"mutable","name":"error","nameLocation":"62893:5:19","nodeType":"VariableDeclaration","scope":17049,"src":"62877:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17045,"name":"string","nodeType":"ElementaryTypeName","src":"62877:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62770:134:19"},"returnParameters":{"id":17048,"nodeType":"ParameterList","parameters":[],"src":"62918:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17061,"nodeType":"FunctionDefinition","src":"63079:111:19","nodes":[],"documentation":{"id":17050,"nodeType":"StructuredDocumentation","src":"62925:149:19","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"63088:24:19","parameters":{"id":17059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17052,"mutability":"mutable","name":"left","nameLocation":"63120:4:19","nodeType":"VariableDeclaration","scope":17061,"src":"63113:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17051,"name":"int256","nodeType":"ElementaryTypeName","src":"63113:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17054,"mutability":"mutable","name":"right","nameLocation":"63133:5:19","nodeType":"VariableDeclaration","scope":17061,"src":"63126:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17053,"name":"int256","nodeType":"ElementaryTypeName","src":"63126:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17056,"mutability":"mutable","name":"maxDelta","nameLocation":"63148:8:19","nodeType":"VariableDeclaration","scope":17061,"src":"63140:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17055,"name":"uint256","nodeType":"ElementaryTypeName","src":"63140:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17058,"mutability":"mutable","name":"decimals","nameLocation":"63166:8:19","nodeType":"VariableDeclaration","scope":17061,"src":"63158:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17057,"name":"uint256","nodeType":"ElementaryTypeName","src":"63158:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63112:63:19"},"returnParameters":{"id":17060,"nodeType":"ParameterList","parameters":[],"src":"63189:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17075,"nodeType":"FunctionDefinition","src":"63404:180:19","nodes":[],"documentation":{"id":17062,"nodeType":"StructuredDocumentation","src":"63196:203:19","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"63413:24:19","parameters":{"id":17073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17064,"mutability":"mutable","name":"left","nameLocation":"63454:4:19","nodeType":"VariableDeclaration","scope":17075,"src":"63447:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17063,"name":"int256","nodeType":"ElementaryTypeName","src":"63447:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17066,"mutability":"mutable","name":"right","nameLocation":"63475:5:19","nodeType":"VariableDeclaration","scope":17075,"src":"63468:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17065,"name":"int256","nodeType":"ElementaryTypeName","src":"63468:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17068,"mutability":"mutable","name":"maxDelta","nameLocation":"63498:8:19","nodeType":"VariableDeclaration","scope":17075,"src":"63490:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17067,"name":"uint256","nodeType":"ElementaryTypeName","src":"63490:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17070,"mutability":"mutable","name":"decimals","nameLocation":"63524:8:19","nodeType":"VariableDeclaration","scope":17075,"src":"63516:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17069,"name":"uint256","nodeType":"ElementaryTypeName","src":"63516:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17072,"mutability":"mutable","name":"error","nameLocation":"63558:5:19","nodeType":"VariableDeclaration","scope":17075,"src":"63542:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17071,"name":"string","nodeType":"ElementaryTypeName","src":"63542:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63437:132:19"},"returnParameters":{"id":17074,"nodeType":"ParameterList","parameters":[],"src":"63583:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17085,"nodeType":"FunctionDefinition","src":"63688:88:19","nodes":[],"documentation":{"id":17076,"nodeType":"StructuredDocumentation","src":"63590:93:19","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"63697:17:19","parameters":{"id":17083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17078,"mutability":"mutable","name":"left","nameLocation":"63723:4:19","nodeType":"VariableDeclaration","scope":17085,"src":"63715:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17077,"name":"uint256","nodeType":"ElementaryTypeName","src":"63715:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17080,"mutability":"mutable","name":"right","nameLocation":"63737:5:19","nodeType":"VariableDeclaration","scope":17085,"src":"63729:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17079,"name":"uint256","nodeType":"ElementaryTypeName","src":"63729:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17082,"mutability":"mutable","name":"maxDelta","nameLocation":"63752:8:19","nodeType":"VariableDeclaration","scope":17085,"src":"63744:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17081,"name":"uint256","nodeType":"ElementaryTypeName","src":"63744:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63714:47:19"},"returnParameters":{"id":17084,"nodeType":"ParameterList","parameters":[],"src":"63775:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17097,"nodeType":"FunctionDefinition","src":"63942:111:19","nodes":[],"documentation":{"id":17086,"nodeType":"StructuredDocumentation","src":"63782:155:19","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"63951:17:19","parameters":{"id":17095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17088,"mutability":"mutable","name":"left","nameLocation":"63977:4:19","nodeType":"VariableDeclaration","scope":17097,"src":"63969:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17087,"name":"uint256","nodeType":"ElementaryTypeName","src":"63969:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17090,"mutability":"mutable","name":"right","nameLocation":"63991:5:19","nodeType":"VariableDeclaration","scope":17097,"src":"63983:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17089,"name":"uint256","nodeType":"ElementaryTypeName","src":"63983:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17092,"mutability":"mutable","name":"maxDelta","nameLocation":"64006:8:19","nodeType":"VariableDeclaration","scope":17097,"src":"63998:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17091,"name":"uint256","nodeType":"ElementaryTypeName","src":"63998:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17094,"mutability":"mutable","name":"error","nameLocation":"64032:5:19","nodeType":"VariableDeclaration","scope":17097,"src":"64016:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17093,"name":"string","nodeType":"ElementaryTypeName","src":"64016:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63968:70:19"},"returnParameters":{"id":17096,"nodeType":"ParameterList","parameters":[],"src":"64052:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17107,"nodeType":"FunctionDefinition","src":"64156:86:19","nodes":[],"documentation":{"id":17098,"nodeType":"StructuredDocumentation","src":"64059:92:19","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"64165:17:19","parameters":{"id":17105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17100,"mutability":"mutable","name":"left","nameLocation":"64190:4:19","nodeType":"VariableDeclaration","scope":17107,"src":"64183:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17099,"name":"int256","nodeType":"ElementaryTypeName","src":"64183:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17102,"mutability":"mutable","name":"right","nameLocation":"64203:5:19","nodeType":"VariableDeclaration","scope":17107,"src":"64196:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17101,"name":"int256","nodeType":"ElementaryTypeName","src":"64196:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17104,"mutability":"mutable","name":"maxDelta","nameLocation":"64218:8:19","nodeType":"VariableDeclaration","scope":17107,"src":"64210:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17103,"name":"uint256","nodeType":"ElementaryTypeName","src":"64210:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64182:45:19"},"returnParameters":{"id":17106,"nodeType":"ParameterList","parameters":[],"src":"64241:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17119,"nodeType":"FunctionDefinition","src":"64407:109:19","nodes":[],"documentation":{"id":17108,"nodeType":"StructuredDocumentation","src":"64248:154:19","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"64416:17:19","parameters":{"id":17117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17110,"mutability":"mutable","name":"left","nameLocation":"64441:4:19","nodeType":"VariableDeclaration","scope":17119,"src":"64434:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17109,"name":"int256","nodeType":"ElementaryTypeName","src":"64434:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17112,"mutability":"mutable","name":"right","nameLocation":"64454:5:19","nodeType":"VariableDeclaration","scope":17119,"src":"64447:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17111,"name":"int256","nodeType":"ElementaryTypeName","src":"64447:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17114,"mutability":"mutable","name":"maxDelta","nameLocation":"64469:8:19","nodeType":"VariableDeclaration","scope":17119,"src":"64461:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17113,"name":"uint256","nodeType":"ElementaryTypeName","src":"64461:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17116,"mutability":"mutable","name":"error","nameLocation":"64495:5:19","nodeType":"VariableDeclaration","scope":17119,"src":"64479:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17115,"name":"string","nodeType":"ElementaryTypeName","src":"64479:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64433:68:19"},"returnParameters":{"id":17118,"nodeType":"ParameterList","parameters":[],"src":"64515:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17131,"nodeType":"FunctionDefinition","src":"64787:136:19","nodes":[],"documentation":{"id":17120,"nodeType":"StructuredDocumentation","src":"64522:260:19","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"64796:24:19","parameters":{"id":17129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17122,"mutability":"mutable","name":"left","nameLocation":"64829:4:19","nodeType":"VariableDeclaration","scope":17131,"src":"64821:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17121,"name":"uint256","nodeType":"ElementaryTypeName","src":"64821:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17124,"mutability":"mutable","name":"right","nameLocation":"64843:5:19","nodeType":"VariableDeclaration","scope":17131,"src":"64835:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17123,"name":"uint256","nodeType":"ElementaryTypeName","src":"64835:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17126,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"64858:15:19","nodeType":"VariableDeclaration","scope":17131,"src":"64850:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17125,"name":"uint256","nodeType":"ElementaryTypeName","src":"64850:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17128,"mutability":"mutable","name":"decimals","nameLocation":"64883:8:19","nodeType":"VariableDeclaration","scope":17131,"src":"64875:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17127,"name":"uint256","nodeType":"ElementaryTypeName","src":"64875:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64820:72:19"},"returnParameters":{"id":17130,"nodeType":"ParameterList","parameters":[],"src":"64922:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17145,"nodeType":"FunctionDefinition","src":"65248:189:19","nodes":[],"documentation":{"id":17132,"nodeType":"StructuredDocumentation","src":"64929:314:19","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"65257:24:19","parameters":{"id":17143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17134,"mutability":"mutable","name":"left","nameLocation":"65299:4:19","nodeType":"VariableDeclaration","scope":17145,"src":"65291:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17133,"name":"uint256","nodeType":"ElementaryTypeName","src":"65291:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17136,"mutability":"mutable","name":"right","nameLocation":"65321:5:19","nodeType":"VariableDeclaration","scope":17145,"src":"65313:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17135,"name":"uint256","nodeType":"ElementaryTypeName","src":"65313:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17138,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"65344:15:19","nodeType":"VariableDeclaration","scope":17145,"src":"65336:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17137,"name":"uint256","nodeType":"ElementaryTypeName","src":"65336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17140,"mutability":"mutable","name":"decimals","nameLocation":"65377:8:19","nodeType":"VariableDeclaration","scope":17145,"src":"65369:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17139,"name":"uint256","nodeType":"ElementaryTypeName","src":"65369:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17142,"mutability":"mutable","name":"error","nameLocation":"65411:5:19","nodeType":"VariableDeclaration","scope":17145,"src":"65395:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17141,"name":"string","nodeType":"ElementaryTypeName","src":"65395:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65281:141:19"},"returnParameters":{"id":17144,"nodeType":"ParameterList","parameters":[],"src":"65436:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17157,"nodeType":"FunctionDefinition","src":"65707:134:19","nodes":[],"documentation":{"id":17146,"nodeType":"StructuredDocumentation","src":"65443:259:19","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"65716:24:19","parameters":{"id":17155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17148,"mutability":"mutable","name":"left","nameLocation":"65748:4:19","nodeType":"VariableDeclaration","scope":17157,"src":"65741:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17147,"name":"int256","nodeType":"ElementaryTypeName","src":"65741:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17150,"mutability":"mutable","name":"right","nameLocation":"65761:5:19","nodeType":"VariableDeclaration","scope":17157,"src":"65754:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17149,"name":"int256","nodeType":"ElementaryTypeName","src":"65754:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17152,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"65776:15:19","nodeType":"VariableDeclaration","scope":17157,"src":"65768:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17151,"name":"uint256","nodeType":"ElementaryTypeName","src":"65768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17154,"mutability":"mutable","name":"decimals","nameLocation":"65801:8:19","nodeType":"VariableDeclaration","scope":17157,"src":"65793:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17153,"name":"uint256","nodeType":"ElementaryTypeName","src":"65793:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65740:70:19"},"returnParameters":{"id":17156,"nodeType":"ParameterList","parameters":[],"src":"65840:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17171,"nodeType":"FunctionDefinition","src":"66165:187:19","nodes":[],"documentation":{"id":17158,"nodeType":"StructuredDocumentation","src":"65847:313:19","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"66174:24:19","parameters":{"id":17169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17160,"mutability":"mutable","name":"left","nameLocation":"66215:4:19","nodeType":"VariableDeclaration","scope":17171,"src":"66208:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17159,"name":"int256","nodeType":"ElementaryTypeName","src":"66208:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17162,"mutability":"mutable","name":"right","nameLocation":"66236:5:19","nodeType":"VariableDeclaration","scope":17171,"src":"66229:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17161,"name":"int256","nodeType":"ElementaryTypeName","src":"66229:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17164,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"66259:15:19","nodeType":"VariableDeclaration","scope":17171,"src":"66251:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17163,"name":"uint256","nodeType":"ElementaryTypeName","src":"66251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17166,"mutability":"mutable","name":"decimals","nameLocation":"66292:8:19","nodeType":"VariableDeclaration","scope":17171,"src":"66284:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17165,"name":"uint256","nodeType":"ElementaryTypeName","src":"66284:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17168,"mutability":"mutable","name":"error","nameLocation":"66326:5:19","nodeType":"VariableDeclaration","scope":17171,"src":"66310:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17167,"name":"string","nodeType":"ElementaryTypeName","src":"66310:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66198:139:19"},"returnParameters":{"id":17170,"nodeType":"ParameterList","parameters":[],"src":"66351:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17181,"nodeType":"FunctionDefinition","src":"66566:95:19","nodes":[],"documentation":{"id":17172,"nodeType":"StructuredDocumentation","src":"66358:203:19","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"66575:17:19","parameters":{"id":17179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17174,"mutability":"mutable","name":"left","nameLocation":"66601:4:19","nodeType":"VariableDeclaration","scope":17181,"src":"66593:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17173,"name":"uint256","nodeType":"ElementaryTypeName","src":"66593:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17176,"mutability":"mutable","name":"right","nameLocation":"66615:5:19","nodeType":"VariableDeclaration","scope":17181,"src":"66607:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17175,"name":"uint256","nodeType":"ElementaryTypeName","src":"66607:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17178,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"66630:15:19","nodeType":"VariableDeclaration","scope":17181,"src":"66622:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17177,"name":"uint256","nodeType":"ElementaryTypeName","src":"66622:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66592:54:19"},"returnParameters":{"id":17180,"nodeType":"ParameterList","parameters":[],"src":"66660:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17193,"nodeType":"FunctionDefinition","src":"66937:134:19","nodes":[],"documentation":{"id":17182,"nodeType":"StructuredDocumentation","src":"66667:265:19","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"66946:17:19","parameters":{"id":17191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17184,"mutability":"mutable","name":"left","nameLocation":"66972:4:19","nodeType":"VariableDeclaration","scope":17193,"src":"66964:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17183,"name":"uint256","nodeType":"ElementaryTypeName","src":"66964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17186,"mutability":"mutable","name":"right","nameLocation":"66986:5:19","nodeType":"VariableDeclaration","scope":17193,"src":"66978:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17185,"name":"uint256","nodeType":"ElementaryTypeName","src":"66978:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17188,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"67001:15:19","nodeType":"VariableDeclaration","scope":17193,"src":"66993:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17187,"name":"uint256","nodeType":"ElementaryTypeName","src":"66993:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17190,"mutability":"mutable","name":"error","nameLocation":"67034:5:19","nodeType":"VariableDeclaration","scope":17193,"src":"67018:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17189,"name":"string","nodeType":"ElementaryTypeName","src":"67018:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66963:77:19"},"returnParameters":{"id":17192,"nodeType":"ParameterList","parameters":[],"src":"67070:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17203,"nodeType":"FunctionDefinition","src":"67284:93:19","nodes":[],"documentation":{"id":17194,"nodeType":"StructuredDocumentation","src":"67077:202:19","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"67293:17:19","parameters":{"id":17201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17196,"mutability":"mutable","name":"left","nameLocation":"67318:4:19","nodeType":"VariableDeclaration","scope":17203,"src":"67311:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17195,"name":"int256","nodeType":"ElementaryTypeName","src":"67311:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17198,"mutability":"mutable","name":"right","nameLocation":"67331:5:19","nodeType":"VariableDeclaration","scope":17203,"src":"67324:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17197,"name":"int256","nodeType":"ElementaryTypeName","src":"67324:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17200,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"67346:15:19","nodeType":"VariableDeclaration","scope":17203,"src":"67338:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17199,"name":"uint256","nodeType":"ElementaryTypeName","src":"67338:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67310:52:19"},"returnParameters":{"id":17202,"nodeType":"ParameterList","parameters":[],"src":"67376:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17215,"nodeType":"FunctionDefinition","src":"67652:132:19","nodes":[],"documentation":{"id":17204,"nodeType":"StructuredDocumentation","src":"67383:264:19","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"67661:17:19","parameters":{"id":17213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17206,"mutability":"mutable","name":"left","nameLocation":"67686:4:19","nodeType":"VariableDeclaration","scope":17215,"src":"67679:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17205,"name":"int256","nodeType":"ElementaryTypeName","src":"67679:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17208,"mutability":"mutable","name":"right","nameLocation":"67699:5:19","nodeType":"VariableDeclaration","scope":17215,"src":"67692:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17207,"name":"int256","nodeType":"ElementaryTypeName","src":"67692:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17210,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"67714:15:19","nodeType":"VariableDeclaration","scope":17215,"src":"67706:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17209,"name":"uint256","nodeType":"ElementaryTypeName","src":"67706:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17212,"mutability":"mutable","name":"error","nameLocation":"67747:5:19","nodeType":"VariableDeclaration","scope":17215,"src":"67731:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17211,"name":"string","nodeType":"ElementaryTypeName","src":"67731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67678:75:19"},"returnParameters":{"id":17214,"nodeType":"ParameterList","parameters":[],"src":"67783:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17225,"nodeType":"FunctionDefinition","src":"67893:86:19","nodes":[],"documentation":{"id":17216,"nodeType":"StructuredDocumentation","src":"67790:98:19","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"67902:15:19","parameters":{"id":17223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17218,"mutability":"mutable","name":"left","nameLocation":"67926:4:19","nodeType":"VariableDeclaration","scope":17225,"src":"67918:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17217,"name":"uint256","nodeType":"ElementaryTypeName","src":"67918:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17220,"mutability":"mutable","name":"right","nameLocation":"67940:5:19","nodeType":"VariableDeclaration","scope":17225,"src":"67932:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17219,"name":"uint256","nodeType":"ElementaryTypeName","src":"67932:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17222,"mutability":"mutable","name":"decimals","nameLocation":"67955:8:19","nodeType":"VariableDeclaration","scope":17225,"src":"67947:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17221,"name":"uint256","nodeType":"ElementaryTypeName","src":"67947:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67917:47:19"},"returnParameters":{"id":17224,"nodeType":"ParameterList","parameters":[],"src":"67978:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17237,"nodeType":"FunctionDefinition","src":"68150:109:19","nodes":[],"documentation":{"id":17226,"nodeType":"StructuredDocumentation","src":"67985:160:19","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"68159:15:19","parameters":{"id":17235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17228,"mutability":"mutable","name":"left","nameLocation":"68183:4:19","nodeType":"VariableDeclaration","scope":17237,"src":"68175:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17227,"name":"uint256","nodeType":"ElementaryTypeName","src":"68175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17230,"mutability":"mutable","name":"right","nameLocation":"68197:5:19","nodeType":"VariableDeclaration","scope":17237,"src":"68189:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17229,"name":"uint256","nodeType":"ElementaryTypeName","src":"68189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17232,"mutability":"mutable","name":"decimals","nameLocation":"68212:8:19","nodeType":"VariableDeclaration","scope":17237,"src":"68204:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17231,"name":"uint256","nodeType":"ElementaryTypeName","src":"68204:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17234,"mutability":"mutable","name":"error","nameLocation":"68238:5:19","nodeType":"VariableDeclaration","scope":17237,"src":"68222:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17233,"name":"string","nodeType":"ElementaryTypeName","src":"68222:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68174:70:19"},"returnParameters":{"id":17236,"nodeType":"ParameterList","parameters":[],"src":"68258:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17247,"nodeType":"FunctionDefinition","src":"68367:84:19","nodes":[],"documentation":{"id":17238,"nodeType":"StructuredDocumentation","src":"68265:97:19","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"68376:15:19","parameters":{"id":17245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17240,"mutability":"mutable","name":"left","nameLocation":"68399:4:19","nodeType":"VariableDeclaration","scope":17247,"src":"68392:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17239,"name":"int256","nodeType":"ElementaryTypeName","src":"68392:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17242,"mutability":"mutable","name":"right","nameLocation":"68412:5:19","nodeType":"VariableDeclaration","scope":17247,"src":"68405:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17241,"name":"int256","nodeType":"ElementaryTypeName","src":"68405:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17244,"mutability":"mutable","name":"decimals","nameLocation":"68427:8:19","nodeType":"VariableDeclaration","scope":17247,"src":"68419:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17243,"name":"uint256","nodeType":"ElementaryTypeName","src":"68419:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68391:45:19"},"returnParameters":{"id":17246,"nodeType":"ParameterList","parameters":[],"src":"68450:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17259,"nodeType":"FunctionDefinition","src":"68621:107:19","nodes":[],"documentation":{"id":17248,"nodeType":"StructuredDocumentation","src":"68457:159:19","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"68630:15:19","parameters":{"id":17257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17250,"mutability":"mutable","name":"left","nameLocation":"68653:4:19","nodeType":"VariableDeclaration","scope":17259,"src":"68646:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17249,"name":"int256","nodeType":"ElementaryTypeName","src":"68646:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17252,"mutability":"mutable","name":"right","nameLocation":"68666:5:19","nodeType":"VariableDeclaration","scope":17259,"src":"68659:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17251,"name":"int256","nodeType":"ElementaryTypeName","src":"68659:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17254,"mutability":"mutable","name":"decimals","nameLocation":"68681:8:19","nodeType":"VariableDeclaration","scope":17259,"src":"68673:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17253,"name":"uint256","nodeType":"ElementaryTypeName","src":"68673:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17256,"mutability":"mutable","name":"error","nameLocation":"68707:5:19","nodeType":"VariableDeclaration","scope":17259,"src":"68691:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17255,"name":"string","nodeType":"ElementaryTypeName","src":"68691:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68645:68:19"},"returnParameters":{"id":17258,"nodeType":"ParameterList","parameters":[],"src":"68727:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17267,"nodeType":"FunctionDefinition","src":"68784:55:19","nodes":[],"documentation":{"id":17260,"nodeType":"StructuredDocumentation","src":"68734:45:19","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68793:8:19","parameters":{"id":17265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17262,"mutability":"mutable","name":"left","nameLocation":"68807:4:19","nodeType":"VariableDeclaration","scope":17267,"src":"68802:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17261,"name":"bool","nodeType":"ElementaryTypeName","src":"68802:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17264,"mutability":"mutable","name":"right","nameLocation":"68818:5:19","nodeType":"VariableDeclaration","scope":17267,"src":"68813:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17263,"name":"bool","nodeType":"ElementaryTypeName","src":"68813:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68801:23:19"},"returnParameters":{"id":17266,"nodeType":"ParameterList","parameters":[],"src":"68838:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17277,"nodeType":"FunctionDefinition","src":"68952:78:19","nodes":[],"documentation":{"id":17268,"nodeType":"StructuredDocumentation","src":"68845:102:19","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68961:8:19","parameters":{"id":17275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17270,"mutability":"mutable","name":"left","nameLocation":"68975:4:19","nodeType":"VariableDeclaration","scope":17277,"src":"68970:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17269,"name":"bool","nodeType":"ElementaryTypeName","src":"68970:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17272,"mutability":"mutable","name":"right","nameLocation":"68986:5:19","nodeType":"VariableDeclaration","scope":17277,"src":"68981:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17271,"name":"bool","nodeType":"ElementaryTypeName","src":"68981:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17274,"mutability":"mutable","name":"error","nameLocation":"69009:5:19","nodeType":"VariableDeclaration","scope":17277,"src":"68993:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17273,"name":"string","nodeType":"ElementaryTypeName","src":"68993:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68969:46:19"},"returnParameters":{"id":17276,"nodeType":"ParameterList","parameters":[],"src":"69029:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17285,"nodeType":"FunctionDefinition","src":"69088:77:19","nodes":[],"documentation":{"id":17278,"nodeType":"StructuredDocumentation","src":"69036:47:19","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69097:8:19","parameters":{"id":17283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17280,"mutability":"mutable","name":"left","nameLocation":"69122:4:19","nodeType":"VariableDeclaration","scope":17285,"src":"69106:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17279,"name":"string","nodeType":"ElementaryTypeName","src":"69106:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17282,"mutability":"mutable","name":"right","nameLocation":"69144:5:19","nodeType":"VariableDeclaration","scope":17285,"src":"69128:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17281,"name":"string","nodeType":"ElementaryTypeName","src":"69128:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69105:45:19"},"returnParameters":{"id":17284,"nodeType":"ParameterList","parameters":[],"src":"69164:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17295,"nodeType":"FunctionDefinition","src":"69280:100:19","nodes":[],"documentation":{"id":17286,"nodeType":"StructuredDocumentation","src":"69171:104:19","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69289:8:19","parameters":{"id":17293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17288,"mutability":"mutable","name":"left","nameLocation":"69314:4:19","nodeType":"VariableDeclaration","scope":17295,"src":"69298:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17287,"name":"string","nodeType":"ElementaryTypeName","src":"69298:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17290,"mutability":"mutable","name":"right","nameLocation":"69336:5:19","nodeType":"VariableDeclaration","scope":17295,"src":"69320:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17289,"name":"string","nodeType":"ElementaryTypeName","src":"69320:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17292,"mutability":"mutable","name":"error","nameLocation":"69359:5:19","nodeType":"VariableDeclaration","scope":17295,"src":"69343:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17291,"name":"string","nodeType":"ElementaryTypeName","src":"69343:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69297:68:19"},"returnParameters":{"id":17294,"nodeType":"ParameterList","parameters":[],"src":"69379:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17303,"nodeType":"FunctionDefinition","src":"69437:75:19","nodes":[],"documentation":{"id":17296,"nodeType":"StructuredDocumentation","src":"69386:46:19","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69446:8:19","parameters":{"id":17301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17298,"mutability":"mutable","name":"left","nameLocation":"69470:4:19","nodeType":"VariableDeclaration","scope":17303,"src":"69455:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17297,"name":"bytes","nodeType":"ElementaryTypeName","src":"69455:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17300,"mutability":"mutable","name":"right","nameLocation":"69491:5:19","nodeType":"VariableDeclaration","scope":17303,"src":"69476:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17299,"name":"bytes","nodeType":"ElementaryTypeName","src":"69476:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"69454:43:19"},"returnParameters":{"id":17302,"nodeType":"ParameterList","parameters":[],"src":"69511:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17313,"nodeType":"FunctionDefinition","src":"69626:98:19","nodes":[],"documentation":{"id":17304,"nodeType":"StructuredDocumentation","src":"69518:103:19","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69635:8:19","parameters":{"id":17311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17306,"mutability":"mutable","name":"left","nameLocation":"69659:4:19","nodeType":"VariableDeclaration","scope":17313,"src":"69644:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17305,"name":"bytes","nodeType":"ElementaryTypeName","src":"69644:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17308,"mutability":"mutable","name":"right","nameLocation":"69680:5:19","nodeType":"VariableDeclaration","scope":17313,"src":"69665:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17307,"name":"bytes","nodeType":"ElementaryTypeName","src":"69665:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17310,"mutability":"mutable","name":"error","nameLocation":"69703:5:19","nodeType":"VariableDeclaration","scope":17313,"src":"69687:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17309,"name":"string","nodeType":"ElementaryTypeName","src":"69687:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69643:66:19"},"returnParameters":{"id":17312,"nodeType":"ParameterList","parameters":[],"src":"69723:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17323,"nodeType":"FunctionDefinition","src":"69790:77:19","nodes":[],"documentation":{"id":17314,"nodeType":"StructuredDocumentation","src":"69730:55:19","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69799:8:19","parameters":{"id":17321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17317,"mutability":"mutable","name":"left","nameLocation":"69824:4:19","nodeType":"VariableDeclaration","scope":17323,"src":"69808:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17315,"name":"bool","nodeType":"ElementaryTypeName","src":"69808:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17316,"nodeType":"ArrayTypeName","src":"69808:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17320,"mutability":"mutable","name":"right","nameLocation":"69846:5:19","nodeType":"VariableDeclaration","scope":17323,"src":"69830:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17318,"name":"bool","nodeType":"ElementaryTypeName","src":"69830:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17319,"nodeType":"ArrayTypeName","src":"69830:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"69807:45:19"},"returnParameters":{"id":17322,"nodeType":"ParameterList","parameters":[],"src":"69866:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17335,"nodeType":"FunctionDefinition","src":"69990:100:19","nodes":[],"documentation":{"id":17324,"nodeType":"StructuredDocumentation","src":"69873:112:19","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69999:8:19","parameters":{"id":17333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17327,"mutability":"mutable","name":"left","nameLocation":"70024:4:19","nodeType":"VariableDeclaration","scope":17335,"src":"70008:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17325,"name":"bool","nodeType":"ElementaryTypeName","src":"70008:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17326,"nodeType":"ArrayTypeName","src":"70008:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17330,"mutability":"mutable","name":"right","nameLocation":"70046:5:19","nodeType":"VariableDeclaration","scope":17335,"src":"70030:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17328,"name":"bool","nodeType":"ElementaryTypeName","src":"70030:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17329,"nodeType":"ArrayTypeName","src":"70030:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17332,"mutability":"mutable","name":"error","nameLocation":"70069:5:19","nodeType":"VariableDeclaration","scope":17335,"src":"70053:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17331,"name":"string","nodeType":"ElementaryTypeName","src":"70053:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70007:68:19"},"returnParameters":{"id":17334,"nodeType":"ParameterList","parameters":[],"src":"70089:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17345,"nodeType":"FunctionDefinition","src":"70158:83:19","nodes":[],"documentation":{"id":17336,"nodeType":"StructuredDocumentation","src":"70096:57:19","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70167:8:19","parameters":{"id":17343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17339,"mutability":"mutable","name":"left","nameLocation":"70195:4:19","nodeType":"VariableDeclaration","scope":17345,"src":"70176:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17337,"name":"uint256","nodeType":"ElementaryTypeName","src":"70176:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17338,"nodeType":"ArrayTypeName","src":"70176:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17342,"mutability":"mutable","name":"right","nameLocation":"70220:5:19","nodeType":"VariableDeclaration","scope":17345,"src":"70201:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17340,"name":"uint256","nodeType":"ElementaryTypeName","src":"70201:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17341,"nodeType":"ArrayTypeName","src":"70201:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"70175:51:19"},"returnParameters":{"id":17344,"nodeType":"ParameterList","parameters":[],"src":"70240:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17357,"nodeType":"FunctionDefinition","src":"70367:106:19","nodes":[],"documentation":{"id":17346,"nodeType":"StructuredDocumentation","src":"70247:115:19","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70376:8:19","parameters":{"id":17355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17349,"mutability":"mutable","name":"left","nameLocation":"70404:4:19","nodeType":"VariableDeclaration","scope":17357,"src":"70385:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17347,"name":"uint256","nodeType":"ElementaryTypeName","src":"70385:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17348,"nodeType":"ArrayTypeName","src":"70385:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17352,"mutability":"mutable","name":"right","nameLocation":"70429:5:19","nodeType":"VariableDeclaration","scope":17357,"src":"70410:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17350,"name":"uint256","nodeType":"ElementaryTypeName","src":"70410:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17351,"nodeType":"ArrayTypeName","src":"70410:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17354,"mutability":"mutable","name":"error","nameLocation":"70452:5:19","nodeType":"VariableDeclaration","scope":17357,"src":"70436:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17353,"name":"string","nodeType":"ElementaryTypeName","src":"70436:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70384:74:19"},"returnParameters":{"id":17356,"nodeType":"ParameterList","parameters":[],"src":"70472:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17367,"nodeType":"FunctionDefinition","src":"70541:81:19","nodes":[],"documentation":{"id":17358,"nodeType":"StructuredDocumentation","src":"70479:57:19","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70550:8:19","parameters":{"id":17365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17361,"mutability":"mutable","name":"left","nameLocation":"70577:4:19","nodeType":"VariableDeclaration","scope":17367,"src":"70559:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17359,"name":"int256","nodeType":"ElementaryTypeName","src":"70559:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17360,"nodeType":"ArrayTypeName","src":"70559:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":17364,"mutability":"mutable","name":"right","nameLocation":"70601:5:19","nodeType":"VariableDeclaration","scope":17367,"src":"70583:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17362,"name":"int256","nodeType":"ElementaryTypeName","src":"70583:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17363,"nodeType":"ArrayTypeName","src":"70583:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"70558:49:19"},"returnParameters":{"id":17366,"nodeType":"ParameterList","parameters":[],"src":"70621:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17379,"nodeType":"FunctionDefinition","src":"70747:104:19","nodes":[],"documentation":{"id":17368,"nodeType":"StructuredDocumentation","src":"70628:114:19","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70756:8:19","parameters":{"id":17377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17371,"mutability":"mutable","name":"left","nameLocation":"70783:4:19","nodeType":"VariableDeclaration","scope":17379,"src":"70765:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17369,"name":"int256","nodeType":"ElementaryTypeName","src":"70765:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17370,"nodeType":"ArrayTypeName","src":"70765:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":17374,"mutability":"mutable","name":"right","nameLocation":"70807:5:19","nodeType":"VariableDeclaration","scope":17379,"src":"70789:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17372,"name":"int256","nodeType":"ElementaryTypeName","src":"70789:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17373,"nodeType":"ArrayTypeName","src":"70789:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":17376,"mutability":"mutable","name":"error","nameLocation":"70830:5:19","nodeType":"VariableDeclaration","scope":17379,"src":"70814:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17375,"name":"string","nodeType":"ElementaryTypeName","src":"70814:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70764:72:19"},"returnParameters":{"id":17378,"nodeType":"ParameterList","parameters":[],"src":"70850:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17387,"nodeType":"FunctionDefinition","src":"70910:61:19","nodes":[],"documentation":{"id":17380,"nodeType":"StructuredDocumentation","src":"70857:48:19","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70919:8:19","parameters":{"id":17385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17382,"mutability":"mutable","name":"left","nameLocation":"70936:4:19","nodeType":"VariableDeclaration","scope":17387,"src":"70928:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17381,"name":"uint256","nodeType":"ElementaryTypeName","src":"70928:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17384,"mutability":"mutable","name":"right","nameLocation":"70950:5:19","nodeType":"VariableDeclaration","scope":17387,"src":"70942:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17383,"name":"uint256","nodeType":"ElementaryTypeName","src":"70942:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70927:29:19"},"returnParameters":{"id":17386,"nodeType":"ParameterList","parameters":[],"src":"70970:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17397,"nodeType":"FunctionDefinition","src":"71040:83:19","nodes":[],"documentation":{"id":17388,"nodeType":"StructuredDocumentation","src":"70977:58:19","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71049:8:19","parameters":{"id":17395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17391,"mutability":"mutable","name":"left","nameLocation":"71077:4:19","nodeType":"VariableDeclaration","scope":17397,"src":"71058:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17389,"name":"address","nodeType":"ElementaryTypeName","src":"71058:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17390,"nodeType":"ArrayTypeName","src":"71058:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":17394,"mutability":"mutable","name":"right","nameLocation":"71102:5:19","nodeType":"VariableDeclaration","scope":17397,"src":"71083:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17392,"name":"address","nodeType":"ElementaryTypeName","src":"71083:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17393,"nodeType":"ArrayTypeName","src":"71083:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"71057:51:19"},"returnParameters":{"id":17396,"nodeType":"ParameterList","parameters":[],"src":"71122:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17409,"nodeType":"FunctionDefinition","src":"71249:106:19","nodes":[],"documentation":{"id":17398,"nodeType":"StructuredDocumentation","src":"71129:115:19","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71258:8:19","parameters":{"id":17407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17401,"mutability":"mutable","name":"left","nameLocation":"71286:4:19","nodeType":"VariableDeclaration","scope":17409,"src":"71267:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17399,"name":"address","nodeType":"ElementaryTypeName","src":"71267:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17400,"nodeType":"ArrayTypeName","src":"71267:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":17404,"mutability":"mutable","name":"right","nameLocation":"71311:5:19","nodeType":"VariableDeclaration","scope":17409,"src":"71292:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17402,"name":"address","nodeType":"ElementaryTypeName","src":"71292:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17403,"nodeType":"ArrayTypeName","src":"71292:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":17406,"mutability":"mutable","name":"error","nameLocation":"71334:5:19","nodeType":"VariableDeclaration","scope":17409,"src":"71318:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17405,"name":"string","nodeType":"ElementaryTypeName","src":"71318:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71266:74:19"},"returnParameters":{"id":17408,"nodeType":"ParameterList","parameters":[],"src":"71354:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17419,"nodeType":"FunctionDefinition","src":"71424:83:19","nodes":[],"documentation":{"id":17410,"nodeType":"StructuredDocumentation","src":"71361:58:19","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71433:8:19","parameters":{"id":17417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17413,"mutability":"mutable","name":"left","nameLocation":"71461:4:19","nodeType":"VariableDeclaration","scope":17419,"src":"71442:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"71442:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17412,"nodeType":"ArrayTypeName","src":"71442:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17416,"mutability":"mutable","name":"right","nameLocation":"71486:5:19","nodeType":"VariableDeclaration","scope":17419,"src":"71467:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"71467:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17415,"nodeType":"ArrayTypeName","src":"71467:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"71441:51:19"},"returnParameters":{"id":17418,"nodeType":"ParameterList","parameters":[],"src":"71506:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17431,"nodeType":"FunctionDefinition","src":"71633:106:19","nodes":[],"documentation":{"id":17420,"nodeType":"StructuredDocumentation","src":"71513:115:19","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71642:8:19","parameters":{"id":17429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17423,"mutability":"mutable","name":"left","nameLocation":"71670:4:19","nodeType":"VariableDeclaration","scope":17431,"src":"71651:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"71651:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17422,"nodeType":"ArrayTypeName","src":"71651:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17426,"mutability":"mutable","name":"right","nameLocation":"71695:5:19","nodeType":"VariableDeclaration","scope":17431,"src":"71676:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"71676:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17425,"nodeType":"ArrayTypeName","src":"71676:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17428,"mutability":"mutable","name":"error","nameLocation":"71718:5:19","nodeType":"VariableDeclaration","scope":17431,"src":"71702:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17427,"name":"string","nodeType":"ElementaryTypeName","src":"71702:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71650:74:19"},"returnParameters":{"id":17430,"nodeType":"ParameterList","parameters":[],"src":"71738:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17441,"nodeType":"FunctionDefinition","src":"71807:81:19","nodes":[],"documentation":{"id":17432,"nodeType":"StructuredDocumentation","src":"71745:57:19","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71816:8:19","parameters":{"id":17439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17435,"mutability":"mutable","name":"left","nameLocation":"71843:4:19","nodeType":"VariableDeclaration","scope":17441,"src":"71825:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17433,"name":"string","nodeType":"ElementaryTypeName","src":"71825:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17434,"nodeType":"ArrayTypeName","src":"71825:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":17438,"mutability":"mutable","name":"right","nameLocation":"71867:5:19","nodeType":"VariableDeclaration","scope":17441,"src":"71849:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17436,"name":"string","nodeType":"ElementaryTypeName","src":"71849:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17437,"nodeType":"ArrayTypeName","src":"71849:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"71824:49:19"},"returnParameters":{"id":17440,"nodeType":"ParameterList","parameters":[],"src":"71887:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17453,"nodeType":"FunctionDefinition","src":"72013:104:19","nodes":[],"documentation":{"id":17442,"nodeType":"StructuredDocumentation","src":"71894:114:19","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72022:8:19","parameters":{"id":17451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17445,"mutability":"mutable","name":"left","nameLocation":"72049:4:19","nodeType":"VariableDeclaration","scope":17453,"src":"72031:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17443,"name":"string","nodeType":"ElementaryTypeName","src":"72031:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17444,"nodeType":"ArrayTypeName","src":"72031:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":17448,"mutability":"mutable","name":"right","nameLocation":"72073:5:19","nodeType":"VariableDeclaration","scope":17453,"src":"72055:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17446,"name":"string","nodeType":"ElementaryTypeName","src":"72055:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17447,"nodeType":"ArrayTypeName","src":"72055:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":17450,"mutability":"mutable","name":"error","nameLocation":"72096:5:19","nodeType":"VariableDeclaration","scope":17453,"src":"72080:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17449,"name":"string","nodeType":"ElementaryTypeName","src":"72080:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72030:72:19"},"returnParameters":{"id":17452,"nodeType":"ParameterList","parameters":[],"src":"72116:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17463,"nodeType":"FunctionDefinition","src":"72184:79:19","nodes":[],"documentation":{"id":17454,"nodeType":"StructuredDocumentation","src":"72123:56:19","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72193:8:19","parameters":{"id":17461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17457,"mutability":"mutable","name":"left","nameLocation":"72219:4:19","nodeType":"VariableDeclaration","scope":17463,"src":"72202:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17455,"name":"bytes","nodeType":"ElementaryTypeName","src":"72202:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17456,"nodeType":"ArrayTypeName","src":"72202:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":17460,"mutability":"mutable","name":"right","nameLocation":"72242:5:19","nodeType":"VariableDeclaration","scope":17463,"src":"72225:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17458,"name":"bytes","nodeType":"ElementaryTypeName","src":"72225:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17459,"nodeType":"ArrayTypeName","src":"72225:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"72201:47:19"},"returnParameters":{"id":17462,"nodeType":"ParameterList","parameters":[],"src":"72262:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17475,"nodeType":"FunctionDefinition","src":"72387:102:19","nodes":[],"documentation":{"id":17464,"nodeType":"StructuredDocumentation","src":"72269:113:19","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72396:8:19","parameters":{"id":17473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17467,"mutability":"mutable","name":"left","nameLocation":"72422:4:19","nodeType":"VariableDeclaration","scope":17475,"src":"72405:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17465,"name":"bytes","nodeType":"ElementaryTypeName","src":"72405:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17466,"nodeType":"ArrayTypeName","src":"72405:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":17470,"mutability":"mutable","name":"right","nameLocation":"72445:5:19","nodeType":"VariableDeclaration","scope":17475,"src":"72428:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17468,"name":"bytes","nodeType":"ElementaryTypeName","src":"72428:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17469,"nodeType":"ArrayTypeName","src":"72428:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":17472,"mutability":"mutable","name":"error","nameLocation":"72468:5:19","nodeType":"VariableDeclaration","scope":17475,"src":"72452:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17471,"name":"string","nodeType":"ElementaryTypeName","src":"72452:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72404:70:19"},"returnParameters":{"id":17474,"nodeType":"ParameterList","parameters":[],"src":"72488:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17485,"nodeType":"FunctionDefinition","src":"72605:84:19","nodes":[],"documentation":{"id":17476,"nodeType":"StructuredDocumentation","src":"72495:105:19","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72614:8:19","parameters":{"id":17483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17478,"mutability":"mutable","name":"left","nameLocation":"72631:4:19","nodeType":"VariableDeclaration","scope":17485,"src":"72623:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17477,"name":"uint256","nodeType":"ElementaryTypeName","src":"72623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17480,"mutability":"mutable","name":"right","nameLocation":"72645:5:19","nodeType":"VariableDeclaration","scope":17485,"src":"72637:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17479,"name":"uint256","nodeType":"ElementaryTypeName","src":"72637:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17482,"mutability":"mutable","name":"error","nameLocation":"72668:5:19","nodeType":"VariableDeclaration","scope":17485,"src":"72652:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17481,"name":"string","nodeType":"ElementaryTypeName","src":"72652:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72622:52:19"},"returnParameters":{"id":17484,"nodeType":"ParameterList","parameters":[],"src":"72688:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17493,"nodeType":"FunctionDefinition","src":"72747:59:19","nodes":[],"documentation":{"id":17486,"nodeType":"StructuredDocumentation","src":"72695:47:19","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72756:8:19","parameters":{"id":17491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17488,"mutability":"mutable","name":"left","nameLocation":"72772:4:19","nodeType":"VariableDeclaration","scope":17493,"src":"72765:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17487,"name":"int256","nodeType":"ElementaryTypeName","src":"72765:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17490,"mutability":"mutable","name":"right","nameLocation":"72785:5:19","nodeType":"VariableDeclaration","scope":17493,"src":"72778:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17489,"name":"int256","nodeType":"ElementaryTypeName","src":"72778:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"72764:27:19"},"returnParameters":{"id":17492,"nodeType":"ParameterList","parameters":[],"src":"72805:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17503,"nodeType":"FunctionDefinition","src":"72921:82:19","nodes":[],"documentation":{"id":17494,"nodeType":"StructuredDocumentation","src":"72812:104:19","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72930:8:19","parameters":{"id":17501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17496,"mutability":"mutable","name":"left","nameLocation":"72946:4:19","nodeType":"VariableDeclaration","scope":17503,"src":"72939:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17495,"name":"int256","nodeType":"ElementaryTypeName","src":"72939:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17498,"mutability":"mutable","name":"right","nameLocation":"72959:5:19","nodeType":"VariableDeclaration","scope":17503,"src":"72952:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17497,"name":"int256","nodeType":"ElementaryTypeName","src":"72952:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17500,"mutability":"mutable","name":"error","nameLocation":"72982:5:19","nodeType":"VariableDeclaration","scope":17503,"src":"72966:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17499,"name":"string","nodeType":"ElementaryTypeName","src":"72966:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72938:50:19"},"returnParameters":{"id":17502,"nodeType":"ParameterList","parameters":[],"src":"73002:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17511,"nodeType":"FunctionDefinition","src":"73062:61:19","nodes":[],"documentation":{"id":17504,"nodeType":"StructuredDocumentation","src":"73009:48:19","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73071:8:19","parameters":{"id":17509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17506,"mutability":"mutable","name":"left","nameLocation":"73088:4:19","nodeType":"VariableDeclaration","scope":17511,"src":"73080:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17505,"name":"address","nodeType":"ElementaryTypeName","src":"73080:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17508,"mutability":"mutable","name":"right","nameLocation":"73102:5:19","nodeType":"VariableDeclaration","scope":17511,"src":"73094:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17507,"name":"address","nodeType":"ElementaryTypeName","src":"73094:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73079:29:19"},"returnParameters":{"id":17510,"nodeType":"ParameterList","parameters":[],"src":"73122:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17521,"nodeType":"FunctionDefinition","src":"73239:84:19","nodes":[],"documentation":{"id":17512,"nodeType":"StructuredDocumentation","src":"73129:105:19","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73248:8:19","parameters":{"id":17519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17514,"mutability":"mutable","name":"left","nameLocation":"73265:4:19","nodeType":"VariableDeclaration","scope":17521,"src":"73257:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17513,"name":"address","nodeType":"ElementaryTypeName","src":"73257:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17516,"mutability":"mutable","name":"right","nameLocation":"73279:5:19","nodeType":"VariableDeclaration","scope":17521,"src":"73271:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17515,"name":"address","nodeType":"ElementaryTypeName","src":"73271:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17518,"mutability":"mutable","name":"error","nameLocation":"73302:5:19","nodeType":"VariableDeclaration","scope":17521,"src":"73286:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17517,"name":"string","nodeType":"ElementaryTypeName","src":"73286:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73256:52:19"},"returnParameters":{"id":17520,"nodeType":"ParameterList","parameters":[],"src":"73322:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17529,"nodeType":"FunctionDefinition","src":"73382:61:19","nodes":[],"documentation":{"id":17522,"nodeType":"StructuredDocumentation","src":"73329:48:19","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73391:8:19","parameters":{"id":17527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17524,"mutability":"mutable","name":"left","nameLocation":"73408:4:19","nodeType":"VariableDeclaration","scope":17529,"src":"73400:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73400:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17526,"mutability":"mutable","name":"right","nameLocation":"73422:5:19","nodeType":"VariableDeclaration","scope":17529,"src":"73414:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73414:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"73399:29:19"},"returnParameters":{"id":17528,"nodeType":"ParameterList","parameters":[],"src":"73442:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17539,"nodeType":"FunctionDefinition","src":"73559:84:19","nodes":[],"documentation":{"id":17530,"nodeType":"StructuredDocumentation","src":"73449:105:19","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73568:8:19","parameters":{"id":17537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17532,"mutability":"mutable","name":"left","nameLocation":"73585:4:19","nodeType":"VariableDeclaration","scope":17539,"src":"73577:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73577:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17534,"mutability":"mutable","name":"right","nameLocation":"73599:5:19","nodeType":"VariableDeclaration","scope":17539,"src":"73591:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73591:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17536,"mutability":"mutable","name":"error","nameLocation":"73622:5:19","nodeType":"VariableDeclaration","scope":17539,"src":"73606:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17535,"name":"string","nodeType":"ElementaryTypeName","src":"73606:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73576:52:19"},"returnParameters":{"id":17538,"nodeType":"ParameterList","parameters":[],"src":"73642:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17545,"nodeType":"FunctionDefinition","src":"73700:51:19","nodes":[],"documentation":{"id":17540,"nodeType":"StructuredDocumentation","src":"73649:46:19","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"73709:11:19","parameters":{"id":17543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17542,"mutability":"mutable","name":"condition","nameLocation":"73726:9:19","nodeType":"VariableDeclaration","scope":17545,"src":"73721:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17541,"name":"bool","nodeType":"ElementaryTypeName","src":"73721:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"73720:16:19"},"returnParameters":{"id":17544,"nodeType":"ParameterList","parameters":[],"src":"73750:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17553,"nodeType":"FunctionDefinition","src":"73865:74:19","nodes":[],"documentation":{"id":17546,"nodeType":"StructuredDocumentation","src":"73757:103:19","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"73874:11:19","parameters":{"id":17551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17548,"mutability":"mutable","name":"condition","nameLocation":"73891:9:19","nodeType":"VariableDeclaration","scope":17553,"src":"73886:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17547,"name":"bool","nodeType":"ElementaryTypeName","src":"73886:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17550,"mutability":"mutable","name":"error","nameLocation":"73918:5:19","nodeType":"VariableDeclaration","scope":17553,"src":"73902:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17549,"name":"string","nodeType":"ElementaryTypeName","src":"73902:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73885:39:19"},"returnParameters":{"id":17552,"nodeType":"ParameterList","parameters":[],"src":"73938:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17563,"nodeType":"FunctionDefinition","src":"74100:86:19","nodes":[],"documentation":{"id":17554,"nodeType":"StructuredDocumentation","src":"73945:150:19","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"74109:15:19","parameters":{"id":17561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17556,"mutability":"mutable","name":"left","nameLocation":"74133:4:19","nodeType":"VariableDeclaration","scope":17563,"src":"74125:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17555,"name":"uint256","nodeType":"ElementaryTypeName","src":"74125:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17558,"mutability":"mutable","name":"right","nameLocation":"74147:5:19","nodeType":"VariableDeclaration","scope":17563,"src":"74139:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17557,"name":"uint256","nodeType":"ElementaryTypeName","src":"74139:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17560,"mutability":"mutable","name":"decimals","nameLocation":"74162:8:19","nodeType":"VariableDeclaration","scope":17563,"src":"74154:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17559,"name":"uint256","nodeType":"ElementaryTypeName","src":"74154:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74124:47:19"},"returnParameters":{"id":17562,"nodeType":"ParameterList","parameters":[],"src":"74185:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17575,"nodeType":"FunctionDefinition","src":"74401:109:19","nodes":[],"documentation":{"id":17564,"nodeType":"StructuredDocumentation","src":"74192:204:19","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"74410:15:19","parameters":{"id":17573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17566,"mutability":"mutable","name":"left","nameLocation":"74434:4:19","nodeType":"VariableDeclaration","scope":17575,"src":"74426:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17565,"name":"uint256","nodeType":"ElementaryTypeName","src":"74426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17568,"mutability":"mutable","name":"right","nameLocation":"74448:5:19","nodeType":"VariableDeclaration","scope":17575,"src":"74440:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17567,"name":"uint256","nodeType":"ElementaryTypeName","src":"74440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17570,"mutability":"mutable","name":"decimals","nameLocation":"74463:8:19","nodeType":"VariableDeclaration","scope":17575,"src":"74455:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17569,"name":"uint256","nodeType":"ElementaryTypeName","src":"74455:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17572,"mutability":"mutable","name":"error","nameLocation":"74489:5:19","nodeType":"VariableDeclaration","scope":17575,"src":"74473:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17571,"name":"string","nodeType":"ElementaryTypeName","src":"74473:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74425:70:19"},"returnParameters":{"id":17574,"nodeType":"ParameterList","parameters":[],"src":"74509:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17585,"nodeType":"FunctionDefinition","src":"74670:84:19","nodes":[],"documentation":{"id":17576,"nodeType":"StructuredDocumentation","src":"74516:149:19","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"74679:15:19","parameters":{"id":17583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17578,"mutability":"mutable","name":"left","nameLocation":"74702:4:19","nodeType":"VariableDeclaration","scope":17585,"src":"74695:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17577,"name":"int256","nodeType":"ElementaryTypeName","src":"74695:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17580,"mutability":"mutable","name":"right","nameLocation":"74715:5:19","nodeType":"VariableDeclaration","scope":17585,"src":"74708:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17579,"name":"int256","nodeType":"ElementaryTypeName","src":"74708:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17582,"mutability":"mutable","name":"decimals","nameLocation":"74730:8:19","nodeType":"VariableDeclaration","scope":17585,"src":"74722:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17581,"name":"uint256","nodeType":"ElementaryTypeName","src":"74722:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74694:45:19"},"returnParameters":{"id":17584,"nodeType":"ParameterList","parameters":[],"src":"74753:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17597,"nodeType":"FunctionDefinition","src":"74968:107:19","nodes":[],"documentation":{"id":17586,"nodeType":"StructuredDocumentation","src":"74760:203:19","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"74977:15:19","parameters":{"id":17595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17588,"mutability":"mutable","name":"left","nameLocation":"75000:4:19","nodeType":"VariableDeclaration","scope":17597,"src":"74993:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17587,"name":"int256","nodeType":"ElementaryTypeName","src":"74993:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17590,"mutability":"mutable","name":"right","nameLocation":"75013:5:19","nodeType":"VariableDeclaration","scope":17597,"src":"75006:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17589,"name":"int256","nodeType":"ElementaryTypeName","src":"75006:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17592,"mutability":"mutable","name":"decimals","nameLocation":"75028:8:19","nodeType":"VariableDeclaration","scope":17597,"src":"75020:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17591,"name":"uint256","nodeType":"ElementaryTypeName","src":"75020:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17594,"mutability":"mutable","name":"error","nameLocation":"75054:5:19","nodeType":"VariableDeclaration","scope":17597,"src":"75038:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17593,"name":"string","nodeType":"ElementaryTypeName","src":"75038:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74992:68:19"},"returnParameters":{"id":17596,"nodeType":"ParameterList","parameters":[],"src":"75074:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17605,"nodeType":"FunctionDefinition","src":"75179:61:19","nodes":[],"documentation":{"id":17598,"nodeType":"StructuredDocumentation","src":"75081:93:19","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"75188:8:19","parameters":{"id":17603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17600,"mutability":"mutable","name":"left","nameLocation":"75205:4:19","nodeType":"VariableDeclaration","scope":17605,"src":"75197:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17599,"name":"uint256","nodeType":"ElementaryTypeName","src":"75197:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17602,"mutability":"mutable","name":"right","nameLocation":"75219:5:19","nodeType":"VariableDeclaration","scope":17605,"src":"75211:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17601,"name":"uint256","nodeType":"ElementaryTypeName","src":"75211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75196:29:19"},"returnParameters":{"id":17604,"nodeType":"ParameterList","parameters":[],"src":"75239:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17615,"nodeType":"FunctionDefinition","src":"75406:84:19","nodes":[],"documentation":{"id":17606,"nodeType":"StructuredDocumentation","src":"75246:155:19","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"75415:8:19","parameters":{"id":17613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17608,"mutability":"mutable","name":"left","nameLocation":"75432:4:19","nodeType":"VariableDeclaration","scope":17615,"src":"75424:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17607,"name":"uint256","nodeType":"ElementaryTypeName","src":"75424:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17610,"mutability":"mutable","name":"right","nameLocation":"75446:5:19","nodeType":"VariableDeclaration","scope":17615,"src":"75438:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17609,"name":"uint256","nodeType":"ElementaryTypeName","src":"75438:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17612,"mutability":"mutable","name":"error","nameLocation":"75469:5:19","nodeType":"VariableDeclaration","scope":17615,"src":"75453:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17611,"name":"string","nodeType":"ElementaryTypeName","src":"75453:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75423:52:19"},"returnParameters":{"id":17614,"nodeType":"ParameterList","parameters":[],"src":"75489:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17623,"nodeType":"FunctionDefinition","src":"75593:59:19","nodes":[],"documentation":{"id":17616,"nodeType":"StructuredDocumentation","src":"75496:92:19","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"75602:8:19","parameters":{"id":17621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17618,"mutability":"mutable","name":"left","nameLocation":"75618:4:19","nodeType":"VariableDeclaration","scope":17623,"src":"75611:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17617,"name":"int256","nodeType":"ElementaryTypeName","src":"75611:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17620,"mutability":"mutable","name":"right","nameLocation":"75631:5:19","nodeType":"VariableDeclaration","scope":17623,"src":"75624:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17619,"name":"int256","nodeType":"ElementaryTypeName","src":"75624:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"75610:27:19"},"returnParameters":{"id":17622,"nodeType":"ParameterList","parameters":[],"src":"75651:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17633,"nodeType":"FunctionDefinition","src":"75817:82:19","nodes":[],"documentation":{"id":17624,"nodeType":"StructuredDocumentation","src":"75658:154:19","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"75826:8:19","parameters":{"id":17631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17626,"mutability":"mutable","name":"left","nameLocation":"75842:4:19","nodeType":"VariableDeclaration","scope":17633,"src":"75835:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17625,"name":"int256","nodeType":"ElementaryTypeName","src":"75835:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17628,"mutability":"mutable","name":"right","nameLocation":"75855:5:19","nodeType":"VariableDeclaration","scope":17633,"src":"75848:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17627,"name":"int256","nodeType":"ElementaryTypeName","src":"75848:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17630,"mutability":"mutable","name":"error","nameLocation":"75878:5:19","nodeType":"VariableDeclaration","scope":17633,"src":"75862:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17629,"name":"string","nodeType":"ElementaryTypeName","src":"75862:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75834:50:19"},"returnParameters":{"id":17632,"nodeType":"ParameterList","parameters":[],"src":"75898:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17643,"nodeType":"FunctionDefinition","src":"76048:86:19","nodes":[],"documentation":{"id":17634,"nodeType":"StructuredDocumentation","src":"75905:138:19","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"76057:15:19","parameters":{"id":17641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17636,"mutability":"mutable","name":"left","nameLocation":"76081:4:19","nodeType":"VariableDeclaration","scope":17643,"src":"76073:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17635,"name":"uint256","nodeType":"ElementaryTypeName","src":"76073:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17638,"mutability":"mutable","name":"right","nameLocation":"76095:5:19","nodeType":"VariableDeclaration","scope":17643,"src":"76087:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17637,"name":"uint256","nodeType":"ElementaryTypeName","src":"76087:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17640,"mutability":"mutable","name":"decimals","nameLocation":"76110:8:19","nodeType":"VariableDeclaration","scope":17643,"src":"76102:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17639,"name":"uint256","nodeType":"ElementaryTypeName","src":"76102:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76072:47:19"},"returnParameters":{"id":17642,"nodeType":"ParameterList","parameters":[],"src":"76133:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17655,"nodeType":"FunctionDefinition","src":"76337:109:19","nodes":[],"documentation":{"id":17644,"nodeType":"StructuredDocumentation","src":"76140:192:19","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"76346:15:19","parameters":{"id":17653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17646,"mutability":"mutable","name":"left","nameLocation":"76370:4:19","nodeType":"VariableDeclaration","scope":17655,"src":"76362:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17645,"name":"uint256","nodeType":"ElementaryTypeName","src":"76362:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17648,"mutability":"mutable","name":"right","nameLocation":"76384:5:19","nodeType":"VariableDeclaration","scope":17655,"src":"76376:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17647,"name":"uint256","nodeType":"ElementaryTypeName","src":"76376:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17650,"mutability":"mutable","name":"decimals","nameLocation":"76399:8:19","nodeType":"VariableDeclaration","scope":17655,"src":"76391:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17649,"name":"uint256","nodeType":"ElementaryTypeName","src":"76391:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17652,"mutability":"mutable","name":"error","nameLocation":"76425:5:19","nodeType":"VariableDeclaration","scope":17655,"src":"76409:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17651,"name":"string","nodeType":"ElementaryTypeName","src":"76409:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76361:70:19"},"returnParameters":{"id":17654,"nodeType":"ParameterList","parameters":[],"src":"76445:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17665,"nodeType":"FunctionDefinition","src":"76594:84:19","nodes":[],"documentation":{"id":17656,"nodeType":"StructuredDocumentation","src":"76452:137:19","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"76603:15:19","parameters":{"id":17663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17658,"mutability":"mutable","name":"left","nameLocation":"76626:4:19","nodeType":"VariableDeclaration","scope":17665,"src":"76619:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17657,"name":"int256","nodeType":"ElementaryTypeName","src":"76619:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17660,"mutability":"mutable","name":"right","nameLocation":"76639:5:19","nodeType":"VariableDeclaration","scope":17665,"src":"76632:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17659,"name":"int256","nodeType":"ElementaryTypeName","src":"76632:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17662,"mutability":"mutable","name":"decimals","nameLocation":"76654:8:19","nodeType":"VariableDeclaration","scope":17665,"src":"76646:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17661,"name":"uint256","nodeType":"ElementaryTypeName","src":"76646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76618:45:19"},"returnParameters":{"id":17664,"nodeType":"ParameterList","parameters":[],"src":"76677:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17677,"nodeType":"FunctionDefinition","src":"76880:107:19","nodes":[],"documentation":{"id":17666,"nodeType":"StructuredDocumentation","src":"76684:191:19","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"76889:15:19","parameters":{"id":17675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17668,"mutability":"mutable","name":"left","nameLocation":"76912:4:19","nodeType":"VariableDeclaration","scope":17677,"src":"76905:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17667,"name":"int256","nodeType":"ElementaryTypeName","src":"76905:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17670,"mutability":"mutable","name":"right","nameLocation":"76925:5:19","nodeType":"VariableDeclaration","scope":17677,"src":"76918:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17669,"name":"int256","nodeType":"ElementaryTypeName","src":"76918:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17672,"mutability":"mutable","name":"decimals","nameLocation":"76940:8:19","nodeType":"VariableDeclaration","scope":17677,"src":"76932:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17671,"name":"uint256","nodeType":"ElementaryTypeName","src":"76932:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17674,"mutability":"mutable","name":"error","nameLocation":"76966:5:19","nodeType":"VariableDeclaration","scope":17677,"src":"76950:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17673,"name":"string","nodeType":"ElementaryTypeName","src":"76950:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76904:68:19"},"returnParameters":{"id":17676,"nodeType":"ParameterList","parameters":[],"src":"76986:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17685,"nodeType":"FunctionDefinition","src":"77079:61:19","nodes":[],"documentation":{"id":17678,"nodeType":"StructuredDocumentation","src":"76993:81:19","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"77088:8:19","parameters":{"id":17683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17680,"mutability":"mutable","name":"left","nameLocation":"77105:4:19","nodeType":"VariableDeclaration","scope":17685,"src":"77097:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17679,"name":"uint256","nodeType":"ElementaryTypeName","src":"77097:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17682,"mutability":"mutable","name":"right","nameLocation":"77119:5:19","nodeType":"VariableDeclaration","scope":17685,"src":"77111:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17681,"name":"uint256","nodeType":"ElementaryTypeName","src":"77111:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77096:29:19"},"returnParameters":{"id":17684,"nodeType":"ParameterList","parameters":[],"src":"77139:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17695,"nodeType":"FunctionDefinition","src":"77294:84:19","nodes":[],"documentation":{"id":17686,"nodeType":"StructuredDocumentation","src":"77146:143:19","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"77303:8:19","parameters":{"id":17693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17688,"mutability":"mutable","name":"left","nameLocation":"77320:4:19","nodeType":"VariableDeclaration","scope":17695,"src":"77312:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17687,"name":"uint256","nodeType":"ElementaryTypeName","src":"77312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17690,"mutability":"mutable","name":"right","nameLocation":"77334:5:19","nodeType":"VariableDeclaration","scope":17695,"src":"77326:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17689,"name":"uint256","nodeType":"ElementaryTypeName","src":"77326:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17692,"mutability":"mutable","name":"error","nameLocation":"77357:5:19","nodeType":"VariableDeclaration","scope":17695,"src":"77341:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17691,"name":"string","nodeType":"ElementaryTypeName","src":"77341:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77311:52:19"},"returnParameters":{"id":17694,"nodeType":"ParameterList","parameters":[],"src":"77377:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17703,"nodeType":"FunctionDefinition","src":"77469:59:19","nodes":[],"documentation":{"id":17696,"nodeType":"StructuredDocumentation","src":"77384:80:19","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"77478:8:19","parameters":{"id":17701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17698,"mutability":"mutable","name":"left","nameLocation":"77494:4:19","nodeType":"VariableDeclaration","scope":17703,"src":"77487:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17697,"name":"int256","nodeType":"ElementaryTypeName","src":"77487:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17700,"mutability":"mutable","name":"right","nameLocation":"77507:5:19","nodeType":"VariableDeclaration","scope":17703,"src":"77500:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17699,"name":"int256","nodeType":"ElementaryTypeName","src":"77500:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"77486:27:19"},"returnParameters":{"id":17702,"nodeType":"ParameterList","parameters":[],"src":"77527:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17713,"nodeType":"FunctionDefinition","src":"77681:82:19","nodes":[],"documentation":{"id":17704,"nodeType":"StructuredDocumentation","src":"77534:142:19","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"77690:8:19","parameters":{"id":17711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17706,"mutability":"mutable","name":"left","nameLocation":"77706:4:19","nodeType":"VariableDeclaration","scope":17713,"src":"77699:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17705,"name":"int256","nodeType":"ElementaryTypeName","src":"77699:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17708,"mutability":"mutable","name":"right","nameLocation":"77719:5:19","nodeType":"VariableDeclaration","scope":17713,"src":"77712:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17707,"name":"int256","nodeType":"ElementaryTypeName","src":"77712:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17710,"mutability":"mutable","name":"error","nameLocation":"77742:5:19","nodeType":"VariableDeclaration","scope":17713,"src":"77726:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17709,"name":"string","nodeType":"ElementaryTypeName","src":"77726:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77698:50:19"},"returnParameters":{"id":17712,"nodeType":"ParameterList","parameters":[],"src":"77762:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17723,"nodeType":"FunctionDefinition","src":"77921:86:19","nodes":[],"documentation":{"id":17714,"nodeType":"StructuredDocumentation","src":"77769:147:19","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"77930:15:19","parameters":{"id":17721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17716,"mutability":"mutable","name":"left","nameLocation":"77954:4:19","nodeType":"VariableDeclaration","scope":17723,"src":"77946:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17715,"name":"uint256","nodeType":"ElementaryTypeName","src":"77946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17718,"mutability":"mutable","name":"right","nameLocation":"77968:5:19","nodeType":"VariableDeclaration","scope":17723,"src":"77960:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17717,"name":"uint256","nodeType":"ElementaryTypeName","src":"77960:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17720,"mutability":"mutable","name":"decimals","nameLocation":"77983:8:19","nodeType":"VariableDeclaration","scope":17723,"src":"77975:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17719,"name":"uint256","nodeType":"ElementaryTypeName","src":"77975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77945:47:19"},"returnParameters":{"id":17722,"nodeType":"ParameterList","parameters":[],"src":"78006:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17735,"nodeType":"FunctionDefinition","src":"78219:109:19","nodes":[],"documentation":{"id":17724,"nodeType":"StructuredDocumentation","src":"78013:201:19","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"78228:15:19","parameters":{"id":17733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17726,"mutability":"mutable","name":"left","nameLocation":"78252:4:19","nodeType":"VariableDeclaration","scope":17735,"src":"78244:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17725,"name":"uint256","nodeType":"ElementaryTypeName","src":"78244:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17728,"mutability":"mutable","name":"right","nameLocation":"78266:5:19","nodeType":"VariableDeclaration","scope":17735,"src":"78258:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17727,"name":"uint256","nodeType":"ElementaryTypeName","src":"78258:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17730,"mutability":"mutable","name":"decimals","nameLocation":"78281:8:19","nodeType":"VariableDeclaration","scope":17735,"src":"78273:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17729,"name":"uint256","nodeType":"ElementaryTypeName","src":"78273:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17732,"mutability":"mutable","name":"error","nameLocation":"78307:5:19","nodeType":"VariableDeclaration","scope":17735,"src":"78291:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17731,"name":"string","nodeType":"ElementaryTypeName","src":"78291:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78243:70:19"},"returnParameters":{"id":17734,"nodeType":"ParameterList","parameters":[],"src":"78327:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17745,"nodeType":"FunctionDefinition","src":"78485:84:19","nodes":[],"documentation":{"id":17736,"nodeType":"StructuredDocumentation","src":"78334:146:19","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"78494:15:19","parameters":{"id":17743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17738,"mutability":"mutable","name":"left","nameLocation":"78517:4:19","nodeType":"VariableDeclaration","scope":17745,"src":"78510:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17737,"name":"int256","nodeType":"ElementaryTypeName","src":"78510:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17740,"mutability":"mutable","name":"right","nameLocation":"78530:5:19","nodeType":"VariableDeclaration","scope":17745,"src":"78523:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17739,"name":"int256","nodeType":"ElementaryTypeName","src":"78523:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17742,"mutability":"mutable","name":"decimals","nameLocation":"78545:8:19","nodeType":"VariableDeclaration","scope":17745,"src":"78537:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17741,"name":"uint256","nodeType":"ElementaryTypeName","src":"78537:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78509:45:19"},"returnParameters":{"id":17744,"nodeType":"ParameterList","parameters":[],"src":"78568:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17757,"nodeType":"FunctionDefinition","src":"78780:107:19","nodes":[],"documentation":{"id":17746,"nodeType":"StructuredDocumentation","src":"78575:200:19","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"78789:15:19","parameters":{"id":17755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17748,"mutability":"mutable","name":"left","nameLocation":"78812:4:19","nodeType":"VariableDeclaration","scope":17757,"src":"78805:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17747,"name":"int256","nodeType":"ElementaryTypeName","src":"78805:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17750,"mutability":"mutable","name":"right","nameLocation":"78825:5:19","nodeType":"VariableDeclaration","scope":17757,"src":"78818:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17749,"name":"int256","nodeType":"ElementaryTypeName","src":"78818:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17752,"mutability":"mutable","name":"decimals","nameLocation":"78840:8:19","nodeType":"VariableDeclaration","scope":17757,"src":"78832:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17751,"name":"uint256","nodeType":"ElementaryTypeName","src":"78832:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17754,"mutability":"mutable","name":"error","nameLocation":"78866:5:19","nodeType":"VariableDeclaration","scope":17757,"src":"78850:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17753,"name":"string","nodeType":"ElementaryTypeName","src":"78850:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78804:68:19"},"returnParameters":{"id":17756,"nodeType":"ParameterList","parameters":[],"src":"78886:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17765,"nodeType":"FunctionDefinition","src":"78988:61:19","nodes":[],"documentation":{"id":17758,"nodeType":"StructuredDocumentation","src":"78893:90:19","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"78997:8:19","parameters":{"id":17763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17760,"mutability":"mutable","name":"left","nameLocation":"79014:4:19","nodeType":"VariableDeclaration","scope":17765,"src":"79006:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17759,"name":"uint256","nodeType":"ElementaryTypeName","src":"79006:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17762,"mutability":"mutable","name":"right","nameLocation":"79028:5:19","nodeType":"VariableDeclaration","scope":17765,"src":"79020:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17761,"name":"uint256","nodeType":"ElementaryTypeName","src":"79020:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79005:29:19"},"returnParameters":{"id":17764,"nodeType":"ParameterList","parameters":[],"src":"79048:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17775,"nodeType":"FunctionDefinition","src":"79212:84:19","nodes":[],"documentation":{"id":17766,"nodeType":"StructuredDocumentation","src":"79055:152:19","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"79221:8:19","parameters":{"id":17773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17768,"mutability":"mutable","name":"left","nameLocation":"79238:4:19","nodeType":"VariableDeclaration","scope":17775,"src":"79230:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17767,"name":"uint256","nodeType":"ElementaryTypeName","src":"79230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17770,"mutability":"mutable","name":"right","nameLocation":"79252:5:19","nodeType":"VariableDeclaration","scope":17775,"src":"79244:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17769,"name":"uint256","nodeType":"ElementaryTypeName","src":"79244:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17772,"mutability":"mutable","name":"error","nameLocation":"79275:5:19","nodeType":"VariableDeclaration","scope":17775,"src":"79259:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17771,"name":"string","nodeType":"ElementaryTypeName","src":"79259:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79229:52:19"},"returnParameters":{"id":17774,"nodeType":"ParameterList","parameters":[],"src":"79295:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17783,"nodeType":"FunctionDefinition","src":"79396:59:19","nodes":[],"documentation":{"id":17776,"nodeType":"StructuredDocumentation","src":"79302:89:19","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"79405:8:19","parameters":{"id":17781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17778,"mutability":"mutable","name":"left","nameLocation":"79421:4:19","nodeType":"VariableDeclaration","scope":17783,"src":"79414:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17777,"name":"int256","nodeType":"ElementaryTypeName","src":"79414:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17780,"mutability":"mutable","name":"right","nameLocation":"79434:5:19","nodeType":"VariableDeclaration","scope":17783,"src":"79427:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17779,"name":"int256","nodeType":"ElementaryTypeName","src":"79427:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"79413:27:19"},"returnParameters":{"id":17782,"nodeType":"ParameterList","parameters":[],"src":"79454:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17793,"nodeType":"FunctionDefinition","src":"79617:82:19","nodes":[],"documentation":{"id":17784,"nodeType":"StructuredDocumentation","src":"79461:151:19","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"79626:8:19","parameters":{"id":17791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17786,"mutability":"mutable","name":"left","nameLocation":"79642:4:19","nodeType":"VariableDeclaration","scope":17793,"src":"79635:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17785,"name":"int256","nodeType":"ElementaryTypeName","src":"79635:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17788,"mutability":"mutable","name":"right","nameLocation":"79655:5:19","nodeType":"VariableDeclaration","scope":17793,"src":"79648:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17787,"name":"int256","nodeType":"ElementaryTypeName","src":"79648:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17790,"mutability":"mutable","name":"error","nameLocation":"79678:5:19","nodeType":"VariableDeclaration","scope":17793,"src":"79662:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17789,"name":"string","nodeType":"ElementaryTypeName","src":"79662:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79634:50:19"},"returnParameters":{"id":17792,"nodeType":"ParameterList","parameters":[],"src":"79698:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17803,"nodeType":"FunctionDefinition","src":"79845:86:19","nodes":[],"documentation":{"id":17794,"nodeType":"StructuredDocumentation","src":"79705:135:19","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"79854:15:19","parameters":{"id":17801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17796,"mutability":"mutable","name":"left","nameLocation":"79878:4:19","nodeType":"VariableDeclaration","scope":17803,"src":"79870:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17795,"name":"uint256","nodeType":"ElementaryTypeName","src":"79870:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17798,"mutability":"mutable","name":"right","nameLocation":"79892:5:19","nodeType":"VariableDeclaration","scope":17803,"src":"79884:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17797,"name":"uint256","nodeType":"ElementaryTypeName","src":"79884:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17800,"mutability":"mutable","name":"decimals","nameLocation":"79907:8:19","nodeType":"VariableDeclaration","scope":17803,"src":"79899:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17799,"name":"uint256","nodeType":"ElementaryTypeName","src":"79899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79869:47:19"},"returnParameters":{"id":17802,"nodeType":"ParameterList","parameters":[],"src":"79930:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17815,"nodeType":"FunctionDefinition","src":"80131:109:19","nodes":[],"documentation":{"id":17804,"nodeType":"StructuredDocumentation","src":"79937:189:19","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"80140:15:19","parameters":{"id":17813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17806,"mutability":"mutable","name":"left","nameLocation":"80164:4:19","nodeType":"VariableDeclaration","scope":17815,"src":"80156:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17805,"name":"uint256","nodeType":"ElementaryTypeName","src":"80156:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17808,"mutability":"mutable","name":"right","nameLocation":"80178:5:19","nodeType":"VariableDeclaration","scope":17815,"src":"80170:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17807,"name":"uint256","nodeType":"ElementaryTypeName","src":"80170:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17810,"mutability":"mutable","name":"decimals","nameLocation":"80193:8:19","nodeType":"VariableDeclaration","scope":17815,"src":"80185:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17809,"name":"uint256","nodeType":"ElementaryTypeName","src":"80185:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17812,"mutability":"mutable","name":"error","nameLocation":"80219:5:19","nodeType":"VariableDeclaration","scope":17815,"src":"80203:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17811,"name":"string","nodeType":"ElementaryTypeName","src":"80203:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80155:70:19"},"returnParameters":{"id":17814,"nodeType":"ParameterList","parameters":[],"src":"80239:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17825,"nodeType":"FunctionDefinition","src":"80385:84:19","nodes":[],"documentation":{"id":17816,"nodeType":"StructuredDocumentation","src":"80246:134:19","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"80394:15:19","parameters":{"id":17823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17818,"mutability":"mutable","name":"left","nameLocation":"80417:4:19","nodeType":"VariableDeclaration","scope":17825,"src":"80410:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17817,"name":"int256","nodeType":"ElementaryTypeName","src":"80410:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17820,"mutability":"mutable","name":"right","nameLocation":"80430:5:19","nodeType":"VariableDeclaration","scope":17825,"src":"80423:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17819,"name":"int256","nodeType":"ElementaryTypeName","src":"80423:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17822,"mutability":"mutable","name":"decimals","nameLocation":"80445:8:19","nodeType":"VariableDeclaration","scope":17825,"src":"80437:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17821,"name":"uint256","nodeType":"ElementaryTypeName","src":"80437:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80409:45:19"},"returnParameters":{"id":17824,"nodeType":"ParameterList","parameters":[],"src":"80468:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17837,"nodeType":"FunctionDefinition","src":"80668:107:19","nodes":[],"documentation":{"id":17826,"nodeType":"StructuredDocumentation","src":"80475:188:19","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"80677:15:19","parameters":{"id":17835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17828,"mutability":"mutable","name":"left","nameLocation":"80700:4:19","nodeType":"VariableDeclaration","scope":17837,"src":"80693:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17827,"name":"int256","nodeType":"ElementaryTypeName","src":"80693:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17830,"mutability":"mutable","name":"right","nameLocation":"80713:5:19","nodeType":"VariableDeclaration","scope":17837,"src":"80706:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17829,"name":"int256","nodeType":"ElementaryTypeName","src":"80706:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17832,"mutability":"mutable","name":"decimals","nameLocation":"80728:8:19","nodeType":"VariableDeclaration","scope":17837,"src":"80720:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17831,"name":"uint256","nodeType":"ElementaryTypeName","src":"80720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17834,"mutability":"mutable","name":"error","nameLocation":"80754:5:19","nodeType":"VariableDeclaration","scope":17837,"src":"80738:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17833,"name":"string","nodeType":"ElementaryTypeName","src":"80738:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80692:68:19"},"returnParameters":{"id":17836,"nodeType":"ParameterList","parameters":[],"src":"80774:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17845,"nodeType":"FunctionDefinition","src":"80864:61:19","nodes":[],"documentation":{"id":17838,"nodeType":"StructuredDocumentation","src":"80781:78:19","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"80873:8:19","parameters":{"id":17843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17840,"mutability":"mutable","name":"left","nameLocation":"80890:4:19","nodeType":"VariableDeclaration","scope":17845,"src":"80882:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17839,"name":"uint256","nodeType":"ElementaryTypeName","src":"80882:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17842,"mutability":"mutable","name":"right","nameLocation":"80904:5:19","nodeType":"VariableDeclaration","scope":17845,"src":"80896:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17841,"name":"uint256","nodeType":"ElementaryTypeName","src":"80896:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80881:29:19"},"returnParameters":{"id":17844,"nodeType":"ParameterList","parameters":[],"src":"80924:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17855,"nodeType":"FunctionDefinition","src":"81076:84:19","nodes":[],"documentation":{"id":17846,"nodeType":"StructuredDocumentation","src":"80931:140:19","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"81085:8:19","parameters":{"id":17853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17848,"mutability":"mutable","name":"left","nameLocation":"81102:4:19","nodeType":"VariableDeclaration","scope":17855,"src":"81094:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17847,"name":"uint256","nodeType":"ElementaryTypeName","src":"81094:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17850,"mutability":"mutable","name":"right","nameLocation":"81116:5:19","nodeType":"VariableDeclaration","scope":17855,"src":"81108:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17849,"name":"uint256","nodeType":"ElementaryTypeName","src":"81108:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17852,"mutability":"mutable","name":"error","nameLocation":"81139:5:19","nodeType":"VariableDeclaration","scope":17855,"src":"81123:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17851,"name":"string","nodeType":"ElementaryTypeName","src":"81123:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81093:52:19"},"returnParameters":{"id":17854,"nodeType":"ParameterList","parameters":[],"src":"81159:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17863,"nodeType":"FunctionDefinition","src":"81248:59:19","nodes":[],"documentation":{"id":17856,"nodeType":"StructuredDocumentation","src":"81166:77:19","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"81257:8:19","parameters":{"id":17861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17858,"mutability":"mutable","name":"left","nameLocation":"81273:4:19","nodeType":"VariableDeclaration","scope":17863,"src":"81266:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17857,"name":"int256","nodeType":"ElementaryTypeName","src":"81266:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17860,"mutability":"mutable","name":"right","nameLocation":"81286:5:19","nodeType":"VariableDeclaration","scope":17863,"src":"81279:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17859,"name":"int256","nodeType":"ElementaryTypeName","src":"81279:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"81265:27:19"},"returnParameters":{"id":17862,"nodeType":"ParameterList","parameters":[],"src":"81306:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17873,"nodeType":"FunctionDefinition","src":"81457:82:19","nodes":[],"documentation":{"id":17864,"nodeType":"StructuredDocumentation","src":"81313:139:19","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"81466:8:19","parameters":{"id":17871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17866,"mutability":"mutable","name":"left","nameLocation":"81482:4:19","nodeType":"VariableDeclaration","scope":17873,"src":"81475:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17865,"name":"int256","nodeType":"ElementaryTypeName","src":"81475:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17868,"mutability":"mutable","name":"right","nameLocation":"81495:5:19","nodeType":"VariableDeclaration","scope":17873,"src":"81488:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17867,"name":"int256","nodeType":"ElementaryTypeName","src":"81488:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17870,"mutability":"mutable","name":"error","nameLocation":"81518:5:19","nodeType":"VariableDeclaration","scope":17873,"src":"81502:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17869,"name":"string","nodeType":"ElementaryTypeName","src":"81502:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81474:50:19"},"returnParameters":{"id":17872,"nodeType":"ParameterList","parameters":[],"src":"81538:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17883,"nodeType":"FunctionDefinition","src":"81652:89:19","nodes":[],"documentation":{"id":17874,"nodeType":"StructuredDocumentation","src":"81545:102:19","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"81661:18:19","parameters":{"id":17881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17876,"mutability":"mutable","name":"left","nameLocation":"81688:4:19","nodeType":"VariableDeclaration","scope":17883,"src":"81680:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17875,"name":"uint256","nodeType":"ElementaryTypeName","src":"81680:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17878,"mutability":"mutable","name":"right","nameLocation":"81702:5:19","nodeType":"VariableDeclaration","scope":17883,"src":"81694:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17877,"name":"uint256","nodeType":"ElementaryTypeName","src":"81694:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17880,"mutability":"mutable","name":"decimals","nameLocation":"81717:8:19","nodeType":"VariableDeclaration","scope":17883,"src":"81709:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17879,"name":"uint256","nodeType":"ElementaryTypeName","src":"81709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81679:47:19"},"returnParameters":{"id":17882,"nodeType":"ParameterList","parameters":[],"src":"81740:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17895,"nodeType":"FunctionDefinition","src":"81916:112:19","nodes":[],"documentation":{"id":17884,"nodeType":"StructuredDocumentation","src":"81747:164:19","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"81925:18:19","parameters":{"id":17893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17886,"mutability":"mutable","name":"left","nameLocation":"81952:4:19","nodeType":"VariableDeclaration","scope":17895,"src":"81944:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17885,"name":"uint256","nodeType":"ElementaryTypeName","src":"81944:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17888,"mutability":"mutable","name":"right","nameLocation":"81966:5:19","nodeType":"VariableDeclaration","scope":17895,"src":"81958:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17887,"name":"uint256","nodeType":"ElementaryTypeName","src":"81958:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17890,"mutability":"mutable","name":"decimals","nameLocation":"81981:8:19","nodeType":"VariableDeclaration","scope":17895,"src":"81973:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17889,"name":"uint256","nodeType":"ElementaryTypeName","src":"81973:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17892,"mutability":"mutable","name":"error","nameLocation":"82007:5:19","nodeType":"VariableDeclaration","scope":17895,"src":"81991:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17891,"name":"string","nodeType":"ElementaryTypeName","src":"81991:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81943:70:19"},"returnParameters":{"id":17894,"nodeType":"ParameterList","parameters":[],"src":"82027:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17905,"nodeType":"FunctionDefinition","src":"82140:87:19","nodes":[],"documentation":{"id":17896,"nodeType":"StructuredDocumentation","src":"82034:101:19","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"82149:18:19","parameters":{"id":17903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17898,"mutability":"mutable","name":"left","nameLocation":"82175:4:19","nodeType":"VariableDeclaration","scope":17905,"src":"82168:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17897,"name":"int256","nodeType":"ElementaryTypeName","src":"82168:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17900,"mutability":"mutable","name":"right","nameLocation":"82188:5:19","nodeType":"VariableDeclaration","scope":17905,"src":"82181:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17899,"name":"int256","nodeType":"ElementaryTypeName","src":"82181:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17902,"mutability":"mutable","name":"decimals","nameLocation":"82203:8:19","nodeType":"VariableDeclaration","scope":17905,"src":"82195:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17901,"name":"uint256","nodeType":"ElementaryTypeName","src":"82195:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82167:45:19"},"returnParameters":{"id":17904,"nodeType":"ParameterList","parameters":[],"src":"82226:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17917,"nodeType":"FunctionDefinition","src":"82401:110:19","nodes":[],"documentation":{"id":17906,"nodeType":"StructuredDocumentation","src":"82233:163:19","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"82410:18:19","parameters":{"id":17915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17908,"mutability":"mutable","name":"left","nameLocation":"82436:4:19","nodeType":"VariableDeclaration","scope":17917,"src":"82429:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17907,"name":"int256","nodeType":"ElementaryTypeName","src":"82429:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17910,"mutability":"mutable","name":"right","nameLocation":"82449:5:19","nodeType":"VariableDeclaration","scope":17917,"src":"82442:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17909,"name":"int256","nodeType":"ElementaryTypeName","src":"82442:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17912,"mutability":"mutable","name":"decimals","nameLocation":"82464:8:19","nodeType":"VariableDeclaration","scope":17917,"src":"82456:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17911,"name":"uint256","nodeType":"ElementaryTypeName","src":"82456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17914,"mutability":"mutable","name":"error","nameLocation":"82490:5:19","nodeType":"VariableDeclaration","scope":17917,"src":"82474:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17913,"name":"string","nodeType":"ElementaryTypeName","src":"82474:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82428:68:19"},"returnParameters":{"id":17916,"nodeType":"ParameterList","parameters":[],"src":"82510:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17925,"nodeType":"FunctionDefinition","src":"82571:58:19","nodes":[],"documentation":{"id":17918,"nodeType":"StructuredDocumentation","src":"82517:49:19","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82580:11:19","parameters":{"id":17923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17920,"mutability":"mutable","name":"left","nameLocation":"82597:4:19","nodeType":"VariableDeclaration","scope":17925,"src":"82592:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17919,"name":"bool","nodeType":"ElementaryTypeName","src":"82592:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17922,"mutability":"mutable","name":"right","nameLocation":"82608:5:19","nodeType":"VariableDeclaration","scope":17925,"src":"82603:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17921,"name":"bool","nodeType":"ElementaryTypeName","src":"82603:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82591:23:19"},"returnParameters":{"id":17924,"nodeType":"ParameterList","parameters":[],"src":"82628:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17935,"nodeType":"FunctionDefinition","src":"82746:81:19","nodes":[],"documentation":{"id":17926,"nodeType":"StructuredDocumentation","src":"82635:106:19","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82755:11:19","parameters":{"id":17933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17928,"mutability":"mutable","name":"left","nameLocation":"82772:4:19","nodeType":"VariableDeclaration","scope":17935,"src":"82767:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17927,"name":"bool","nodeType":"ElementaryTypeName","src":"82767:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17930,"mutability":"mutable","name":"right","nameLocation":"82783:5:19","nodeType":"VariableDeclaration","scope":17935,"src":"82778:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17929,"name":"bool","nodeType":"ElementaryTypeName","src":"82778:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17932,"mutability":"mutable","name":"error","nameLocation":"82806:5:19","nodeType":"VariableDeclaration","scope":17935,"src":"82790:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17931,"name":"string","nodeType":"ElementaryTypeName","src":"82790:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82766:46:19"},"returnParameters":{"id":17934,"nodeType":"ParameterList","parameters":[],"src":"82826:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17943,"nodeType":"FunctionDefinition","src":"82889:80:19","nodes":[],"documentation":{"id":17936,"nodeType":"StructuredDocumentation","src":"82833:51:19","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82898:11:19","parameters":{"id":17941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17938,"mutability":"mutable","name":"left","nameLocation":"82926:4:19","nodeType":"VariableDeclaration","scope":17943,"src":"82910:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17937,"name":"string","nodeType":"ElementaryTypeName","src":"82910:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17940,"mutability":"mutable","name":"right","nameLocation":"82948:5:19","nodeType":"VariableDeclaration","scope":17943,"src":"82932:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17939,"name":"string","nodeType":"ElementaryTypeName","src":"82932:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82909:45:19"},"returnParameters":{"id":17942,"nodeType":"ParameterList","parameters":[],"src":"82968:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17953,"nodeType":"FunctionDefinition","src":"83088:103:19","nodes":[],"documentation":{"id":17944,"nodeType":"StructuredDocumentation","src":"82975:108:19","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83097:11:19","parameters":{"id":17951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17946,"mutability":"mutable","name":"left","nameLocation":"83125:4:19","nodeType":"VariableDeclaration","scope":17953,"src":"83109:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17945,"name":"string","nodeType":"ElementaryTypeName","src":"83109:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17948,"mutability":"mutable","name":"right","nameLocation":"83147:5:19","nodeType":"VariableDeclaration","scope":17953,"src":"83131:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17947,"name":"string","nodeType":"ElementaryTypeName","src":"83131:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17950,"mutability":"mutable","name":"error","nameLocation":"83170:5:19","nodeType":"VariableDeclaration","scope":17953,"src":"83154:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17949,"name":"string","nodeType":"ElementaryTypeName","src":"83154:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83108:68:19"},"returnParameters":{"id":17952,"nodeType":"ParameterList","parameters":[],"src":"83190:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17961,"nodeType":"FunctionDefinition","src":"83252:78:19","nodes":[],"documentation":{"id":17954,"nodeType":"StructuredDocumentation","src":"83197:50:19","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83261:11:19","parameters":{"id":17959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17956,"mutability":"mutable","name":"left","nameLocation":"83288:4:19","nodeType":"VariableDeclaration","scope":17961,"src":"83273:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17955,"name":"bytes","nodeType":"ElementaryTypeName","src":"83273:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17958,"mutability":"mutable","name":"right","nameLocation":"83309:5:19","nodeType":"VariableDeclaration","scope":17961,"src":"83294:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17957,"name":"bytes","nodeType":"ElementaryTypeName","src":"83294:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"83272:43:19"},"returnParameters":{"id":17960,"nodeType":"ParameterList","parameters":[],"src":"83329:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17971,"nodeType":"FunctionDefinition","src":"83448:101:19","nodes":[],"documentation":{"id":17962,"nodeType":"StructuredDocumentation","src":"83336:107:19","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83457:11:19","parameters":{"id":17969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17964,"mutability":"mutable","name":"left","nameLocation":"83484:4:19","nodeType":"VariableDeclaration","scope":17971,"src":"83469:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17963,"name":"bytes","nodeType":"ElementaryTypeName","src":"83469:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17966,"mutability":"mutable","name":"right","nameLocation":"83505:5:19","nodeType":"VariableDeclaration","scope":17971,"src":"83490:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17965,"name":"bytes","nodeType":"ElementaryTypeName","src":"83490:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17968,"mutability":"mutable","name":"error","nameLocation":"83528:5:19","nodeType":"VariableDeclaration","scope":17971,"src":"83512:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17967,"name":"string","nodeType":"ElementaryTypeName","src":"83512:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83468:66:19"},"returnParameters":{"id":17970,"nodeType":"ParameterList","parameters":[],"src":"83548:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17981,"nodeType":"FunctionDefinition","src":"83619:80:19","nodes":[],"documentation":{"id":17972,"nodeType":"StructuredDocumentation","src":"83555:59:19","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83628:11:19","parameters":{"id":17979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17975,"mutability":"mutable","name":"left","nameLocation":"83656:4:19","nodeType":"VariableDeclaration","scope":17981,"src":"83640:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17973,"name":"bool","nodeType":"ElementaryTypeName","src":"83640:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17974,"nodeType":"ArrayTypeName","src":"83640:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17978,"mutability":"mutable","name":"right","nameLocation":"83678:5:19","nodeType":"VariableDeclaration","scope":17981,"src":"83662:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17976,"name":"bool","nodeType":"ElementaryTypeName","src":"83662:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17977,"nodeType":"ArrayTypeName","src":"83662:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"83639:45:19"},"returnParameters":{"id":17980,"nodeType":"ParameterList","parameters":[],"src":"83698:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17993,"nodeType":"FunctionDefinition","src":"83826:103:19","nodes":[],"documentation":{"id":17982,"nodeType":"StructuredDocumentation","src":"83705:116:19","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83835:11:19","parameters":{"id":17991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17985,"mutability":"mutable","name":"left","nameLocation":"83863:4:19","nodeType":"VariableDeclaration","scope":17993,"src":"83847:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17983,"name":"bool","nodeType":"ElementaryTypeName","src":"83847:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17984,"nodeType":"ArrayTypeName","src":"83847:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17988,"mutability":"mutable","name":"right","nameLocation":"83885:5:19","nodeType":"VariableDeclaration","scope":17993,"src":"83869:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17986,"name":"bool","nodeType":"ElementaryTypeName","src":"83869:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17987,"nodeType":"ArrayTypeName","src":"83869:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17990,"mutability":"mutable","name":"error","nameLocation":"83908:5:19","nodeType":"VariableDeclaration","scope":17993,"src":"83892:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17989,"name":"string","nodeType":"ElementaryTypeName","src":"83892:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83846:68:19"},"returnParameters":{"id":17992,"nodeType":"ParameterList","parameters":[],"src":"83928:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18003,"nodeType":"FunctionDefinition","src":"84002:86:19","nodes":[],"documentation":{"id":17994,"nodeType":"StructuredDocumentation","src":"83935:62:19","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84011:11:19","parameters":{"id":18001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17997,"mutability":"mutable","name":"left","nameLocation":"84042:4:19","nodeType":"VariableDeclaration","scope":18003,"src":"84023:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17995,"name":"uint256","nodeType":"ElementaryTypeName","src":"84023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17996,"nodeType":"ArrayTypeName","src":"84023:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18000,"mutability":"mutable","name":"right","nameLocation":"84067:5:19","nodeType":"VariableDeclaration","scope":18003,"src":"84048:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17998,"name":"uint256","nodeType":"ElementaryTypeName","src":"84048:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17999,"nodeType":"ArrayTypeName","src":"84048:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"84022:51:19"},"returnParameters":{"id":18002,"nodeType":"ParameterList","parameters":[],"src":"84087:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18015,"nodeType":"FunctionDefinition","src":"84218:109:19","nodes":[],"documentation":{"id":18004,"nodeType":"StructuredDocumentation","src":"84094:119:19","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84227:11:19","parameters":{"id":18013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18007,"mutability":"mutable","name":"left","nameLocation":"84258:4:19","nodeType":"VariableDeclaration","scope":18015,"src":"84239:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18005,"name":"uint256","nodeType":"ElementaryTypeName","src":"84239:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18006,"nodeType":"ArrayTypeName","src":"84239:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18010,"mutability":"mutable","name":"right","nameLocation":"84283:5:19","nodeType":"VariableDeclaration","scope":18015,"src":"84264:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18008,"name":"uint256","nodeType":"ElementaryTypeName","src":"84264:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18009,"nodeType":"ArrayTypeName","src":"84264:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18012,"mutability":"mutable","name":"error","nameLocation":"84306:5:19","nodeType":"VariableDeclaration","scope":18015,"src":"84290:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18011,"name":"string","nodeType":"ElementaryTypeName","src":"84290:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84238:74:19"},"returnParameters":{"id":18014,"nodeType":"ParameterList","parameters":[],"src":"84326:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18025,"nodeType":"FunctionDefinition","src":"84399:84:19","nodes":[],"documentation":{"id":18016,"nodeType":"StructuredDocumentation","src":"84333:61:19","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84408:11:19","parameters":{"id":18023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18019,"mutability":"mutable","name":"left","nameLocation":"84438:4:19","nodeType":"VariableDeclaration","scope":18025,"src":"84420:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18017,"name":"int256","nodeType":"ElementaryTypeName","src":"84420:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18018,"nodeType":"ArrayTypeName","src":"84420:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18022,"mutability":"mutable","name":"right","nameLocation":"84462:5:19","nodeType":"VariableDeclaration","scope":18025,"src":"84444:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18020,"name":"int256","nodeType":"ElementaryTypeName","src":"84444:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18021,"nodeType":"ArrayTypeName","src":"84444:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"84419:49:19"},"returnParameters":{"id":18024,"nodeType":"ParameterList","parameters":[],"src":"84482:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18037,"nodeType":"FunctionDefinition","src":"84612:107:19","nodes":[],"documentation":{"id":18026,"nodeType":"StructuredDocumentation","src":"84489:118:19","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84621:11:19","parameters":{"id":18035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18029,"mutability":"mutable","name":"left","nameLocation":"84651:4:19","nodeType":"VariableDeclaration","scope":18037,"src":"84633:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18027,"name":"int256","nodeType":"ElementaryTypeName","src":"84633:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18028,"nodeType":"ArrayTypeName","src":"84633:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18032,"mutability":"mutable","name":"right","nameLocation":"84675:5:19","nodeType":"VariableDeclaration","scope":18037,"src":"84657:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18030,"name":"int256","nodeType":"ElementaryTypeName","src":"84657:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18031,"nodeType":"ArrayTypeName","src":"84657:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18034,"mutability":"mutable","name":"error","nameLocation":"84698:5:19","nodeType":"VariableDeclaration","scope":18037,"src":"84682:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18033,"name":"string","nodeType":"ElementaryTypeName","src":"84682:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84632:72:19"},"returnParameters":{"id":18036,"nodeType":"ParameterList","parameters":[],"src":"84718:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18045,"nodeType":"FunctionDefinition","src":"84782:64:19","nodes":[],"documentation":{"id":18038,"nodeType":"StructuredDocumentation","src":"84725:52:19","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84791:11:19","parameters":{"id":18043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18040,"mutability":"mutable","name":"left","nameLocation":"84811:4:19","nodeType":"VariableDeclaration","scope":18045,"src":"84803:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18039,"name":"uint256","nodeType":"ElementaryTypeName","src":"84803:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18042,"mutability":"mutable","name":"right","nameLocation":"84825:5:19","nodeType":"VariableDeclaration","scope":18045,"src":"84817:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18041,"name":"uint256","nodeType":"ElementaryTypeName","src":"84817:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84802:29:19"},"returnParameters":{"id":18044,"nodeType":"ParameterList","parameters":[],"src":"84845:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18055,"nodeType":"FunctionDefinition","src":"84919:86:19","nodes":[],"documentation":{"id":18046,"nodeType":"StructuredDocumentation","src":"84852:62:19","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84928:11:19","parameters":{"id":18053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18049,"mutability":"mutable","name":"left","nameLocation":"84959:4:19","nodeType":"VariableDeclaration","scope":18055,"src":"84940:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18047,"name":"address","nodeType":"ElementaryTypeName","src":"84940:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18048,"nodeType":"ArrayTypeName","src":"84940:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18052,"mutability":"mutable","name":"right","nameLocation":"84984:5:19","nodeType":"VariableDeclaration","scope":18055,"src":"84965:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18050,"name":"address","nodeType":"ElementaryTypeName","src":"84965:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18051,"nodeType":"ArrayTypeName","src":"84965:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"84939:51:19"},"returnParameters":{"id":18054,"nodeType":"ParameterList","parameters":[],"src":"85004:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18067,"nodeType":"FunctionDefinition","src":"85135:109:19","nodes":[],"documentation":{"id":18056,"nodeType":"StructuredDocumentation","src":"85011:119:19","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85144:11:19","parameters":{"id":18065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18059,"mutability":"mutable","name":"left","nameLocation":"85175:4:19","nodeType":"VariableDeclaration","scope":18067,"src":"85156:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18057,"name":"address","nodeType":"ElementaryTypeName","src":"85156:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18058,"nodeType":"ArrayTypeName","src":"85156:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18062,"mutability":"mutable","name":"right","nameLocation":"85200:5:19","nodeType":"VariableDeclaration","scope":18067,"src":"85181:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18060,"name":"address","nodeType":"ElementaryTypeName","src":"85181:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18061,"nodeType":"ArrayTypeName","src":"85181:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18064,"mutability":"mutable","name":"error","nameLocation":"85223:5:19","nodeType":"VariableDeclaration","scope":18067,"src":"85207:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18063,"name":"string","nodeType":"ElementaryTypeName","src":"85207:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85155:74:19"},"returnParameters":{"id":18066,"nodeType":"ParameterList","parameters":[],"src":"85243:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18077,"nodeType":"FunctionDefinition","src":"85317:86:19","nodes":[],"documentation":{"id":18068,"nodeType":"StructuredDocumentation","src":"85250:62:19","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85326:11:19","parameters":{"id":18075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18071,"mutability":"mutable","name":"left","nameLocation":"85357:4:19","nodeType":"VariableDeclaration","scope":18077,"src":"85338:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85338:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18070,"nodeType":"ArrayTypeName","src":"85338:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18074,"mutability":"mutable","name":"right","nameLocation":"85382:5:19","nodeType":"VariableDeclaration","scope":18077,"src":"85363:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85363:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18073,"nodeType":"ArrayTypeName","src":"85363:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"85337:51:19"},"returnParameters":{"id":18076,"nodeType":"ParameterList","parameters":[],"src":"85402:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18089,"nodeType":"FunctionDefinition","src":"85533:109:19","nodes":[],"documentation":{"id":18078,"nodeType":"StructuredDocumentation","src":"85409:119:19","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85542:11:19","parameters":{"id":18087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18081,"mutability":"mutable","name":"left","nameLocation":"85573:4:19","nodeType":"VariableDeclaration","scope":18089,"src":"85554:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85554:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18080,"nodeType":"ArrayTypeName","src":"85554:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18084,"mutability":"mutable","name":"right","nameLocation":"85598:5:19","nodeType":"VariableDeclaration","scope":18089,"src":"85579:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85579:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18083,"nodeType":"ArrayTypeName","src":"85579:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18086,"mutability":"mutable","name":"error","nameLocation":"85621:5:19","nodeType":"VariableDeclaration","scope":18089,"src":"85605:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18085,"name":"string","nodeType":"ElementaryTypeName","src":"85605:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85553:74:19"},"returnParameters":{"id":18088,"nodeType":"ParameterList","parameters":[],"src":"85641:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18099,"nodeType":"FunctionDefinition","src":"85714:84:19","nodes":[],"documentation":{"id":18090,"nodeType":"StructuredDocumentation","src":"85648:61:19","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85723:11:19","parameters":{"id":18097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18093,"mutability":"mutable","name":"left","nameLocation":"85753:4:19","nodeType":"VariableDeclaration","scope":18099,"src":"85735:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18091,"name":"string","nodeType":"ElementaryTypeName","src":"85735:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18092,"nodeType":"ArrayTypeName","src":"85735:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18096,"mutability":"mutable","name":"right","nameLocation":"85777:5:19","nodeType":"VariableDeclaration","scope":18099,"src":"85759:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18094,"name":"string","nodeType":"ElementaryTypeName","src":"85759:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18095,"nodeType":"ArrayTypeName","src":"85759:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"85734:49:19"},"returnParameters":{"id":18098,"nodeType":"ParameterList","parameters":[],"src":"85797:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18111,"nodeType":"FunctionDefinition","src":"85927:107:19","nodes":[],"documentation":{"id":18100,"nodeType":"StructuredDocumentation","src":"85804:118:19","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85936:11:19","parameters":{"id":18109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18103,"mutability":"mutable","name":"left","nameLocation":"85966:4:19","nodeType":"VariableDeclaration","scope":18111,"src":"85948:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18101,"name":"string","nodeType":"ElementaryTypeName","src":"85948:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18102,"nodeType":"ArrayTypeName","src":"85948:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18106,"mutability":"mutable","name":"right","nameLocation":"85990:5:19","nodeType":"VariableDeclaration","scope":18111,"src":"85972:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18104,"name":"string","nodeType":"ElementaryTypeName","src":"85972:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18105,"nodeType":"ArrayTypeName","src":"85972:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18108,"mutability":"mutable","name":"error","nameLocation":"86013:5:19","nodeType":"VariableDeclaration","scope":18111,"src":"85997:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18107,"name":"string","nodeType":"ElementaryTypeName","src":"85997:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85947:72:19"},"returnParameters":{"id":18110,"nodeType":"ParameterList","parameters":[],"src":"86033:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18121,"nodeType":"FunctionDefinition","src":"86105:82:19","nodes":[],"documentation":{"id":18112,"nodeType":"StructuredDocumentation","src":"86040:60:19","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86114:11:19","parameters":{"id":18119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18115,"mutability":"mutable","name":"left","nameLocation":"86143:4:19","nodeType":"VariableDeclaration","scope":18121,"src":"86126:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18113,"name":"bytes","nodeType":"ElementaryTypeName","src":"86126:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18114,"nodeType":"ArrayTypeName","src":"86126:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18118,"mutability":"mutable","name":"right","nameLocation":"86166:5:19","nodeType":"VariableDeclaration","scope":18121,"src":"86149:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18116,"name":"bytes","nodeType":"ElementaryTypeName","src":"86149:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18117,"nodeType":"ArrayTypeName","src":"86149:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"86125:47:19"},"returnParameters":{"id":18120,"nodeType":"ParameterList","parameters":[],"src":"86186:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18133,"nodeType":"FunctionDefinition","src":"86315:105:19","nodes":[],"documentation":{"id":18122,"nodeType":"StructuredDocumentation","src":"86193:117:19","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86324:11:19","parameters":{"id":18131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18125,"mutability":"mutable","name":"left","nameLocation":"86353:4:19","nodeType":"VariableDeclaration","scope":18133,"src":"86336:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18123,"name":"bytes","nodeType":"ElementaryTypeName","src":"86336:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18124,"nodeType":"ArrayTypeName","src":"86336:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18128,"mutability":"mutable","name":"right","nameLocation":"86376:5:19","nodeType":"VariableDeclaration","scope":18133,"src":"86359:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18126,"name":"bytes","nodeType":"ElementaryTypeName","src":"86359:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18127,"nodeType":"ArrayTypeName","src":"86359:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18130,"mutability":"mutable","name":"error","nameLocation":"86399:5:19","nodeType":"VariableDeclaration","scope":18133,"src":"86383:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18129,"name":"string","nodeType":"ElementaryTypeName","src":"86383:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86335:70:19"},"returnParameters":{"id":18132,"nodeType":"ParameterList","parameters":[],"src":"86419:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18143,"nodeType":"FunctionDefinition","src":"86540:87:19","nodes":[],"documentation":{"id":18134,"nodeType":"StructuredDocumentation","src":"86426:109:19","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86549:11:19","parameters":{"id":18141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18136,"mutability":"mutable","name":"left","nameLocation":"86569:4:19","nodeType":"VariableDeclaration","scope":18143,"src":"86561:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18135,"name":"uint256","nodeType":"ElementaryTypeName","src":"86561:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18138,"mutability":"mutable","name":"right","nameLocation":"86583:5:19","nodeType":"VariableDeclaration","scope":18143,"src":"86575:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18137,"name":"uint256","nodeType":"ElementaryTypeName","src":"86575:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18140,"mutability":"mutable","name":"error","nameLocation":"86606:5:19","nodeType":"VariableDeclaration","scope":18143,"src":"86590:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18139,"name":"string","nodeType":"ElementaryTypeName","src":"86590:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86560:52:19"},"returnParameters":{"id":18142,"nodeType":"ParameterList","parameters":[],"src":"86626:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18151,"nodeType":"FunctionDefinition","src":"86689:62:19","nodes":[],"documentation":{"id":18144,"nodeType":"StructuredDocumentation","src":"86633:51:19","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86698:11:19","parameters":{"id":18149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18146,"mutability":"mutable","name":"left","nameLocation":"86717:4:19","nodeType":"VariableDeclaration","scope":18151,"src":"86710:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18145,"name":"int256","nodeType":"ElementaryTypeName","src":"86710:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18148,"mutability":"mutable","name":"right","nameLocation":"86730:5:19","nodeType":"VariableDeclaration","scope":18151,"src":"86723:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18147,"name":"int256","nodeType":"ElementaryTypeName","src":"86723:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"86709:27:19"},"returnParameters":{"id":18150,"nodeType":"ParameterList","parameters":[],"src":"86750:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18161,"nodeType":"FunctionDefinition","src":"86870:85:19","nodes":[],"documentation":{"id":18152,"nodeType":"StructuredDocumentation","src":"86757:108:19","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86879:11:19","parameters":{"id":18159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18154,"mutability":"mutable","name":"left","nameLocation":"86898:4:19","nodeType":"VariableDeclaration","scope":18161,"src":"86891:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18153,"name":"int256","nodeType":"ElementaryTypeName","src":"86891:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18156,"mutability":"mutable","name":"right","nameLocation":"86911:5:19","nodeType":"VariableDeclaration","scope":18161,"src":"86904:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18155,"name":"int256","nodeType":"ElementaryTypeName","src":"86904:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18158,"mutability":"mutable","name":"error","nameLocation":"86934:5:19","nodeType":"VariableDeclaration","scope":18161,"src":"86918:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18157,"name":"string","nodeType":"ElementaryTypeName","src":"86918:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86890:50:19"},"returnParameters":{"id":18160,"nodeType":"ParameterList","parameters":[],"src":"86954:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18169,"nodeType":"FunctionDefinition","src":"87018:64:19","nodes":[],"documentation":{"id":18162,"nodeType":"StructuredDocumentation","src":"86961:52:19","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87027:11:19","parameters":{"id":18167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18164,"mutability":"mutable","name":"left","nameLocation":"87047:4:19","nodeType":"VariableDeclaration","scope":18169,"src":"87039:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18163,"name":"address","nodeType":"ElementaryTypeName","src":"87039:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18166,"mutability":"mutable","name":"right","nameLocation":"87061:5:19","nodeType":"VariableDeclaration","scope":18169,"src":"87053:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18165,"name":"address","nodeType":"ElementaryTypeName","src":"87053:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"87038:29:19"},"returnParameters":{"id":18168,"nodeType":"ParameterList","parameters":[],"src":"87081:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18179,"nodeType":"FunctionDefinition","src":"87202:87:19","nodes":[],"documentation":{"id":18170,"nodeType":"StructuredDocumentation","src":"87088:109:19","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87211:11:19","parameters":{"id":18177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18172,"mutability":"mutable","name":"left","nameLocation":"87231:4:19","nodeType":"VariableDeclaration","scope":18179,"src":"87223:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18171,"name":"address","nodeType":"ElementaryTypeName","src":"87223:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18174,"mutability":"mutable","name":"right","nameLocation":"87245:5:19","nodeType":"VariableDeclaration","scope":18179,"src":"87237:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18173,"name":"address","nodeType":"ElementaryTypeName","src":"87237:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18176,"mutability":"mutable","name":"error","nameLocation":"87268:5:19","nodeType":"VariableDeclaration","scope":18179,"src":"87252:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18175,"name":"string","nodeType":"ElementaryTypeName","src":"87252:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87222:52:19"},"returnParameters":{"id":18178,"nodeType":"ParameterList","parameters":[],"src":"87288:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18187,"nodeType":"FunctionDefinition","src":"87352:64:19","nodes":[],"documentation":{"id":18180,"nodeType":"StructuredDocumentation","src":"87295:52:19","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87361:11:19","parameters":{"id":18185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18182,"mutability":"mutable","name":"left","nameLocation":"87381:4:19","nodeType":"VariableDeclaration","scope":18187,"src":"87373:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87373:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18184,"mutability":"mutable","name":"right","nameLocation":"87395:5:19","nodeType":"VariableDeclaration","scope":18187,"src":"87387:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87387:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87372:29:19"},"returnParameters":{"id":18186,"nodeType":"ParameterList","parameters":[],"src":"87415:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18197,"nodeType":"FunctionDefinition","src":"87536:87:19","nodes":[],"documentation":{"id":18188,"nodeType":"StructuredDocumentation","src":"87422:109:19","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87545:11:19","parameters":{"id":18195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18190,"mutability":"mutable","name":"left","nameLocation":"87565:4:19","nodeType":"VariableDeclaration","scope":18197,"src":"87557:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87557:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18192,"mutability":"mutable","name":"right","nameLocation":"87579:5:19","nodeType":"VariableDeclaration","scope":18197,"src":"87571:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87571:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18194,"mutability":"mutable","name":"error","nameLocation":"87602:5:19","nodeType":"VariableDeclaration","scope":18197,"src":"87586:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18193,"name":"string","nodeType":"ElementaryTypeName","src":"87586:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87556:52:19"},"returnParameters":{"id":18196,"nodeType":"ParameterList","parameters":[],"src":"87622:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18203,"nodeType":"FunctionDefinition","src":"87679:50:19","nodes":[],"documentation":{"id":18198,"nodeType":"StructuredDocumentation","src":"87629:45:19","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"87688:10:19","parameters":{"id":18201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18200,"mutability":"mutable","name":"condition","nameLocation":"87704:9:19","nodeType":"VariableDeclaration","scope":18203,"src":"87699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18199,"name":"bool","nodeType":"ElementaryTypeName","src":"87699:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"87698:16:19"},"returnParameters":{"id":18202,"nodeType":"ParameterList","parameters":[],"src":"87728:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18211,"nodeType":"FunctionDefinition","src":"87842:73:19","nodes":[],"documentation":{"id":18204,"nodeType":"StructuredDocumentation","src":"87735:102:19","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"87851:10:19","parameters":{"id":18209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18206,"mutability":"mutable","name":"condition","nameLocation":"87867:9:19","nodeType":"VariableDeclaration","scope":18211,"src":"87862:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18205,"name":"bool","nodeType":"ElementaryTypeName","src":"87862:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18208,"mutability":"mutable","name":"error","nameLocation":"87894:5:19","nodeType":"VariableDeclaration","scope":18211,"src":"87878:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18207,"name":"string","nodeType":"ElementaryTypeName","src":"87878:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87861:39:19"},"returnParameters":{"id":18210,"nodeType":"ParameterList","parameters":[],"src":"87914:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18217,"nodeType":"FunctionDefinition","src":"88010:46:19","nodes":[],"documentation":{"id":18212,"nodeType":"StructuredDocumentation","src":"87921:84:19","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"88019:6:19","parameters":{"id":18215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18214,"mutability":"mutable","name":"condition","nameLocation":"88031:9:19","nodeType":"VariableDeclaration","scope":18217,"src":"88026:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18213,"name":"bool","nodeType":"ElementaryTypeName","src":"88026:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88025:16:19"},"returnParameters":{"id":18216,"nodeType":"ParameterList","parameters":[],"src":"88055:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18221,"nodeType":"FunctionDefinition","src":"88146:40:19","nodes":[],"documentation":{"id":18218,"nodeType":"StructuredDocumentation","src":"88062:79:19","text":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"functionSelector":"285b366a","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"88155:14:19","parameters":{"id":18219,"nodeType":"ParameterList","parameters":[],"src":"88169:2:19"},"returnParameters":{"id":18220,"nodeType":"ParameterList","parameters":[],"src":"88185:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18228,"nodeType":"FunctionDefinition","src":"88312:80:19","nodes":[],"documentation":{"id":18222,"nodeType":"StructuredDocumentation","src":"88192:115:19","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"functionSelector":"d8591eeb","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"88321:14:19","parameters":{"id":18226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18225,"mutability":"mutable","name":"potentialRevert","nameLocation":"88361:15:19","nodeType":"VariableDeclaration","scope":18228,"src":"88336:40:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$15021_calldata_ptr","typeString":"struct VmSafe.PotentialRevert"},"typeName":{"id":18224,"nodeType":"UserDefinedTypeName","pathNode":{"id":18223,"name":"PotentialRevert","nameLocations":["88336:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":15021,"src":"88336:15:19"},"referencedDeclaration":15021,"src":"88336:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$15021_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"visibility":"internal"}],"src":"88335:42:19"},"returnParameters":{"id":18227,"nodeType":"ParameterList","parameters":[],"src":"88391:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18236,"nodeType":"FunctionDefinition","src":"88529:83:19","nodes":[],"documentation":{"id":18229,"nodeType":"StructuredDocumentation","src":"88398:126:19","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"functionSelector":"8a4592cc","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"88538:14:19","parameters":{"id":18234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18233,"mutability":"mutable","name":"potentialReverts","nameLocation":"88580:16:19","nodeType":"VariableDeclaration","scope":18236,"src":"88553:43:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$15021_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.PotentialRevert[]"},"typeName":{"baseType":{"id":18231,"nodeType":"UserDefinedTypeName","pathNode":{"id":18230,"name":"PotentialRevert","nameLocations":["88553:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":15021,"src":"88553:15:19"},"referencedDeclaration":15021,"src":"88553:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$15021_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"id":18232,"nodeType":"ArrayTypeName","src":"88553:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$15021_storage_$dyn_storage_ptr","typeString":"struct VmSafe.PotentialRevert[]"}},"visibility":"internal"}],"src":"88552:45:19"},"returnParameters":{"id":18235,"nodeType":"ParameterList","parameters":[],"src":"88611:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18242,"nodeType":"FunctionDefinition","src":"88674:56:19","nodes":[],"documentation":{"id":18237,"nodeType":"StructuredDocumentation","src":"88618:51:19","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"88683:10:19","parameters":{"id":18240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18239,"mutability":"mutable","name":"char","nameLocation":"88710:4:19","nodeType":"VariableDeclaration","scope":18242,"src":"88694:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18238,"name":"string","nodeType":"ElementaryTypeName","src":"88694:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88693:22:19"},"returnParameters":{"id":18241,"nodeType":"ParameterList","parameters":[],"src":"88729:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18250,"nodeType":"FunctionDefinition","src":"88804:68:19","nodes":[],"documentation":{"id":18243,"nodeType":"StructuredDocumentation","src":"88736:63:19","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"88813:10:19","parameters":{"id":18248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18245,"mutability":"mutable","name":"char","nameLocation":"88840:4:19","nodeType":"VariableDeclaration","scope":18250,"src":"88824:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18244,"name":"string","nodeType":"ElementaryTypeName","src":"88824:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18247,"mutability":"mutable","name":"value","nameLocation":"88851:5:19","nodeType":"VariableDeclaration","scope":18250,"src":"88846:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18246,"name":"bool","nodeType":"ElementaryTypeName","src":"88846:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88823:34:19"},"returnParameters":{"id":18249,"nodeType":"ParameterList","parameters":[],"src":"88871:0:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18258,"nodeType":"FunctionDefinition","src":"89118:85:19","nodes":[],"documentation":{"id":18251,"nodeType":"StructuredDocumentation","src":"88878:235:19","text":"Returns true if the current Foundry version is greater than or equal to the given version.\n The given version string must be in the format `major.minor.patch`.\n This is equivalent to `foundryVersionCmp(version) >= 0`."},"functionSelector":"6248be1f","implemented":false,"kind":"function","modifiers":[],"name":"foundryVersionAtLeast","nameLocation":"89127:21:19","parameters":{"id":18254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18253,"mutability":"mutable","name":"version","nameLocation":"89165:7:19","nodeType":"VariableDeclaration","scope":18258,"src":"89149:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18252,"name":"string","nodeType":"ElementaryTypeName","src":"89149:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89148:25:19"},"returnParameters":{"id":18257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18258,"src":"89197:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18255,"name":"bool","nodeType":"ElementaryTypeName","src":"89197:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"89196:6:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18266,"nodeType":"FunctionDefinition","src":"89810:83:19","nodes":[],"documentation":{"id":18259,"nodeType":"StructuredDocumentation","src":"89209:596:19","text":"Compares the current Foundry version with the given version string.\n The given version string must be in the format `major.minor.patch`.\n Returns:\n -1 if current Foundry version is less than the given version\n 0 if current Foundry version equals the given version\n 1 if current Foundry version is greater than the given version\n This result can then be used with a comparison operator against `0`.\n For example, to check if the current Foundry version is greater than or equal to `1.0.0`:\n `if (foundryVersionCmp(\"1.0.0\") >= 0) { ... }`"},"functionSelector":"ca7b0a09","implemented":false,"kind":"function","modifiers":[],"name":"foundryVersionCmp","nameLocation":"89819:17:19","parameters":{"id":18262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18261,"mutability":"mutable","name":"version","nameLocation":"89853:7:19","nodeType":"VariableDeclaration","scope":18266,"src":"89837:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18260,"name":"string","nodeType":"ElementaryTypeName","src":"89837:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89836:25:19"},"returnParameters":{"id":18265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18266,"src":"89885:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18263,"name":"int256","nodeType":"ElementaryTypeName","src":"89885:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"89884:8:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18275,"nodeType":"FunctionDefinition","src":"89949:89:19","nodes":[],"documentation":{"id":18267,"nodeType":"StructuredDocumentation","src":"89899:45:19","text":"Returns a Chain struct for specific alias"},"functionSelector":"4cc1c2bb","implemented":false,"kind":"function","modifiers":[],"name":"getChain","nameLocation":"89958:8:19","parameters":{"id":18270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18269,"mutability":"mutable","name":"chainAlias","nameLocation":"89983:10:19","nodeType":"VariableDeclaration","scope":18275,"src":"89967:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18268,"name":"string","nodeType":"ElementaryTypeName","src":"89967:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89966:28:19"},"returnParameters":{"id":18274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18273,"mutability":"mutable","name":"chain","nameLocation":"90031:5:19","nodeType":"VariableDeclaration","scope":18275,"src":"90018:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$14915_memory_ptr","typeString":"struct VmSafe.Chain"},"typeName":{"id":18272,"nodeType":"UserDefinedTypeName","pathNode":{"id":18271,"name":"Chain","nameLocations":["90018:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":14915,"src":"90018:5:19"},"referencedDeclaration":14915,"src":"90018:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$14915_storage_ptr","typeString":"struct VmSafe.Chain"}},"visibility":"internal"}],"src":"90017:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18284,"nodeType":"FunctionDefinition","src":"90096:78:19","nodes":[],"documentation":{"id":18276,"nodeType":"StructuredDocumentation","src":"90044:47:19","text":"Returns a Chain struct for specific chainId"},"functionSelector":"b6791ad4","implemented":false,"kind":"function","modifiers":[],"name":"getChain","nameLocation":"90105:8:19","parameters":{"id":18279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18278,"mutability":"mutable","name":"chainId","nameLocation":"90122:7:19","nodeType":"VariableDeclaration","scope":18284,"src":"90114:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18277,"name":"uint256","nodeType":"ElementaryTypeName","src":"90114:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90113:17:19"},"returnParameters":{"id":18283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18282,"mutability":"mutable","name":"chain","nameLocation":"90167:5:19","nodeType":"VariableDeclaration","scope":18284,"src":"90154:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$14915_memory_ptr","typeString":"struct VmSafe.Chain"},"typeName":{"id":18281,"nodeType":"UserDefinedTypeName","pathNode":{"id":18280,"name":"Chain","nameLocations":["90154:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":14915,"src":"90154:5:19"},"referencedDeclaration":14915,"src":"90154:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$14915_storage_ptr","typeString":"struct VmSafe.Chain"}},"visibility":"internal"}],"src":"90153:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18290,"nodeType":"FunctionDefinition","src":"90609:75:19","nodes":[],"documentation":{"id":18285,"nodeType":"StructuredDocumentation","src":"90180:424:19","text":"Returns the Foundry version.\n Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile>\n Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use UNIX format (e.g., >= 1700000000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"90618:17:19","parameters":{"id":18286,"nodeType":"ParameterList","parameters":[],"src":"90635:2:19"},"returnParameters":{"id":18289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18288,"mutability":"mutable","name":"version","nameLocation":"90675:7:19","nodeType":"VariableDeclaration","scope":18290,"src":"90661:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18287,"name":"string","nodeType":"ElementaryTypeName","src":"90661:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90660:23:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18298,"nodeType":"FunctionDefinition","src":"90739:85:19","nodes":[],"documentation":{"id":18291,"nodeType":"StructuredDocumentation","src":"90690:44:19","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"90748:6:19","parameters":{"id":18294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18293,"mutability":"mutable","name":"rpcAlias","nameLocation":"90771:8:19","nodeType":"VariableDeclaration","scope":18298,"src":"90755:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18292,"name":"string","nodeType":"ElementaryTypeName","src":"90755:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90754:26:19"},"returnParameters":{"id":18297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18296,"mutability":"mutable","name":"json","nameLocation":"90818:4:19","nodeType":"VariableDeclaration","scope":18298,"src":"90804:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18295,"name":"string","nodeType":"ElementaryTypeName","src":"90804:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90803:20:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18306,"nodeType":"FunctionDefinition","src":"90889:67:19","nodes":[],"documentation":{"id":18299,"nodeType":"StructuredDocumentation","src":"90830:54:19","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"90898:13:19","parameters":{"id":18300,"nodeType":"ParameterList","parameters":[],"src":"90911:2:19"},"returnParameters":{"id":18305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18304,"mutability":"mutable","name":"urls","nameLocation":"90950:4:19","nodeType":"VariableDeclaration","scope":18306,"src":"90937:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$14832_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":18302,"nodeType":"UserDefinedTypeName","pathNode":{"id":18301,"name":"Rpc","nameLocations":["90937:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":14832,"src":"90937:3:19"},"referencedDeclaration":14832,"src":"90937:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$14832_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":18303,"nodeType":"ArrayTypeName","src":"90937:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$14832_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"90936:19:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18315,"nodeType":"FunctionDefinition","src":"91027:67:19","nodes":[],"documentation":{"id":18307,"nodeType":"StructuredDocumentation","src":"90962:60:19","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"91036:7:19","parameters":{"id":18308,"nodeType":"ParameterList","parameters":[],"src":"91043:2:19"},"returnParameters":{"id":18314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18313,"mutability":"mutable","name":"urls","nameLocation":"91088:4:19","nodeType":"VariableDeclaration","scope":18315,"src":"91069:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":18309,"name":"string","nodeType":"ElementaryTypeName","src":"91069:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18311,"length":{"hexValue":"32","id":18310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"91076:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"91069:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":18312,"nodeType":"ArrayTypeName","src":"91069:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"91068:25:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18321,"nodeType":"FunctionDefinition","src":"91175:42:19","nodes":[],"documentation":{"id":18316,"nodeType":"StructuredDocumentation","src":"91100:70:19","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"91184:5:19","parameters":{"id":18319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18318,"mutability":"mutable","name":"duration","nameLocation":"91198:8:19","nodeType":"VariableDeclaration","scope":18321,"src":"91190:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18317,"name":"uint256","nodeType":"ElementaryTypeName","src":"91190:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91189:18:19"},"returnParameters":{"id":18320,"nodeType":"ParameterList","parameters":[],"src":"91216:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18331,"nodeType":"FunctionDefinition","src":"91302:95:19","nodes":[],"documentation":{"id":18322,"nodeType":"StructuredDocumentation","src":"91254:43:19","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"91311:13:19","parameters":{"id":18327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18324,"mutability":"mutable","name":"toml","nameLocation":"91341:4:19","nodeType":"VariableDeclaration","scope":18331,"src":"91325:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18323,"name":"string","nodeType":"ElementaryTypeName","src":"91325:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18326,"mutability":"mutable","name":"key","nameLocation":"91363:3:19","nodeType":"VariableDeclaration","scope":18331,"src":"91347:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18325,"name":"string","nodeType":"ElementaryTypeName","src":"91347:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91324:43:19"},"returnParameters":{"id":18330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18331,"src":"91391:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18328,"name":"bool","nodeType":"ElementaryTypeName","src":"91391:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"91390:6:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18341,"nodeType":"FunctionDefinition","src":"91478:101:19","nodes":[],"documentation":{"id":18332,"nodeType":"StructuredDocumentation","src":"91403:70:19","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"91487:16:19","parameters":{"id":18337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18334,"mutability":"mutable","name":"toml","nameLocation":"91520:4:19","nodeType":"VariableDeclaration","scope":18341,"src":"91504:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18333,"name":"string","nodeType":"ElementaryTypeName","src":"91504:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18336,"mutability":"mutable","name":"key","nameLocation":"91542:3:19","nodeType":"VariableDeclaration","scope":18341,"src":"91526:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18335,"name":"string","nodeType":"ElementaryTypeName","src":"91526:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91503:43:19"},"returnParameters":{"id":18340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18341,"src":"91570:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18338,"name":"address","nodeType":"ElementaryTypeName","src":"91570:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91569:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18352,"nodeType":"FunctionDefinition","src":"91662:139:19","nodes":[],"documentation":{"id":18342,"nodeType":"StructuredDocumentation","src":"91585:72:19","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"91671:21:19","parameters":{"id":18347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18344,"mutability":"mutable","name":"toml","nameLocation":"91709:4:19","nodeType":"VariableDeclaration","scope":18352,"src":"91693:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18343,"name":"string","nodeType":"ElementaryTypeName","src":"91693:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18346,"mutability":"mutable","name":"key","nameLocation":"91731:3:19","nodeType":"VariableDeclaration","scope":18352,"src":"91715:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18345,"name":"string","nodeType":"ElementaryTypeName","src":"91715:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91692:43:19"},"returnParameters":{"id":18351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18352,"src":"91783:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18348,"name":"address","nodeType":"ElementaryTypeName","src":"91783:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18349,"nodeType":"ArrayTypeName","src":"91783:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"91782:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18362,"nodeType":"FunctionDefinition","src":"91879:95:19","nodes":[],"documentation":{"id":18353,"nodeType":"StructuredDocumentation","src":"91807:67:19","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"91888:13:19","parameters":{"id":18358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18355,"mutability":"mutable","name":"toml","nameLocation":"91918:4:19","nodeType":"VariableDeclaration","scope":18362,"src":"91902:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18354,"name":"string","nodeType":"ElementaryTypeName","src":"91902:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18357,"mutability":"mutable","name":"key","nameLocation":"91940:3:19","nodeType":"VariableDeclaration","scope":18362,"src":"91924:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18356,"name":"string","nodeType":"ElementaryTypeName","src":"91924:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91901:43:19"},"returnParameters":{"id":18361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18362,"src":"91968:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18359,"name":"bool","nodeType":"ElementaryTypeName","src":"91968:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"91967:6:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18373,"nodeType":"FunctionDefinition","src":"92054:109:19","nodes":[],"documentation":{"id":18363,"nodeType":"StructuredDocumentation","src":"91980:69:19","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"92063:18:19","parameters":{"id":18368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18365,"mutability":"mutable","name":"toml","nameLocation":"92098:4:19","nodeType":"VariableDeclaration","scope":18373,"src":"92082:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18364,"name":"string","nodeType":"ElementaryTypeName","src":"92082:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18367,"mutability":"mutable","name":"key","nameLocation":"92120:3:19","nodeType":"VariableDeclaration","scope":18373,"src":"92104:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18366,"name":"string","nodeType":"ElementaryTypeName","src":"92104:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92081:43:19"},"returnParameters":{"id":18372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18373,"src":"92148:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18369,"name":"bool","nodeType":"ElementaryTypeName","src":"92148:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18370,"nodeType":"ArrayTypeName","src":"92148:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"92147:15:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18383,"nodeType":"FunctionDefinition","src":"92242:104:19","nodes":[],"documentation":{"id":18374,"nodeType":"StructuredDocumentation","src":"92169:68:19","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"92251:14:19","parameters":{"id":18379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18376,"mutability":"mutable","name":"toml","nameLocation":"92282:4:19","nodeType":"VariableDeclaration","scope":18383,"src":"92266:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18375,"name":"string","nodeType":"ElementaryTypeName","src":"92266:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18378,"mutability":"mutable","name":"key","nameLocation":"92304:3:19","nodeType":"VariableDeclaration","scope":18383,"src":"92288:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18377,"name":"string","nodeType":"ElementaryTypeName","src":"92288:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92265:43:19"},"returnParameters":{"id":18382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18383,"src":"92332:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18380,"name":"bytes","nodeType":"ElementaryTypeName","src":"92332:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92331:14:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18393,"nodeType":"FunctionDefinition","src":"92427:101:19","nodes":[],"documentation":{"id":18384,"nodeType":"StructuredDocumentation","src":"92352:70:19","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"92436:16:19","parameters":{"id":18389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18386,"mutability":"mutable","name":"toml","nameLocation":"92469:4:19","nodeType":"VariableDeclaration","scope":18393,"src":"92453:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18385,"name":"string","nodeType":"ElementaryTypeName","src":"92453:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18388,"mutability":"mutable","name":"key","nameLocation":"92491:3:19","nodeType":"VariableDeclaration","scope":18393,"src":"92475:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18387,"name":"string","nodeType":"ElementaryTypeName","src":"92475:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92452:43:19"},"returnParameters":{"id":18392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18393,"src":"92519:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92519:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92518:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18404,"nodeType":"FunctionDefinition","src":"92611:139:19","nodes":[],"documentation":{"id":18394,"nodeType":"StructuredDocumentation","src":"92534:72:19","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"92620:21:19","parameters":{"id":18399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18396,"mutability":"mutable","name":"toml","nameLocation":"92658:4:19","nodeType":"VariableDeclaration","scope":18404,"src":"92642:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18395,"name":"string","nodeType":"ElementaryTypeName","src":"92642:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18398,"mutability":"mutable","name":"key","nameLocation":"92680:3:19","nodeType":"VariableDeclaration","scope":18404,"src":"92664:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18397,"name":"string","nodeType":"ElementaryTypeName","src":"92664:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92641:43:19"},"returnParameters":{"id":18403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18404,"src":"92732:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92732:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18401,"nodeType":"ArrayTypeName","src":"92732:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"92731:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18415,"nodeType":"FunctionDefinition","src":"92831:111:19","nodes":[],"documentation":{"id":18405,"nodeType":"StructuredDocumentation","src":"92756:70:19","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"92840:19:19","parameters":{"id":18410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18407,"mutability":"mutable","name":"toml","nameLocation":"92876:4:19","nodeType":"VariableDeclaration","scope":18415,"src":"92860:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18406,"name":"string","nodeType":"ElementaryTypeName","src":"92860:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18409,"mutability":"mutable","name":"key","nameLocation":"92898:3:19","nodeType":"VariableDeclaration","scope":18415,"src":"92882:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18408,"name":"string","nodeType":"ElementaryTypeName","src":"92882:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92859:43:19"},"returnParameters":{"id":18414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18415,"src":"92926:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18411,"name":"bytes","nodeType":"ElementaryTypeName","src":"92926:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18412,"nodeType":"ArrayTypeName","src":"92926:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"92925:16:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18425,"nodeType":"FunctionDefinition","src":"93022:96:19","nodes":[],"documentation":{"id":18416,"nodeType":"StructuredDocumentation","src":"92948:69:19","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"93031:12:19","parameters":{"id":18421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18418,"mutability":"mutable","name":"toml","nameLocation":"93060:4:19","nodeType":"VariableDeclaration","scope":18425,"src":"93044:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18417,"name":"string","nodeType":"ElementaryTypeName","src":"93044:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18420,"mutability":"mutable","name":"key","nameLocation":"93082:3:19","nodeType":"VariableDeclaration","scope":18425,"src":"93066:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18419,"name":"string","nodeType":"ElementaryTypeName","src":"93066:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93043:43:19"},"returnParameters":{"id":18424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18425,"src":"93110:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18422,"name":"int256","nodeType":"ElementaryTypeName","src":"93110:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"93109:8:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18436,"nodeType":"FunctionDefinition","src":"93200:110:19","nodes":[],"documentation":{"id":18426,"nodeType":"StructuredDocumentation","src":"93124:71:19","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"93209:17:19","parameters":{"id":18431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18428,"mutability":"mutable","name":"toml","nameLocation":"93243:4:19","nodeType":"VariableDeclaration","scope":18436,"src":"93227:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18427,"name":"string","nodeType":"ElementaryTypeName","src":"93227:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18430,"mutability":"mutable","name":"key","nameLocation":"93265:3:19","nodeType":"VariableDeclaration","scope":18436,"src":"93249:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18429,"name":"string","nodeType":"ElementaryTypeName","src":"93249:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93226:43:19"},"returnParameters":{"id":18435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18436,"src":"93293:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18432,"name":"int256","nodeType":"ElementaryTypeName","src":"93293:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18433,"nodeType":"ArrayTypeName","src":"93293:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"93292:17:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18447,"nodeType":"FunctionDefinition","src":"93374:111:19","nodes":[],"documentation":{"id":18437,"nodeType":"StructuredDocumentation","src":"93316:53:19","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"93383:13:19","parameters":{"id":18442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18439,"mutability":"mutable","name":"toml","nameLocation":"93413:4:19","nodeType":"VariableDeclaration","scope":18447,"src":"93397:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18438,"name":"string","nodeType":"ElementaryTypeName","src":"93397:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18441,"mutability":"mutable","name":"key","nameLocation":"93435:3:19","nodeType":"VariableDeclaration","scope":18447,"src":"93419:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18440,"name":"string","nodeType":"ElementaryTypeName","src":"93419:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93396:43:19"},"returnParameters":{"id":18446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18445,"mutability":"mutable","name":"keys","nameLocation":"93479:4:19","nodeType":"VariableDeclaration","scope":18447,"src":"93463:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18443,"name":"string","nodeType":"ElementaryTypeName","src":"93463:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18444,"nodeType":"ArrayTypeName","src":"93463:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"93462:22:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18457,"nodeType":"FunctionDefinition","src":"93565:106:19","nodes":[],"documentation":{"id":18448,"nodeType":"StructuredDocumentation","src":"93491:69:19","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"93574:15:19","parameters":{"id":18453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18450,"mutability":"mutable","name":"toml","nameLocation":"93606:4:19","nodeType":"VariableDeclaration","scope":18457,"src":"93590:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18449,"name":"string","nodeType":"ElementaryTypeName","src":"93590:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18452,"mutability":"mutable","name":"key","nameLocation":"93628:3:19","nodeType":"VariableDeclaration","scope":18457,"src":"93612:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18451,"name":"string","nodeType":"ElementaryTypeName","src":"93612:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93589:43:19"},"returnParameters":{"id":18456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18457,"src":"93656:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18454,"name":"string","nodeType":"ElementaryTypeName","src":"93656:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93655:15:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18468,"nodeType":"FunctionDefinition","src":"93753:113:19","nodes":[],"documentation":{"id":18458,"nodeType":"StructuredDocumentation","src":"93677:71:19","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"93762:20:19","parameters":{"id":18463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18460,"mutability":"mutable","name":"toml","nameLocation":"93799:4:19","nodeType":"VariableDeclaration","scope":18468,"src":"93783:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18459,"name":"string","nodeType":"ElementaryTypeName","src":"93783:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18462,"mutability":"mutable","name":"key","nameLocation":"93821:3:19","nodeType":"VariableDeclaration","scope":18468,"src":"93805:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18461,"name":"string","nodeType":"ElementaryTypeName","src":"93805:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93782:43:19"},"returnParameters":{"id":18467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18468,"src":"93849:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18464,"name":"string","nodeType":"ElementaryTypeName","src":"93849:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18465,"nodeType":"ArrayTypeName","src":"93849:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"93848:17:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18480,"nodeType":"FunctionDefinition","src":"93983:165:19","nodes":[],"documentation":{"id":18469,"nodeType":"StructuredDocumentation","src":"93872:106:19","text":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"49be3743","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlTypeArray","nameLocation":"93992:18:19","parameters":{"id":18476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18471,"mutability":"mutable","name":"toml","nameLocation":"94027:4:19","nodeType":"VariableDeclaration","scope":18480,"src":"94011:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18470,"name":"string","nodeType":"ElementaryTypeName","src":"94011:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18473,"mutability":"mutable","name":"key","nameLocation":"94049:3:19","nodeType":"VariableDeclaration","scope":18480,"src":"94033:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18472,"name":"string","nodeType":"ElementaryTypeName","src":"94033:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18475,"mutability":"mutable","name":"typeDescription","nameLocation":"94070:15:19","nodeType":"VariableDeclaration","scope":18480,"src":"94054:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18474,"name":"string","nodeType":"ElementaryTypeName","src":"94054:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94010:76:19"},"returnParameters":{"id":18479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18480,"src":"94134:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18477,"name":"bytes","nodeType":"ElementaryTypeName","src":"94134:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94133:14:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18490,"nodeType":"FunctionDefinition","src":"94250:139:19","nodes":[],"documentation":{"id":18481,"nodeType":"StructuredDocumentation","src":"94154:91:19","text":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"47fa5e11","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"94259:13:19","parameters":{"id":18486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18483,"mutability":"mutable","name":"toml","nameLocation":"94289:4:19","nodeType":"VariableDeclaration","scope":18490,"src":"94273:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18482,"name":"string","nodeType":"ElementaryTypeName","src":"94273:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18485,"mutability":"mutable","name":"typeDescription","nameLocation":"94311:15:19","nodeType":"VariableDeclaration","scope":18490,"src":"94295:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18484,"name":"string","nodeType":"ElementaryTypeName","src":"94295:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94272:55:19"},"returnParameters":{"id":18489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18490,"src":"94375:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18487,"name":"bytes","nodeType":"ElementaryTypeName","src":"94375:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94374:14:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18502,"nodeType":"FunctionDefinition","src":"94500:160:19","nodes":[],"documentation":{"id":18491,"nodeType":"StructuredDocumentation","src":"94395:100:19","text":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"f9fa5cdb","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"94509:13:19","parameters":{"id":18498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18493,"mutability":"mutable","name":"toml","nameLocation":"94539:4:19","nodeType":"VariableDeclaration","scope":18502,"src":"94523:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18492,"name":"string","nodeType":"ElementaryTypeName","src":"94523:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18495,"mutability":"mutable","name":"key","nameLocation":"94561:3:19","nodeType":"VariableDeclaration","scope":18502,"src":"94545:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18494,"name":"string","nodeType":"ElementaryTypeName","src":"94545:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18497,"mutability":"mutable","name":"typeDescription","nameLocation":"94582:15:19","nodeType":"VariableDeclaration","scope":18502,"src":"94566:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18496,"name":"string","nodeType":"ElementaryTypeName","src":"94566:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94522:76:19"},"returnParameters":{"id":18501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18502,"src":"94646:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18499,"name":"bytes","nodeType":"ElementaryTypeName","src":"94646:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94645:14:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18512,"nodeType":"FunctionDefinition","src":"94741:98:19","nodes":[],"documentation":{"id":18503,"nodeType":"StructuredDocumentation","src":"94666:70:19","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"94750:13:19","parameters":{"id":18508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18505,"mutability":"mutable","name":"toml","nameLocation":"94780:4:19","nodeType":"VariableDeclaration","scope":18512,"src":"94764:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18504,"name":"string","nodeType":"ElementaryTypeName","src":"94764:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18507,"mutability":"mutable","name":"key","nameLocation":"94802:3:19","nodeType":"VariableDeclaration","scope":18512,"src":"94786:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18506,"name":"string","nodeType":"ElementaryTypeName","src":"94786:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94763:43:19"},"returnParameters":{"id":18511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18512,"src":"94830:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18509,"name":"uint256","nodeType":"ElementaryTypeName","src":"94830:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94829:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18523,"nodeType":"FunctionDefinition","src":"94922:112:19","nodes":[],"documentation":{"id":18513,"nodeType":"StructuredDocumentation","src":"94845:72:19","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"94931:18:19","parameters":{"id":18518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18515,"mutability":"mutable","name":"toml","nameLocation":"94966:4:19","nodeType":"VariableDeclaration","scope":18523,"src":"94950:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18514,"name":"string","nodeType":"ElementaryTypeName","src":"94950:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18517,"mutability":"mutable","name":"key","nameLocation":"94988:3:19","nodeType":"VariableDeclaration","scope":18523,"src":"94972:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18516,"name":"string","nodeType":"ElementaryTypeName","src":"94972:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94949:43:19"},"returnParameters":{"id":18522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18523,"src":"95016:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18519,"name":"uint256","nodeType":"ElementaryTypeName","src":"95016:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18520,"nodeType":"ArrayTypeName","src":"95016:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"95015:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18531,"nodeType":"FunctionDefinition","src":"95074:93:19","nodes":[],"documentation":{"id":18524,"nodeType":"StructuredDocumentation","src":"95040:29:19","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"95083:9:19","parameters":{"id":18527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18526,"mutability":"mutable","name":"toml","nameLocation":"95109:4:19","nodeType":"VariableDeclaration","scope":18531,"src":"95093:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18525,"name":"string","nodeType":"ElementaryTypeName","src":"95093:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95092:22:19"},"returnParameters":{"id":18530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18529,"mutability":"mutable","name":"abiEncodedData","nameLocation":"95151:14:19","nodeType":"VariableDeclaration","scope":18531,"src":"95138:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18528,"name":"bytes","nodeType":"ElementaryTypeName","src":"95138:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"95137:29:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18541,"nodeType":"FunctionDefinition","src":"95216:114:19","nodes":[],"documentation":{"id":18532,"nodeType":"StructuredDocumentation","src":"95173:38:19","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"95225:9:19","parameters":{"id":18537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18534,"mutability":"mutable","name":"toml","nameLocation":"95251:4:19","nodeType":"VariableDeclaration","scope":18541,"src":"95235:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18533,"name":"string","nodeType":"ElementaryTypeName","src":"95235:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18536,"mutability":"mutable","name":"key","nameLocation":"95273:3:19","nodeType":"VariableDeclaration","scope":18541,"src":"95257:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18535,"name":"string","nodeType":"ElementaryTypeName","src":"95257:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95234:43:19"},"returnParameters":{"id":18540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18539,"mutability":"mutable","name":"abiEncodedData","nameLocation":"95314:14:19","nodeType":"VariableDeclaration","scope":18541,"src":"95301:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18538,"name":"bytes","nodeType":"ElementaryTypeName","src":"95301:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"95300:29:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18549,"nodeType":"FunctionDefinition","src":"95423:72:19","nodes":[],"documentation":{"id":18542,"nodeType":"StructuredDocumentation","src":"95336:82:19","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"95432:9:19","parameters":{"id":18547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18544,"mutability":"mutable","name":"json","nameLocation":"95458:4:19","nodeType":"VariableDeclaration","scope":18549,"src":"95442:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18543,"name":"string","nodeType":"ElementaryTypeName","src":"95442:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18546,"mutability":"mutable","name":"path","nameLocation":"95480:4:19","nodeType":"VariableDeclaration","scope":18549,"src":"95464:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18545,"name":"string","nodeType":"ElementaryTypeName","src":"95464:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95441:44:19"},"returnParameters":{"id":18548,"nodeType":"ParameterList","parameters":[],"src":"95494:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18559,"nodeType":"FunctionDefinition","src":"95764:98:19","nodes":[],"documentation":{"id":18550,"nodeType":"StructuredDocumentation","src":"95501:258:19","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"95773:9:19","parameters":{"id":18557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18552,"mutability":"mutable","name":"json","nameLocation":"95799:4:19","nodeType":"VariableDeclaration","scope":18559,"src":"95783:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18551,"name":"string","nodeType":"ElementaryTypeName","src":"95783:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18554,"mutability":"mutable","name":"path","nameLocation":"95821:4:19","nodeType":"VariableDeclaration","scope":18559,"src":"95805:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18553,"name":"string","nodeType":"ElementaryTypeName","src":"95805:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18556,"mutability":"mutable","name":"valueKey","nameLocation":"95843:8:19","nodeType":"VariableDeclaration","scope":18559,"src":"95827:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18555,"name":"string","nodeType":"ElementaryTypeName","src":"95827:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95782:70:19"},"returnParameters":{"id":18558,"nodeType":"ParameterList","parameters":[],"src":"95861:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18571,"nodeType":"FunctionDefinition","src":"96001:141:19","nodes":[],"documentation":{"id":18560,"nodeType":"StructuredDocumentation","src":"95904:92:19","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"96010:21:19","parameters":{"id":18567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18562,"mutability":"mutable","name":"salt","nameLocation":"96040:4:19","nodeType":"VariableDeclaration","scope":18571,"src":"96032:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"96032:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18564,"mutability":"mutable","name":"initCodeHash","nameLocation":"96054:12:19","nodeType":"VariableDeclaration","scope":18571,"src":"96046:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"96046:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18566,"mutability":"mutable","name":"deployer","nameLocation":"96076:8:19","nodeType":"VariableDeclaration","scope":18571,"src":"96068:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18565,"name":"address","nodeType":"ElementaryTypeName","src":"96068:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96031:54:19"},"returnParameters":{"id":18570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18571,"src":"96133:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18568,"name":"address","nodeType":"ElementaryTypeName","src":"96133:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96132:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18581,"nodeType":"FunctionDefinition","src":"96247:99:19","nodes":[],"documentation":{"id":18572,"nodeType":"StructuredDocumentation","src":"96148:94:19","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"96256:21:19","parameters":{"id":18577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18574,"mutability":"mutable","name":"salt","nameLocation":"96286:4:19","nodeType":"VariableDeclaration","scope":18581,"src":"96278:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"96278:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18576,"mutability":"mutable","name":"initCodeHash","nameLocation":"96300:12:19","nodeType":"VariableDeclaration","scope":18581,"src":"96292:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"96292:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"96277:36:19"},"returnParameters":{"id":18580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18581,"src":"96337:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18578,"name":"address","nodeType":"ElementaryTypeName","src":"96337:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96336:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18591,"nodeType":"FunctionDefinition","src":"96451:95:19","nodes":[],"documentation":{"id":18582,"nodeType":"StructuredDocumentation","src":"96352:94:19","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"96460:20:19","parameters":{"id":18587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18584,"mutability":"mutable","name":"deployer","nameLocation":"96489:8:19","nodeType":"VariableDeclaration","scope":18591,"src":"96481:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18583,"name":"address","nodeType":"ElementaryTypeName","src":"96481:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18586,"mutability":"mutable","name":"nonce","nameLocation":"96507:5:19","nodeType":"VariableDeclaration","scope":18591,"src":"96499:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18585,"name":"uint256","nodeType":"ElementaryTypeName","src":"96499:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96480:33:19"},"returnParameters":{"id":18590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18591,"src":"96537:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18588,"name":"address","nodeType":"ElementaryTypeName","src":"96537:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96536:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18599,"nodeType":"FunctionDefinition","src":"96639:56:19","nodes":[],"documentation":{"id":18592,"nodeType":"StructuredDocumentation","src":"96552:82:19","text":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"functionSelector":"203dac0d","implemented":false,"kind":"function","modifiers":[],"name":"copyStorage","nameLocation":"96648:11:19","parameters":{"id":18597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18594,"mutability":"mutable","name":"from","nameLocation":"96668:4:19","nodeType":"VariableDeclaration","scope":18599,"src":"96660:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18593,"name":"address","nodeType":"ElementaryTypeName","src":"96660:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18596,"mutability":"mutable","name":"to","nameLocation":"96682:2:19","nodeType":"VariableDeclaration","scope":18599,"src":"96674:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18595,"name":"address","nodeType":"ElementaryTypeName","src":"96674:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96659:26:19"},"returnParameters":{"id":18598,"nodeType":"ParameterList","parameters":[],"src":"96694:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18609,"nodeType":"FunctionDefinition","src":"97290:160:19","nodes":[],"documentation":{"id":18600,"nodeType":"StructuredDocumentation","src":"96701:584:19","text":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data.\n Supports 2 different inputs:\n 1. Name of the type (i.e. \"PermitSingle\"):\n * requires previous binding generation with `forge bind-json`.\n * bindings will be retrieved from the path configured in `foundry.toml`.\n 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\").\n * Note: the cheatcode will use the canonical type even if the input is malformated\n with the wrong order of elements or with extra whitespaces."},"functionSelector":"aedeaebc","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashStruct","nameLocation":"97299:16:19","parameters":{"id":18605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18602,"mutability":"mutable","name":"typeNameOrDefinition","nameLocation":"97332:20:19","nodeType":"VariableDeclaration","scope":18609,"src":"97316:36:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18601,"name":"string","nodeType":"ElementaryTypeName","src":"97316:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18604,"mutability":"mutable","name":"abiEncodedData","nameLocation":"97369:14:19","nodeType":"VariableDeclaration","scope":18609,"src":"97354:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18603,"name":"bytes","nodeType":"ElementaryTypeName","src":"97354:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97315:69:19"},"returnParameters":{"id":18608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18607,"mutability":"mutable","name":"typeHash","nameLocation":"97440:8:19","nodeType":"VariableDeclaration","scope":18609,"src":"97432:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"97432:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"97431:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18621,"nodeType":"FunctionDefinition","src":"97870:178:19","nodes":[],"documentation":{"id":18610,"nodeType":"StructuredDocumentation","src":"97456:409:19","text":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data.\n Requires previous binding generation with `forge bind-json`.\n Params:\n * `bindingsPath`: path where the output of `forge bind-json` is stored.\n * `typeName`: Name of the type (i.e. \"PermitSingle\").\n * `abiEncodedData`: ABI-encoded data for the struct that is being hashed."},"functionSelector":"6d06c57c","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashStruct","nameLocation":"97879:16:19","parameters":{"id":18617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18612,"mutability":"mutable","name":"bindingsPath","nameLocation":"97912:12:19","nodeType":"VariableDeclaration","scope":18621,"src":"97896:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18611,"name":"string","nodeType":"ElementaryTypeName","src":"97896:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18614,"mutability":"mutable","name":"typeName","nameLocation":"97942:8:19","nodeType":"VariableDeclaration","scope":18621,"src":"97926:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18613,"name":"string","nodeType":"ElementaryTypeName","src":"97926:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18616,"mutability":"mutable","name":"abiEncodedData","nameLocation":"97967:14:19","nodeType":"VariableDeclaration","scope":18621,"src":"97952:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18615,"name":"bytes","nodeType":"ElementaryTypeName","src":"97952:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97895:87:19"},"returnParameters":{"id":18620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18619,"mutability":"mutable","name":"typeHash","nameLocation":"98038:8:19","nodeType":"VariableDeclaration","scope":18621,"src":"98030:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98030:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"98029:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18629,"nodeType":"FunctionDefinition","src":"98613:103:19","nodes":[],"documentation":{"id":18622,"nodeType":"StructuredDocumentation","src":"98054:554:19","text":"Generates the hash of the canonical EIP-712 type representation.\n Supports 2 different inputs:\n 1. Name of the type (i.e. \"Transaction\"):\n * requires previous binding generation with `forge bind-json`.\n * bindings will be retrieved from the path configured in `foundry.toml`.\n 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\").\n * Note: the cheatcode will output the canonical type even if the input is malformated\n with the wrong order of elements or with extra whitespaces."},"functionSelector":"6792e9e2","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashType","nameLocation":"98622:14:19","parameters":{"id":18625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18624,"mutability":"mutable","name":"typeNameOrDefinition","nameLocation":"98653:20:19","nodeType":"VariableDeclaration","scope":18629,"src":"98637:36:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18623,"name":"string","nodeType":"ElementaryTypeName","src":"98637:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98636:38:19"},"returnParameters":{"id":18628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18627,"mutability":"mutable","name":"typeHash","nameLocation":"98706:8:19","nodeType":"VariableDeclaration","scope":18629,"src":"98698:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98698:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"98697:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18639,"nodeType":"FunctionDefinition","src":"99021:145:19","nodes":[],"documentation":{"id":18630,"nodeType":"StructuredDocumentation","src":"98722:294:19","text":"Generates the hash of the canonical EIP-712 type representation.\n Requires previous binding generation with `forge bind-json`.\n Params:\n * `bindingsPath`: path where the output of `forge bind-json` is stored.\n * `typeName`: Name of the type (i.e. \"Transaction\")."},"functionSelector":"18fb6406","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashType","nameLocation":"99030:14:19","parameters":{"id":18635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18632,"mutability":"mutable","name":"bindingsPath","nameLocation":"99061:12:19","nodeType":"VariableDeclaration","scope":18639,"src":"99045:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18631,"name":"string","nodeType":"ElementaryTypeName","src":"99045:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18634,"mutability":"mutable","name":"typeName","nameLocation":"99091:8:19","nodeType":"VariableDeclaration","scope":18639,"src":"99075:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18633,"name":"string","nodeType":"ElementaryTypeName","src":"99075:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99044:56:19"},"returnParameters":{"id":18638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18637,"mutability":"mutable","name":"typeHash","nameLocation":"99156:8:19","nodeType":"VariableDeclaration","scope":18639,"src":"99148:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"99148:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"99147:18:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18647,"nodeType":"FunctionDefinition","src":"99274:94:19","nodes":[],"documentation":{"id":18640,"nodeType":"StructuredDocumentation","src":"99172:97:19","text":"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard."},"functionSelector":"ea25e615","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashTypedData","nameLocation":"99283:19:19","parameters":{"id":18643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18642,"mutability":"mutable","name":"jsonData","nameLocation":"99319:8:19","nodeType":"VariableDeclaration","scope":18647,"src":"99303:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18641,"name":"string","nodeType":"ElementaryTypeName","src":"99303:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99302:26:19"},"returnParameters":{"id":18646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18645,"mutability":"mutable","name":"digest","nameLocation":"99360:6:19","nodeType":"VariableDeclaration","scope":18647,"src":"99352:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"99352:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"99351:16:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18655,"nodeType":"FunctionDefinition","src":"99424:75:19","nodes":[],"documentation":{"id":18648,"nodeType":"StructuredDocumentation","src":"99374:45:19","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"99433:11:19","parameters":{"id":18651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18650,"mutability":"mutable","name":"name","nameLocation":"99461:4:19","nodeType":"VariableDeclaration","scope":18655,"src":"99445:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18649,"name":"string","nodeType":"ElementaryTypeName","src":"99445:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99444:22:19"},"returnParameters":{"id":18654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18655,"src":"99490:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"99490:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"99489:9:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18663,"nodeType":"FunctionDefinition","src":"99555:86:19","nodes":[],"documentation":{"id":18656,"nodeType":"StructuredDocumentation","src":"99505:45:19","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"99564:8:19","parameters":{"id":18659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18658,"mutability":"mutable","name":"account","nameLocation":"99581:7:19","nodeType":"VariableDeclaration","scope":18663,"src":"99573:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18657,"name":"address","nodeType":"ElementaryTypeName","src":"99573:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99572:17:19"},"returnParameters":{"id":18662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18661,"mutability":"mutable","name":"currentLabel","nameLocation":"99627:12:19","nodeType":"VariableDeclaration","scope":18663,"src":"99613:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18660,"name":"string","nodeType":"ElementaryTypeName","src":"99613:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99612:28:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18671,"nodeType":"FunctionDefinition","src":"99689:67:19","nodes":[],"documentation":{"id":18664,"nodeType":"StructuredDocumentation","src":"99647:37:19","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"99698:5:19","parameters":{"id":18669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18666,"mutability":"mutable","name":"account","nameLocation":"99712:7:19","nodeType":"VariableDeclaration","scope":18671,"src":"99704:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18665,"name":"address","nodeType":"ElementaryTypeName","src":"99704:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18668,"mutability":"mutable","name":"newLabel","nameLocation":"99737:8:19","nodeType":"VariableDeclaration","scope":18671,"src":"99721:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18667,"name":"string","nodeType":"ElementaryTypeName","src":"99721:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99703:43:19"},"returnParameters":{"id":18670,"nodeType":"ParameterList","parameters":[],"src":"99755:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18675,"nodeType":"FunctionDefinition","src":"99911:38:19","nodes":[],"documentation":{"id":18672,"nodeType":"StructuredDocumentation","src":"99762:144:19","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"99920:12:19","parameters":{"id":18673,"nodeType":"ParameterList","parameters":[],"src":"99932:2:19"},"returnParameters":{"id":18674,"nodeType":"ParameterList","parameters":[],"src":"99948:0:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18681,"nodeType":"FunctionDefinition","src":"99991:57:19","nodes":[],"documentation":{"id":18676,"nodeType":"StructuredDocumentation","src":"99955:31:19","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"100000:13:19","parameters":{"id":18677,"nodeType":"ParameterList","parameters":[],"src":"100013:2:19"},"returnParameters":{"id":18680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18681,"src":"100039:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18678,"name":"address","nodeType":"ElementaryTypeName","src":"100039:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"100038:9:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18687,"nodeType":"FunctionDefinition","src":"100087:51:19","nodes":[],"documentation":{"id":18682,"nodeType":"StructuredDocumentation","src":"100054:28:19","text":"Returns a random `bool`."},"functionSelector":"cdc126bd","implemented":false,"kind":"function","modifiers":[],"name":"randomBool","nameLocation":"100096:10:19","parameters":{"id":18683,"nodeType":"ParameterList","parameters":[],"src":"100106:2:19"},"returnParameters":{"id":18686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18687,"src":"100132:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18684,"name":"bool","nodeType":"ElementaryTypeName","src":"100132:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"100131:6:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18695,"nodeType":"FunctionDefinition","src":"100207:71:19","nodes":[],"documentation":{"id":18688,"nodeType":"StructuredDocumentation","src":"100144:58:19","text":"Returns a random byte array value of the given length."},"functionSelector":"6c5d32a9","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"100216:11:19","parameters":{"id":18691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18690,"mutability":"mutable","name":"len","nameLocation":"100236:3:19","nodeType":"VariableDeclaration","scope":18695,"src":"100228:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18689,"name":"uint256","nodeType":"ElementaryTypeName","src":"100228:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100227:13:19"},"returnParameters":{"id":18694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18695,"src":"100264:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18692,"name":"bytes","nodeType":"ElementaryTypeName","src":"100264:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"100263:14:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18701,"nodeType":"FunctionDefinition","src":"100344:55:19","nodes":[],"documentation":{"id":18696,"nodeType":"StructuredDocumentation","src":"100284:55:19","text":"Returns a random fixed-size byte array of length 4."},"functionSelector":"9b7cd579","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes4","nameLocation":"100353:12:19","parameters":{"id":18697,"nodeType":"ParameterList","parameters":[],"src":"100365:2:19"},"returnParameters":{"id":18700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18701,"src":"100391:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18698,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100391:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"100390:8:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18707,"nodeType":"FunctionDefinition","src":"100465:55:19","nodes":[],"documentation":{"id":18702,"nodeType":"StructuredDocumentation","src":"100405:55:19","text":"Returns a random fixed-size byte array of length 8."},"functionSelector":"0497b0a5","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes8","nameLocation":"100474:12:19","parameters":{"id":18703,"nodeType":"ParameterList","parameters":[],"src":"100486:2:19"},"returnParameters":{"id":18706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18707,"src":"100512:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":18704,"name":"bytes8","nodeType":"ElementaryTypeName","src":"100512:6:19","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"100511:8:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18713,"nodeType":"FunctionDefinition","src":"100567:52:19","nodes":[],"documentation":{"id":18708,"nodeType":"StructuredDocumentation","src":"100526:36:19","text":"Returns a random `int256` value."},"functionSelector":"111f1202","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"100576:9:19","parameters":{"id":18709,"nodeType":"ParameterList","parameters":[],"src":"100585:2:19"},"returnParameters":{"id":18712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18713,"src":"100611:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18710,"name":"int256","nodeType":"ElementaryTypeName","src":"100611:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"100610:8:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18721,"nodeType":"FunctionDefinition","src":"100680:64:19","nodes":[],"documentation":{"id":18714,"nodeType":"StructuredDocumentation","src":"100625:50:19","text":"Returns a random `int256` value of given bits."},"functionSelector":"12845966","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"100689:9:19","parameters":{"id":18717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18716,"mutability":"mutable","name":"bits","nameLocation":"100707:4:19","nodeType":"VariableDeclaration","scope":18721,"src":"100699:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18715,"name":"uint256","nodeType":"ElementaryTypeName","src":"100699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100698:14:19"},"returnParameters":{"id":18720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18721,"src":"100736:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18718,"name":"int256","nodeType":"ElementaryTypeName","src":"100736:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"100735:8:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18727,"nodeType":"FunctionDefinition","src":"100790:54:19","nodes":[],"documentation":{"id":18722,"nodeType":"StructuredDocumentation","src":"100750:35:19","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"100799:10:19","parameters":{"id":18723,"nodeType":"ParameterList","parameters":[],"src":"100809:2:19"},"returnParameters":{"id":18726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18727,"src":"100835:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18724,"name":"uint256","nodeType":"ElementaryTypeName","src":"100835:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100834:9:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18737,"nodeType":"FunctionDefinition","src":"100928:78:19","nodes":[],"documentation":{"id":18728,"nodeType":"StructuredDocumentation","src":"100850:73:19","text":"Returns random uint256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"100937:10:19","parameters":{"id":18733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18730,"mutability":"mutable","name":"min","nameLocation":"100956:3:19","nodeType":"VariableDeclaration","scope":18737,"src":"100948:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18729,"name":"uint256","nodeType":"ElementaryTypeName","src":"100948:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18732,"mutability":"mutable","name":"max","nameLocation":"100969:3:19","nodeType":"VariableDeclaration","scope":18737,"src":"100961:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18731,"name":"uint256","nodeType":"ElementaryTypeName","src":"100961:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100947:26:19"},"returnParameters":{"id":18736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18737,"src":"100997:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18734,"name":"uint256","nodeType":"ElementaryTypeName","src":"100997:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100996:9:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18745,"nodeType":"FunctionDefinition","src":"101068:66:19","nodes":[],"documentation":{"id":18738,"nodeType":"StructuredDocumentation","src":"101012:51:19","text":"Returns a random `uint256` value of given bits."},"functionSelector":"cf81e69c","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"101077:10:19","parameters":{"id":18741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18740,"mutability":"mutable","name":"bits","nameLocation":"101096:4:19","nodeType":"VariableDeclaration","scope":18745,"src":"101088:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18739,"name":"uint256","nodeType":"ElementaryTypeName","src":"101088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101087:14:19"},"returnParameters":{"id":18744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18745,"src":"101125:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18742,"name":"uint256","nodeType":"ElementaryTypeName","src":"101125:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101124:9:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18749,"nodeType":"FunctionDefinition","src":"101184:39:19","nodes":[],"documentation":{"id":18746,"nodeType":"StructuredDocumentation","src":"101140:39:19","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"101193:13:19","parameters":{"id":18747,"nodeType":"ParameterList","parameters":[],"src":"101206:2:19"},"returnParameters":{"id":18748,"nodeType":"ParameterList","parameters":[],"src":"101222:0:19"},"scope":18822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18755,"nodeType":"FunctionDefinition","src":"101306:54:19","nodes":[],"documentation":{"id":18750,"nodeType":"StructuredDocumentation","src":"101229:72:19","text":"Utility cheatcode to set arbitrary storage for given target address."},"functionSelector":"e1631837","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"101315:19:19","parameters":{"id":18753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18752,"mutability":"mutable","name":"target","nameLocation":"101343:6:19","nodeType":"VariableDeclaration","scope":18755,"src":"101335:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18751,"name":"address","nodeType":"ElementaryTypeName","src":"101335:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101334:16:19"},"returnParameters":{"id":18754,"nodeType":"ParameterList","parameters":[],"src":"101359:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18763,"nodeType":"FunctionDefinition","src":"101513:70:19","nodes":[],"documentation":{"id":18756,"nodeType":"StructuredDocumentation","src":"101366:142:19","text":"Utility cheatcode to set arbitrary storage for given target address and overwrite\n any storage slots that have been previously set."},"functionSelector":"d3ec2a0b","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"101522:19:19","parameters":{"id":18761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18758,"mutability":"mutable","name":"target","nameLocation":"101550:6:19","nodeType":"VariableDeclaration","scope":18763,"src":"101542:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18757,"name":"address","nodeType":"ElementaryTypeName","src":"101542:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18760,"mutability":"mutable","name":"overwrite","nameLocation":"101563:9:19","nodeType":"VariableDeclaration","scope":18763,"src":"101558:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18759,"name":"bool","nodeType":"ElementaryTypeName","src":"101558:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101541:32:19"},"returnParameters":{"id":18762,"nodeType":"ParameterList","parameters":[],"src":"101582:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18769,"nodeType":"FunctionDefinition","src":"101611:40:19","nodes":[],"documentation":{"id":18764,"nodeType":"StructuredDocumentation","src":"101589:17:19","text":"Set RNG seed."},"functionSelector":"c32a50f9","implemented":false,"kind":"function","modifiers":[],"name":"setSeed","nameLocation":"101620:7:19","parameters":{"id":18767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18766,"mutability":"mutable","name":"seed","nameLocation":"101636:4:19","nodeType":"VariableDeclaration","scope":18769,"src":"101628:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18765,"name":"uint256","nodeType":"ElementaryTypeName","src":"101628:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101627:14:19"},"returnParameters":{"id":18768,"nodeType":"ParameterList","parameters":[],"src":"101650:0:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18779,"nodeType":"FunctionDefinition","src":"101693:79:19","nodes":[],"documentation":{"id":18770,"nodeType":"StructuredDocumentation","src":"101657:31:19","text":"Randomly shuffles an array."},"functionSelector":"54f1469c","implemented":false,"kind":"function","modifiers":[],"name":"shuffle","nameLocation":"101702:7:19","parameters":{"id":18774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18773,"mutability":"mutable","name":"array","nameLocation":"101729:5:19","nodeType":"VariableDeclaration","scope":18779,"src":"101710:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18771,"name":"uint256","nodeType":"ElementaryTypeName","src":"101710:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18772,"nodeType":"ArrayTypeName","src":"101710:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"101709:26:19"},"returnParameters":{"id":18778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18779,"src":"101754:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18775,"name":"uint256","nodeType":"ElementaryTypeName","src":"101754:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18776,"nodeType":"ArrayTypeName","src":"101754:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"101753:18:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18789,"nodeType":"FunctionDefinition","src":"101821:76:19","nodes":[],"documentation":{"id":18780,"nodeType":"StructuredDocumentation","src":"101778:38:19","text":"Sorts an array in ascending order."},"functionSelector":"9ec8b026","implemented":false,"kind":"function","modifiers":[],"name":"sort","nameLocation":"101830:4:19","parameters":{"id":18784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18783,"mutability":"mutable","name":"array","nameLocation":"101854:5:19","nodeType":"VariableDeclaration","scope":18789,"src":"101835:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18781,"name":"uint256","nodeType":"ElementaryTypeName","src":"101835:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18782,"nodeType":"ArrayTypeName","src":"101835:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"101834:26:19"},"returnParameters":{"id":18788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18789,"src":"101879:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18785,"name":"uint256","nodeType":"ElementaryTypeName","src":"101879:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18786,"nodeType":"ArrayTypeName","src":"101879:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"101878:18:19"},"scope":18822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18797,"nodeType":"FunctionDefinition","src":"101958:80:19","nodes":[],"documentation":{"id":18790,"nodeType":"StructuredDocumentation","src":"101903:50:19","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"101967:11:19","parameters":{"id":18793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18792,"mutability":"mutable","name":"data","nameLocation":"101994:4:19","nodeType":"VariableDeclaration","scope":18797,"src":"101979:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18791,"name":"bytes","nodeType":"ElementaryTypeName","src":"101979:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"101978:21:19"},"returnParameters":{"id":18796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18797,"src":"102023:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18794,"name":"string","nodeType":"ElementaryTypeName","src":"102023:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102022:15:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18805,"nodeType":"FunctionDefinition","src":"102100:81:19","nodes":[],"documentation":{"id":18798,"nodeType":"StructuredDocumentation","src":"102044:51:19","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"102109:11:19","parameters":{"id":18801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18800,"mutability":"mutable","name":"data","nameLocation":"102137:4:19","nodeType":"VariableDeclaration","scope":18805,"src":"102121:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18799,"name":"string","nodeType":"ElementaryTypeName","src":"102121:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102120:22:19"},"returnParameters":{"id":18804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18805,"src":"102166:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18802,"name":"string","nodeType":"ElementaryTypeName","src":"102166:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102165:15:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18813,"nodeType":"FunctionDefinition","src":"102239:77:19","nodes":[],"documentation":{"id":18806,"nodeType":"StructuredDocumentation","src":"102187:47:19","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"102248:8:19","parameters":{"id":18809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18808,"mutability":"mutable","name":"data","nameLocation":"102272:4:19","nodeType":"VariableDeclaration","scope":18813,"src":"102257:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18807,"name":"bytes","nodeType":"ElementaryTypeName","src":"102257:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"102256:21:19"},"returnParameters":{"id":18812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18813,"src":"102301:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18810,"name":"string","nodeType":"ElementaryTypeName","src":"102301:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102300:15:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18821,"nodeType":"FunctionDefinition","src":"102375:78:19","nodes":[],"documentation":{"id":18814,"nodeType":"StructuredDocumentation","src":"102322:48:19","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"102384:8:19","parameters":{"id":18817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18816,"mutability":"mutable","name":"data","nameLocation":"102409:4:19","nodeType":"VariableDeclaration","scope":18821,"src":"102393:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18815,"name":"string","nodeType":"ElementaryTypeName","src":"102393:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102392:22:19"},"returnParameters":{"id":18820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18821,"src":"102438:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18818,"name":"string","nodeType":"ElementaryTypeName","src":"102438:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102437:15:19"},"scope":18822,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":14781,"nodeType":"StructuredDocumentation","src":"184:225:19","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[18822],"name":"VmSafe","nameLocation":"419:6:19","scope":19894,"usedErrors":[],"usedEvents":[]},{"id":19893,"nodeType":"ContractDefinition","src":"102628:26587:19","nodes":[{"id":18833,"nodeType":"FunctionDefinition","src":"102777:63:19","nodes":[],"documentation":{"id":18826,"nodeType":"StructuredDocumentation","src":"102687:85:19","text":"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions."},"functionSelector":"743e4cb7","implemented":false,"kind":"function","modifiers":[],"name":"accessList","nameLocation":"102786:10:19","parameters":{"id":18831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18830,"mutability":"mutable","name":"access","nameLocation":"102823:6:19","nodeType":"VariableDeclaration","scope":18833,"src":"102797:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessListItem_$15028_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.AccessListItem[]"},"typeName":{"baseType":{"id":18828,"nodeType":"UserDefinedTypeName","pathNode":{"id":18827,"name":"AccessListItem","nameLocations":["102797:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":15028,"src":"102797:14:19"},"referencedDeclaration":15028,"src":"102797:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_AccessListItem_$15028_storage_ptr","typeString":"struct VmSafe.AccessListItem"}},"id":18829,"nodeType":"ArrayTypeName","src":"102797:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessListItem_$15028_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccessListItem[]"}},"visibility":"internal"}],"src":"102796:34:19"},"returnParameters":{"id":18832,"nodeType":"ParameterList","parameters":[],"src":"102839:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18839,"nodeType":"FunctionDefinition","src":"102947:61:19","nodes":[],"documentation":{"id":18834,"nodeType":"StructuredDocumentation","src":"102846:96:19","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"102956:10:19","parameters":{"id":18835,"nodeType":"ParameterList","parameters":[],"src":"102966:2:19"},"returnParameters":{"id":18838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18837,"mutability":"mutable","name":"forkId","nameLocation":"103000:6:19","nodeType":"VariableDeclaration","scope":18839,"src":"102992:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18836,"name":"uint256","nodeType":"ElementaryTypeName","src":"102992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102991:16:19"},"scope":19893,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18845,"nodeType":"FunctionDefinition","src":"103092:51:19","nodes":[],"documentation":{"id":18840,"nodeType":"StructuredDocumentation","src":"103014:73:19","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"103101:15:19","parameters":{"id":18843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18842,"mutability":"mutable","name":"account","nameLocation":"103125:7:19","nodeType":"VariableDeclaration","scope":18845,"src":"103117:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18841,"name":"address","nodeType":"ElementaryTypeName","src":"103117:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103116:17:19"},"returnParameters":{"id":18844,"nodeType":"ParameterList","parameters":[],"src":"103142:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18851,"nodeType":"FunctionDefinition","src":"103182:54:19","nodes":[],"documentation":{"id":18846,"nodeType":"StructuredDocumentation","src":"103149:28:19","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"103191:11:19","parameters":{"id":18849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18848,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"103211:14:19","nodeType":"VariableDeclaration","scope":18851,"src":"103203:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18847,"name":"uint256","nodeType":"ElementaryTypeName","src":"103203:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103202:24:19"},"returnParameters":{"id":18850,"nodeType":"ParameterList","parameters":[],"src":"103235:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18858,"nodeType":"FunctionDefinition","src":"103403:56:19","nodes":[],"documentation":{"id":18852,"nodeType":"StructuredDocumentation","src":"103242:156:19","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"103412:10:19","parameters":{"id":18856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18855,"mutability":"mutable","name":"hashes","nameLocation":"103442:6:19","nodeType":"VariableDeclaration","scope":18858,"src":"103423:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"103423:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18854,"nodeType":"ArrayTypeName","src":"103423:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"103422:27:19"},"returnParameters":{"id":18857,"nodeType":"ParameterList","parameters":[],"src":"103458:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18864,"nodeType":"FunctionDefinition","src":"103495:46:19","nodes":[],"documentation":{"id":18859,"nodeType":"StructuredDocumentation","src":"103465:25:19","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"103504:7:19","parameters":{"id":18862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18861,"mutability":"mutable","name":"newChainId","nameLocation":"103520:10:19","nodeType":"VariableDeclaration","scope":18864,"src":"103512:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18860,"name":"uint256","nodeType":"ElementaryTypeName","src":"103512:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103511:20:19"},"returnParameters":{"id":18863,"nodeType":"ParameterList","parameters":[],"src":"103540:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18868,"nodeType":"FunctionDefinition","src":"103580:37:19","nodes":[],"documentation":{"id":18865,"nodeType":"StructuredDocumentation","src":"103547:28:19","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"103589:16:19","parameters":{"id":18866,"nodeType":"ParameterList","parameters":[],"src":"103605:2:19"},"returnParameters":{"id":18867,"nodeType":"ParameterList","parameters":[],"src":"103616:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18876,"nodeType":"FunctionDefinition","src":"103739:63:19","nodes":[],"documentation":{"id":18869,"nodeType":"StructuredDocumentation","src":"103623:111:19","text":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"functionSelector":"533d61c9","implemented":false,"kind":"function","modifiers":[],"name":"cloneAccount","nameLocation":"103748:12:19","parameters":{"id":18874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18871,"mutability":"mutable","name":"source","nameLocation":"103769:6:19","nodeType":"VariableDeclaration","scope":18876,"src":"103761:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18870,"name":"address","nodeType":"ElementaryTypeName","src":"103761:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18873,"mutability":"mutable","name":"target","nameLocation":"103785:6:19","nodeType":"VariableDeclaration","scope":18876,"src":"103777:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18872,"name":"address","nodeType":"ElementaryTypeName","src":"103777:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103760:32:19"},"returnParameters":{"id":18875,"nodeType":"ParameterList","parameters":[],"src":"103801:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18882,"nodeType":"FunctionDefinition","src":"103839:48:19","nodes":[],"documentation":{"id":18877,"nodeType":"StructuredDocumentation","src":"103808:26:19","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"103848:8:19","parameters":{"id":18880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18879,"mutability":"mutable","name":"newCoinbase","nameLocation":"103865:11:19","nodeType":"VariableDeclaration","scope":18882,"src":"103857:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18878,"name":"address","nodeType":"ElementaryTypeName","src":"103857:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103856:21:19"},"returnParameters":{"id":18881,"nodeType":"ParameterList","parameters":[],"src":"103886:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18888,"nodeType":"FunctionDefinition","src":"103964:39:19","nodes":[],"documentation":{"id":18883,"nodeType":"StructuredDocumentation","src":"103893:66:19","text":"Marks the slots of an account and the account address as cold."},"functionSelector":"40ff9f21","implemented":false,"kind":"function","modifiers":[],"name":"cool","nameLocation":"103973:4:19","parameters":{"id":18886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18885,"mutability":"mutable","name":"target","nameLocation":"103986:6:19","nodeType":"VariableDeclaration","scope":18888,"src":"103978:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18884,"name":"address","nodeType":"ElementaryTypeName","src":"103978:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103977:16:19"},"returnParameters":{"id":18887,"nodeType":"ParameterList","parameters":[],"src":"104002:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18896,"nodeType":"FunctionDefinition","src":"104100:57:19","nodes":[],"documentation":{"id":18889,"nodeType":"StructuredDocumentation","src":"104009:86:19","text":"Utility cheatcode to mark specific storage slot as cold, simulating no prior read."},"functionSelector":"8c78e654","implemented":false,"kind":"function","modifiers":[],"name":"coolSlot","nameLocation":"104109:8:19","parameters":{"id":18894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18891,"mutability":"mutable","name":"target","nameLocation":"104126:6:19","nodeType":"VariableDeclaration","scope":18896,"src":"104118:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18890,"name":"address","nodeType":"ElementaryTypeName","src":"104118:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18893,"mutability":"mutable","name":"slot","nameLocation":"104142:4:19","nodeType":"VariableDeclaration","scope":18896,"src":"104134:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104134:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104117:30:19"},"returnParameters":{"id":18895,"nodeType":"ParameterList","parameters":[],"src":"104156:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18904,"nodeType":"FunctionDefinition","src":"104277:82:19","nodes":[],"documentation":{"id":18897,"nodeType":"StructuredDocumentation","src":"104163:109:19","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"104286:10:19","parameters":{"id":18900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18899,"mutability":"mutable","name":"urlOrAlias","nameLocation":"104313:10:19","nodeType":"VariableDeclaration","scope":18904,"src":"104297:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18898,"name":"string","nodeType":"ElementaryTypeName","src":"104297:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104296:28:19"},"returnParameters":{"id":18903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18902,"mutability":"mutable","name":"forkId","nameLocation":"104351:6:19","nodeType":"VariableDeclaration","scope":18904,"src":"104343:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18901,"name":"uint256","nodeType":"ElementaryTypeName","src":"104343:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104342:16:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18914,"nodeType":"FunctionDefinition","src":"104466:103:19","nodes":[],"documentation":{"id":18905,"nodeType":"StructuredDocumentation","src":"104365:96:19","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"104475:10:19","parameters":{"id":18910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18907,"mutability":"mutable","name":"urlOrAlias","nameLocation":"104502:10:19","nodeType":"VariableDeclaration","scope":18914,"src":"104486:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18906,"name":"string","nodeType":"ElementaryTypeName","src":"104486:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18909,"mutability":"mutable","name":"blockNumber","nameLocation":"104522:11:19","nodeType":"VariableDeclaration","scope":18914,"src":"104514:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18908,"name":"uint256","nodeType":"ElementaryTypeName","src":"104514:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104485:49:19"},"returnParameters":{"id":18913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18912,"mutability":"mutable","name":"forkId","nameLocation":"104561:6:19","nodeType":"VariableDeclaration","scope":18914,"src":"104553:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18911,"name":"uint256","nodeType":"ElementaryTypeName","src":"104553:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104552:16:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18924,"nodeType":"FunctionDefinition","src":"104794:98:19","nodes":[],"documentation":{"id":18915,"nodeType":"StructuredDocumentation","src":"104575:214:19","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"104803:10:19","parameters":{"id":18920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18917,"mutability":"mutable","name":"urlOrAlias","nameLocation":"104830:10:19","nodeType":"VariableDeclaration","scope":18924,"src":"104814:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18916,"name":"string","nodeType":"ElementaryTypeName","src":"104814:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18919,"mutability":"mutable","name":"txHash","nameLocation":"104850:6:19","nodeType":"VariableDeclaration","scope":18924,"src":"104842:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104842:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104813:44:19"},"returnParameters":{"id":18923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18922,"mutability":"mutable","name":"forkId","nameLocation":"104884:6:19","nodeType":"VariableDeclaration","scope":18924,"src":"104876:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18921,"name":"uint256","nodeType":"ElementaryTypeName","src":"104876:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104875:16:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18932,"nodeType":"FunctionDefinition","src":"105027:88:19","nodes":[],"documentation":{"id":18925,"nodeType":"StructuredDocumentation","src":"104898:124:19","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"105036:16:19","parameters":{"id":18928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18927,"mutability":"mutable","name":"urlOrAlias","nameLocation":"105069:10:19","nodeType":"VariableDeclaration","scope":18932,"src":"105053:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18926,"name":"string","nodeType":"ElementaryTypeName","src":"105053:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"105052:28:19"},"returnParameters":{"id":18931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18930,"mutability":"mutable","name":"forkId","nameLocation":"105107:6:19","nodeType":"VariableDeclaration","scope":18932,"src":"105099:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18929,"name":"uint256","nodeType":"ElementaryTypeName","src":"105099:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105098:16:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18942,"nodeType":"FunctionDefinition","src":"105239:109:19","nodes":[],"documentation":{"id":18933,"nodeType":"StructuredDocumentation","src":"105121:113:19","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"105248:16:19","parameters":{"id":18938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18935,"mutability":"mutable","name":"urlOrAlias","nameLocation":"105281:10:19","nodeType":"VariableDeclaration","scope":18942,"src":"105265:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18934,"name":"string","nodeType":"ElementaryTypeName","src":"105265:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18937,"mutability":"mutable","name":"blockNumber","nameLocation":"105301:11:19","nodeType":"VariableDeclaration","scope":18942,"src":"105293:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18936,"name":"uint256","nodeType":"ElementaryTypeName","src":"105293:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105264:49:19"},"returnParameters":{"id":18941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18940,"mutability":"mutable","name":"forkId","nameLocation":"105340:6:19","nodeType":"VariableDeclaration","scope":18942,"src":"105332:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18939,"name":"uint256","nodeType":"ElementaryTypeName","src":"105332:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105331:16:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18952,"nodeType":"FunctionDefinition","src":"105584:104:19","nodes":[],"documentation":{"id":18943,"nodeType":"StructuredDocumentation","src":"105354:225:19","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"105593:16:19","parameters":{"id":18948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18945,"mutability":"mutable","name":"urlOrAlias","nameLocation":"105626:10:19","nodeType":"VariableDeclaration","scope":18952,"src":"105610:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18944,"name":"string","nodeType":"ElementaryTypeName","src":"105610:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18947,"mutability":"mutable","name":"txHash","nameLocation":"105646:6:19","nodeType":"VariableDeclaration","scope":18952,"src":"105638:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"105638:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"105609:44:19"},"returnParameters":{"id":18951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18950,"mutability":"mutable","name":"forkId","nameLocation":"105680:6:19","nodeType":"VariableDeclaration","scope":18952,"src":"105672:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18949,"name":"uint256","nodeType":"ElementaryTypeName","src":"105672:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105671:16:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18960,"nodeType":"FunctionDefinition","src":"105728:60:19","nodes":[],"documentation":{"id":18953,"nodeType":"StructuredDocumentation","src":"105694:29:19","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"105737:4:19","parameters":{"id":18958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18955,"mutability":"mutable","name":"account","nameLocation":"105750:7:19","nodeType":"VariableDeclaration","scope":18960,"src":"105742:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18954,"name":"address","nodeType":"ElementaryTypeName","src":"105742:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18957,"mutability":"mutable","name":"newBalance","nameLocation":"105767:10:19","nodeType":"VariableDeclaration","scope":18960,"src":"105759:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18956,"name":"uint256","nodeType":"ElementaryTypeName","src":"105759:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105741:37:19"},"returnParameters":{"id":18959,"nodeType":"ParameterList","parameters":[],"src":"105787:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18968,"nodeType":"FunctionDefinition","src":"106026:81:19","nodes":[],"documentation":{"id":18961,"nodeType":"StructuredDocumentation","src":"105794:227:19","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"08d6b37a","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshot","nameLocation":"106035:19:19","parameters":{"id":18964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18963,"mutability":"mutable","name":"snapshotId","nameLocation":"106063:10:19","nodeType":"VariableDeclaration","scope":18968,"src":"106055:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18962,"name":"uint256","nodeType":"ElementaryTypeName","src":"106055:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106054:20:19"},"returnParameters":{"id":18967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18966,"mutability":"mutable","name":"success","nameLocation":"106098:7:19","nodeType":"VariableDeclaration","scope":18968,"src":"106093:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18965,"name":"bool","nodeType":"ElementaryTypeName","src":"106093:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"106092:14:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18972,"nodeType":"FunctionDefinition","src":"106179:41:19","nodes":[],"documentation":{"id":18969,"nodeType":"StructuredDocumentation","src":"106113:61:19","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"e0933c74","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshots","nameLocation":"106188:20:19","parameters":{"id":18970,"nodeType":"ParameterList","parameters":[],"src":"106208:2:19"},"returnParameters":{"id":18971,"nodeType":"ParameterList","parameters":[],"src":"106219:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18978,"nodeType":"FunctionDefinition","src":"106396:52:19","nodes":[],"documentation":{"id":18973,"nodeType":"StructuredDocumentation","src":"106226:165:19","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"106405:10:19","parameters":{"id":18976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18975,"mutability":"mutable","name":"newDifficulty","nameLocation":"106424:13:19","nodeType":"VariableDeclaration","scope":18978,"src":"106416:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18974,"name":"uint256","nodeType":"ElementaryTypeName","src":"106416:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106415:23:19"},"returnParameters":{"id":18977,"nodeType":"ParameterList","parameters":[],"src":"106447:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18984,"nodeType":"FunctionDefinition","src":"106507:61:19","nodes":[],"documentation":{"id":18979,"nodeType":"StructuredDocumentation","src":"106454:48:19","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"106516:9:19","parameters":{"id":18982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18981,"mutability":"mutable","name":"pathToStateJson","nameLocation":"106542:15:19","nodeType":"VariableDeclaration","scope":18984,"src":"106526:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18980,"name":"string","nodeType":"ElementaryTypeName","src":"106526:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"106525:33:19"},"returnParameters":{"id":18983,"nodeType":"ParameterList","parameters":[],"src":"106567:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18992,"nodeType":"FunctionDefinition","src":"106605:74:19","nodes":[],"documentation":{"id":18985,"nodeType":"StructuredDocumentation","src":"106574:26:19","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"106614:4:19","parameters":{"id":18990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18987,"mutability":"mutable","name":"target","nameLocation":"106627:6:19","nodeType":"VariableDeclaration","scope":18992,"src":"106619:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18986,"name":"address","nodeType":"ElementaryTypeName","src":"106619:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18989,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"106650:18:19","nodeType":"VariableDeclaration","scope":18992,"src":"106635:33:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18988,"name":"bytes","nodeType":"ElementaryTypeName","src":"106635:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"106618:51:19"},"returnParameters":{"id":18991,"nodeType":"ParameterList","parameters":[],"src":"106678:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18998,"nodeType":"FunctionDefinition","src":"106715:42:19","nodes":[],"documentation":{"id":18993,"nodeType":"StructuredDocumentation","src":"106685:25:19","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"106724:3:19","parameters":{"id":18996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18995,"mutability":"mutable","name":"newBasefee","nameLocation":"106736:10:19","nodeType":"VariableDeclaration","scope":18998,"src":"106728:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18994,"name":"uint256","nodeType":"ElementaryTypeName","src":"106728:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106727:20:19"},"returnParameters":{"id":18997,"nodeType":"ParameterList","parameters":[],"src":"106756:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19005,"nodeType":"FunctionDefinition","src":"106935:73:19","nodes":[],"documentation":{"id":18999,"nodeType":"StructuredDocumentation","src":"106763:167:19","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"106944:13:19","parameters":{"id":19000,"nodeType":"ParameterList","parameters":[],"src":"106957:2:19"},"returnParameters":{"id":19004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19003,"mutability":"mutable","name":"hashes","nameLocation":"107000:6:19","nodeType":"VariableDeclaration","scope":19005,"src":"106983:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"106983:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19002,"nodeType":"ArrayTypeName","src":"106983:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"106982:25:19"},"scope":19893,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19013,"nodeType":"FunctionDefinition","src":"107075:79:19","nodes":[],"documentation":{"id":19006,"nodeType":"StructuredDocumentation","src":"107014:56:19","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"107084:12:19","parameters":{"id":19009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19008,"mutability":"mutable","name":"account","nameLocation":"107105:7:19","nodeType":"VariableDeclaration","scope":19013,"src":"107097:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19007,"name":"address","nodeType":"ElementaryTypeName","src":"107097:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"107096:17:19"},"returnParameters":{"id":19012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19011,"mutability":"mutable","name":"persistent","nameLocation":"107142:10:19","nodeType":"VariableDeclaration","scope":19013,"src":"107137:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19010,"name":"bool","nodeType":"ElementaryTypeName","src":"107137:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"107136:17:19"},"scope":19893,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19019,"nodeType":"FunctionDefinition","src":"107234:63:19","nodes":[],"documentation":{"id":19014,"nodeType":"StructuredDocumentation","src":"107160:69:19","text":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"107243:10:19","parameters":{"id":19017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19016,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"107270:16:19","nodeType":"VariableDeclaration","scope":19019,"src":"107254:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19015,"name":"string","nodeType":"ElementaryTypeName","src":"107254:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107253:34:19"},"returnParameters":{"id":19018,"nodeType":"ParameterList","parameters":[],"src":"107296:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19025,"nodeType":"FunctionDefinition","src":"107500:50:19","nodes":[],"documentation":{"id":19020,"nodeType":"StructuredDocumentation","src":"107303:192:19","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"107509:14:19","parameters":{"id":19023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19022,"mutability":"mutable","name":"account","nameLocation":"107532:7:19","nodeType":"VariableDeclaration","scope":19025,"src":"107524:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19021,"name":"address","nodeType":"ElementaryTypeName","src":"107524:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"107523:17:19"},"returnParameters":{"id":19024,"nodeType":"ParameterList","parameters":[],"src":"107549:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19033,"nodeType":"FunctionDefinition","src":"107595:69:19","nodes":[],"documentation":{"id":19026,"nodeType":"StructuredDocumentation","src":"107556:34:19","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"107604:14:19","parameters":{"id":19031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19028,"mutability":"mutable","name":"account0","nameLocation":"107627:8:19","nodeType":"VariableDeclaration","scope":19033,"src":"107619:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19027,"name":"address","nodeType":"ElementaryTypeName","src":"107619:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19030,"mutability":"mutable","name":"account1","nameLocation":"107645:8:19","nodeType":"VariableDeclaration","scope":19033,"src":"107637:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19029,"name":"address","nodeType":"ElementaryTypeName","src":"107637:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"107618:36:19"},"returnParameters":{"id":19032,"nodeType":"ParameterList","parameters":[],"src":"107663:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19043,"nodeType":"FunctionDefinition","src":"107709:87:19","nodes":[],"documentation":{"id":19034,"nodeType":"StructuredDocumentation","src":"107670:34:19","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"107718:14:19","parameters":{"id":19041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19036,"mutability":"mutable","name":"account0","nameLocation":"107741:8:19","nodeType":"VariableDeclaration","scope":19043,"src":"107733:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19035,"name":"address","nodeType":"ElementaryTypeName","src":"107733:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19038,"mutability":"mutable","name":"account1","nameLocation":"107759:8:19","nodeType":"VariableDeclaration","scope":19043,"src":"107751:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19037,"name":"address","nodeType":"ElementaryTypeName","src":"107751:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19040,"mutability":"mutable","name":"account2","nameLocation":"107777:8:19","nodeType":"VariableDeclaration","scope":19043,"src":"107769:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19039,"name":"address","nodeType":"ElementaryTypeName","src":"107769:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"107732:54:19"},"returnParameters":{"id":19042,"nodeType":"ParameterList","parameters":[],"src":"107795:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19050,"nodeType":"FunctionDefinition","src":"107841:62:19","nodes":[],"documentation":{"id":19044,"nodeType":"StructuredDocumentation","src":"107802:34:19","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"107850:14:19","parameters":{"id":19048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19047,"mutability":"mutable","name":"accounts","nameLocation":"107884:8:19","nodeType":"VariableDeclaration","scope":19050,"src":"107865:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19045,"name":"address","nodeType":"ElementaryTypeName","src":"107865:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19046,"nodeType":"ArrayTypeName","src":"107865:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"107864:29:19"},"returnParameters":{"id":19049,"nodeType":"ParameterList","parameters":[],"src":"107902:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19060,"nodeType":"FunctionDefinition","src":"107974:97:19","nodes":[],"documentation":{"id":19051,"nodeType":"StructuredDocumentation","src":"107909:60:19","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"107983:14:19","parameters":{"id":19058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19053,"mutability":"mutable","name":"callee","nameLocation":"108006:6:19","nodeType":"VariableDeclaration","scope":19060,"src":"107998:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19052,"name":"address","nodeType":"ElementaryTypeName","src":"107998:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19055,"mutability":"mutable","name":"data","nameLocation":"108029:4:19","nodeType":"VariableDeclaration","scope":19060,"src":"108014:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19054,"name":"bytes","nodeType":"ElementaryTypeName","src":"108014:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19057,"mutability":"mutable","name":"revertData","nameLocation":"108050:10:19","nodeType":"VariableDeclaration","scope":19060,"src":"108035:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19056,"name":"bytes","nodeType":"ElementaryTypeName","src":"108035:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"107997:64:19"},"returnParameters":{"id":19059,"nodeType":"ParameterList","parameters":[],"src":"108070:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19072,"nodeType":"FunctionDefinition","src":"108171:123:19","nodes":[],"documentation":{"id":19061,"nodeType":"StructuredDocumentation","src":"108077:89:19","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"108180:14:19","parameters":{"id":19070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19063,"mutability":"mutable","name":"callee","nameLocation":"108203:6:19","nodeType":"VariableDeclaration","scope":19072,"src":"108195:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19062,"name":"address","nodeType":"ElementaryTypeName","src":"108195:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19065,"mutability":"mutable","name":"msgValue","nameLocation":"108219:8:19","nodeType":"VariableDeclaration","scope":19072,"src":"108211:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19064,"name":"uint256","nodeType":"ElementaryTypeName","src":"108211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19067,"mutability":"mutable","name":"data","nameLocation":"108244:4:19","nodeType":"VariableDeclaration","scope":19072,"src":"108229:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19066,"name":"bytes","nodeType":"ElementaryTypeName","src":"108229:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19069,"mutability":"mutable","name":"revertData","nameLocation":"108265:10:19","nodeType":"VariableDeclaration","scope":19072,"src":"108250:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19068,"name":"bytes","nodeType":"ElementaryTypeName","src":"108250:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"108194:82:19"},"returnParameters":{"id":19071,"nodeType":"ParameterList","parameters":[],"src":"108293:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19082,"nodeType":"FunctionDefinition","src":"108507:89:19","nodes":[],"documentation":{"id":19073,"nodeType":"StructuredDocumentation","src":"108300:202:19","text":"Reverts a call to an address with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"2dfba5df","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"108516:14:19","parameters":{"id":19080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19075,"mutability":"mutable","name":"callee","nameLocation":"108539:6:19","nodeType":"VariableDeclaration","scope":19082,"src":"108531:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19074,"name":"address","nodeType":"ElementaryTypeName","src":"108531:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19077,"mutability":"mutable","name":"data","nameLocation":"108554:4:19","nodeType":"VariableDeclaration","scope":19082,"src":"108547:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19076,"name":"bytes4","nodeType":"ElementaryTypeName","src":"108547:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19079,"mutability":"mutable","name":"revertData","nameLocation":"108575:10:19","nodeType":"VariableDeclaration","scope":19082,"src":"108560:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19078,"name":"bytes","nodeType":"ElementaryTypeName","src":"108560:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"108530:56:19"},"returnParameters":{"id":19081,"nodeType":"ParameterList","parameters":[],"src":"108595:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19094,"nodeType":"FunctionDefinition","src":"108838:107:19","nodes":[],"documentation":{"id":19083,"nodeType":"StructuredDocumentation","src":"108602:231:19","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"596c8f04","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"108847:14:19","parameters":{"id":19092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19085,"mutability":"mutable","name":"callee","nameLocation":"108870:6:19","nodeType":"VariableDeclaration","scope":19094,"src":"108862:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19084,"name":"address","nodeType":"ElementaryTypeName","src":"108862:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19087,"mutability":"mutable","name":"msgValue","nameLocation":"108886:8:19","nodeType":"VariableDeclaration","scope":19094,"src":"108878:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19086,"name":"uint256","nodeType":"ElementaryTypeName","src":"108878:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19089,"mutability":"mutable","name":"data","nameLocation":"108903:4:19","nodeType":"VariableDeclaration","scope":19094,"src":"108896:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19088,"name":"bytes4","nodeType":"ElementaryTypeName","src":"108896:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19091,"mutability":"mutable","name":"revertData","nameLocation":"108924:10:19","nodeType":"VariableDeclaration","scope":19094,"src":"108909:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19090,"name":"bytes","nodeType":"ElementaryTypeName","src":"108909:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"108861:74:19"},"returnParameters":{"id":19093,"nodeType":"ParameterList","parameters":[],"src":"108944:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19104,"nodeType":"FunctionDefinition","src":"109205:91:19","nodes":[],"documentation":{"id":19095,"nodeType":"StructuredDocumentation","src":"108951:249:19","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"109214:8:19","parameters":{"id":19102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19097,"mutability":"mutable","name":"callee","nameLocation":"109231:6:19","nodeType":"VariableDeclaration","scope":19104,"src":"109223:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19096,"name":"address","nodeType":"ElementaryTypeName","src":"109223:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19099,"mutability":"mutable","name":"data","nameLocation":"109254:4:19","nodeType":"VariableDeclaration","scope":19104,"src":"109239:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19098,"name":"bytes","nodeType":"ElementaryTypeName","src":"109239:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19101,"mutability":"mutable","name":"returnData","nameLocation":"109275:10:19","nodeType":"VariableDeclaration","scope":19104,"src":"109260:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19100,"name":"bytes","nodeType":"ElementaryTypeName","src":"109260:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"109222:64:19"},"returnParameters":{"id":19103,"nodeType":"ParameterList","parameters":[],"src":"109295:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19116,"nodeType":"FunctionDefinition","src":"109471:109:19","nodes":[],"documentation":{"id":19105,"nodeType":"StructuredDocumentation","src":"109302:164:19","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"109480:8:19","parameters":{"id":19114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19107,"mutability":"mutable","name":"callee","nameLocation":"109497:6:19","nodeType":"VariableDeclaration","scope":19116,"src":"109489:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19106,"name":"address","nodeType":"ElementaryTypeName","src":"109489:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19109,"mutability":"mutable","name":"msgValue","nameLocation":"109513:8:19","nodeType":"VariableDeclaration","scope":19116,"src":"109505:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19108,"name":"uint256","nodeType":"ElementaryTypeName","src":"109505:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19111,"mutability":"mutable","name":"data","nameLocation":"109538:4:19","nodeType":"VariableDeclaration","scope":19116,"src":"109523:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19110,"name":"bytes","nodeType":"ElementaryTypeName","src":"109523:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19113,"mutability":"mutable","name":"returnData","nameLocation":"109559:10:19","nodeType":"VariableDeclaration","scope":19116,"src":"109544:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19112,"name":"bytes","nodeType":"ElementaryTypeName","src":"109544:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"109488:82:19"},"returnParameters":{"id":19115,"nodeType":"ParameterList","parameters":[],"src":"109579:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19126,"nodeType":"FunctionDefinition","src":"109982:83:19","nodes":[],"documentation":{"id":19117,"nodeType":"StructuredDocumentation","src":"109586:391:19","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"08e0c537","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"109991:8:19","parameters":{"id":19124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19119,"mutability":"mutable","name":"callee","nameLocation":"110008:6:19","nodeType":"VariableDeclaration","scope":19126,"src":"110000:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19118,"name":"address","nodeType":"ElementaryTypeName","src":"110000:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19121,"mutability":"mutable","name":"data","nameLocation":"110023:4:19","nodeType":"VariableDeclaration","scope":19126,"src":"110016:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19120,"name":"bytes4","nodeType":"ElementaryTypeName","src":"110016:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19123,"mutability":"mutable","name":"returnData","nameLocation":"110044:10:19","nodeType":"VariableDeclaration","scope":19126,"src":"110029:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19122,"name":"bytes","nodeType":"ElementaryTypeName","src":"110029:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"109999:56:19"},"returnParameters":{"id":19125,"nodeType":"ParameterList","parameters":[],"src":"110064:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19138,"nodeType":"FunctionDefinition","src":"110382:101:19","nodes":[],"documentation":{"id":19127,"nodeType":"StructuredDocumentation","src":"110071:306:19","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"e7b36a3d","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"110391:8:19","parameters":{"id":19136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19129,"mutability":"mutable","name":"callee","nameLocation":"110408:6:19","nodeType":"VariableDeclaration","scope":19138,"src":"110400:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19128,"name":"address","nodeType":"ElementaryTypeName","src":"110400:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19131,"mutability":"mutable","name":"msgValue","nameLocation":"110424:8:19","nodeType":"VariableDeclaration","scope":19138,"src":"110416:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19130,"name":"uint256","nodeType":"ElementaryTypeName","src":"110416:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19133,"mutability":"mutable","name":"data","nameLocation":"110441:4:19","nodeType":"VariableDeclaration","scope":19138,"src":"110434:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19132,"name":"bytes4","nodeType":"ElementaryTypeName","src":"110434:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19135,"mutability":"mutable","name":"returnData","nameLocation":"110462:10:19","nodeType":"VariableDeclaration","scope":19138,"src":"110447:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19134,"name":"bytes","nodeType":"ElementaryTypeName","src":"110447:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"110399:74:19"},"returnParameters":{"id":19137,"nodeType":"ParameterList","parameters":[],"src":"110482:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19149,"nodeType":"FunctionDefinition","src":"110573:94:19","nodes":[],"documentation":{"id":19139,"nodeType":"StructuredDocumentation","src":"110489:79:19","text":"Mocks multiple calls to an address, returning specified data for each call."},"functionSelector":"5c5c3de9","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"110582:9:19","parameters":{"id":19147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19141,"mutability":"mutable","name":"callee","nameLocation":"110600:6:19","nodeType":"VariableDeclaration","scope":19149,"src":"110592:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19140,"name":"address","nodeType":"ElementaryTypeName","src":"110592:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19143,"mutability":"mutable","name":"data","nameLocation":"110623:4:19","nodeType":"VariableDeclaration","scope":19149,"src":"110608:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19142,"name":"bytes","nodeType":"ElementaryTypeName","src":"110608:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19146,"mutability":"mutable","name":"returnData","nameLocation":"110646:10:19","nodeType":"VariableDeclaration","scope":19149,"src":"110629:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19144,"name":"bytes","nodeType":"ElementaryTypeName","src":"110629:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19145,"nodeType":"ArrayTypeName","src":"110629:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"110591:66:19"},"returnParameters":{"id":19148,"nodeType":"ParameterList","parameters":[],"src":"110666:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19162,"nodeType":"FunctionDefinition","src":"110785:112:19","nodes":[],"documentation":{"id":19150,"nodeType":"StructuredDocumentation","src":"110673:107:19","text":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"functionSelector":"08bcbae1","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"110794:9:19","parameters":{"id":19160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19152,"mutability":"mutable","name":"callee","nameLocation":"110812:6:19","nodeType":"VariableDeclaration","scope":19162,"src":"110804:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19151,"name":"address","nodeType":"ElementaryTypeName","src":"110804:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19154,"mutability":"mutable","name":"msgValue","nameLocation":"110828:8:19","nodeType":"VariableDeclaration","scope":19162,"src":"110820:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19153,"name":"uint256","nodeType":"ElementaryTypeName","src":"110820:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19156,"mutability":"mutable","name":"data","nameLocation":"110853:4:19","nodeType":"VariableDeclaration","scope":19162,"src":"110838:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19155,"name":"bytes","nodeType":"ElementaryTypeName","src":"110838:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19159,"mutability":"mutable","name":"returnData","nameLocation":"110876:10:19","nodeType":"VariableDeclaration","scope":19162,"src":"110859:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19157,"name":"bytes","nodeType":"ElementaryTypeName","src":"110859:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19158,"nodeType":"ArrayTypeName","src":"110859:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"110803:84:19"},"returnParameters":{"id":19161,"nodeType":"ParameterList","parameters":[],"src":"110896:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19172,"nodeType":"FunctionDefinition","src":"111403:84:19","nodes":[],"documentation":{"id":19163,"nodeType":"StructuredDocumentation","src":"110903:495:19","text":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls\n `target` with the same calldata. This functionality is similar to a delegate call made to\n `target` contract from `callee`.\n Can be used to substitute a call to a function with another implementation that captures\n the primary logic of the original function but is easier to reason about.\n If calldata is not a strict match then partial match by selector is attempted."},"functionSelector":"adf84d21","implemented":false,"kind":"function","modifiers":[],"name":"mockFunction","nameLocation":"111412:12:19","parameters":{"id":19170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19165,"mutability":"mutable","name":"callee","nameLocation":"111433:6:19","nodeType":"VariableDeclaration","scope":19172,"src":"111425:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19164,"name":"address","nodeType":"ElementaryTypeName","src":"111425:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19167,"mutability":"mutable","name":"target","nameLocation":"111449:6:19","nodeType":"VariableDeclaration","scope":19172,"src":"111441:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19166,"name":"address","nodeType":"ElementaryTypeName","src":"111441:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19169,"mutability":"mutable","name":"data","nameLocation":"111472:4:19","nodeType":"VariableDeclaration","scope":19172,"src":"111457:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19168,"name":"bytes","nodeType":"ElementaryTypeName","src":"111457:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111424:53:19"},"returnParameters":{"id":19171,"nodeType":"ParameterList","parameters":[],"src":"111486:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19176,"nodeType":"FunctionDefinition","src":"111585:33:19","nodes":[],"documentation":{"id":19173,"nodeType":"StructuredDocumentation","src":"111493:87:19","text":"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode."},"functionSelector":"238ad778","implemented":false,"kind":"function","modifiers":[],"name":"noAccessList","nameLocation":"111594:12:19","parameters":{"id":19174,"nodeType":"ParameterList","parameters":[],"src":"111606:2:19"},"returnParameters":{"id":19175,"nodeType":"ParameterList","parameters":[],"src":"111617:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19182,"nodeType":"FunctionDefinition","src":"111693:43:19","nodes":[],"documentation":{"id":19177,"nodeType":"StructuredDocumentation","src":"111624:64:19","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"111702:5:19","parameters":{"id":19180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19179,"mutability":"mutable","name":"msgSender","nameLocation":"111716:9:19","nodeType":"VariableDeclaration","scope":19182,"src":"111708:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19178,"name":"address","nodeType":"ElementaryTypeName","src":"111708:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"111707:19:19"},"returnParameters":{"id":19181,"nodeType":"ParameterList","parameters":[],"src":"111735:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19190,"nodeType":"FunctionDefinition","src":"111855:61:19","nodes":[],"documentation":{"id":19183,"nodeType":"StructuredDocumentation","src":"111742:108:19","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"111864:5:19","parameters":{"id":19188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19185,"mutability":"mutable","name":"msgSender","nameLocation":"111878:9:19","nodeType":"VariableDeclaration","scope":19190,"src":"111870:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19184,"name":"address","nodeType":"ElementaryTypeName","src":"111870:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19187,"mutability":"mutable","name":"txOrigin","nameLocation":"111897:8:19","nodeType":"VariableDeclaration","scope":19190,"src":"111889:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19186,"name":"address","nodeType":"ElementaryTypeName","src":"111889:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"111869:37:19"},"returnParameters":{"id":19189,"nodeType":"ParameterList","parameters":[],"src":"111915:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19198,"nodeType":"FunctionDefinition","src":"112000:62:19","nodes":[],"documentation":{"id":19191,"nodeType":"StructuredDocumentation","src":"111922:73:19","text":"Sets the *next* delegate call's `msg.sender` to be the input address."},"functionSelector":"a7f8bf5c","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"112009:5:19","parameters":{"id":19196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19193,"mutability":"mutable","name":"msgSender","nameLocation":"112023:9:19","nodeType":"VariableDeclaration","scope":19198,"src":"112015:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19192,"name":"address","nodeType":"ElementaryTypeName","src":"112015:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19195,"mutability":"mutable","name":"delegateCall","nameLocation":"112039:12:19","nodeType":"VariableDeclaration","scope":19198,"src":"112034:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19194,"name":"bool","nodeType":"ElementaryTypeName","src":"112034:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"112014:38:19"},"returnParameters":{"id":19197,"nodeType":"ParameterList","parameters":[],"src":"112061:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19208,"nodeType":"FunctionDefinition","src":"112190:80:19","nodes":[],"documentation":{"id":19199,"nodeType":"StructuredDocumentation","src":"112068:117:19","text":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"7d73d042","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"112199:5:19","parameters":{"id":19206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19201,"mutability":"mutable","name":"msgSender","nameLocation":"112213:9:19","nodeType":"VariableDeclaration","scope":19208,"src":"112205:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19200,"name":"address","nodeType":"ElementaryTypeName","src":"112205:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19203,"mutability":"mutable","name":"txOrigin","nameLocation":"112232:8:19","nodeType":"VariableDeclaration","scope":19208,"src":"112224:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19202,"name":"address","nodeType":"ElementaryTypeName","src":"112224:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19205,"mutability":"mutable","name":"delegateCall","nameLocation":"112247:12:19","nodeType":"VariableDeclaration","scope":19208,"src":"112242:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19204,"name":"bool","nodeType":"ElementaryTypeName","src":"112242:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"112204:56:19"},"returnParameters":{"id":19207,"nodeType":"ParameterList","parameters":[],"src":"112269:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19214,"nodeType":"FunctionDefinition","src":"112447:52:19","nodes":[],"documentation":{"id":19209,"nodeType":"StructuredDocumentation","src":"112276:166:19","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"112456:10:19","parameters":{"id":19212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19211,"mutability":"mutable","name":"newPrevrandao","nameLocation":"112475:13:19","nodeType":"VariableDeclaration","scope":19214,"src":"112467:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"112467:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"112466:23:19"},"returnParameters":{"id":19213,"nodeType":"ParameterList","parameters":[],"src":"112498:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19220,"nodeType":"FunctionDefinition","src":"112676:52:19","nodes":[],"documentation":{"id":19215,"nodeType":"StructuredDocumentation","src":"112505:166:19","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"112685:10:19","parameters":{"id":19218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19217,"mutability":"mutable","name":"newPrevrandao","nameLocation":"112704:13:19","nodeType":"VariableDeclaration","scope":19220,"src":"112696:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19216,"name":"uint256","nodeType":"ElementaryTypeName","src":"112696:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112695:23:19"},"returnParameters":{"id":19219,"nodeType":"ParameterList","parameters":[],"src":"112727:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19231,"nodeType":"FunctionDefinition","src":"112856:101:19","nodes":[],"documentation":{"id":19221,"nodeType":"StructuredDocumentation","src":"112734:117:19","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"112865:11:19","parameters":{"id":19222,"nodeType":"ParameterList","parameters":[],"src":"112876:2:19"},"returnParameters":{"id":19230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19225,"mutability":"mutable","name":"callerMode","nameLocation":"112908:10:19","nodeType":"VariableDeclaration","scope":19231,"src":"112897:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$14788","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":19224,"nodeType":"UserDefinedTypeName","pathNode":{"id":19223,"name":"CallerMode","nameLocations":["112897:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":14788,"src":"112897:10:19"},"referencedDeclaration":14788,"src":"112897:10:19","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$14788","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":19227,"mutability":"mutable","name":"msgSender","nameLocation":"112928:9:19","nodeType":"VariableDeclaration","scope":19231,"src":"112920:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19226,"name":"address","nodeType":"ElementaryTypeName","src":"112920:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19229,"mutability":"mutable","name":"txOrigin","nameLocation":"112947:8:19","nodeType":"VariableDeclaration","scope":19231,"src":"112939:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19228,"name":"address","nodeType":"ElementaryTypeName","src":"112939:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112896:60:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19237,"nodeType":"FunctionDefinition","src":"113045:46:19","nodes":[],"documentation":{"id":19232,"nodeType":"StructuredDocumentation","src":"112963:77:19","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"113054:10:19","parameters":{"id":19235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19234,"mutability":"mutable","name":"account","nameLocation":"113073:7:19","nodeType":"VariableDeclaration","scope":19237,"src":"113065:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19233,"name":"address","nodeType":"ElementaryTypeName","src":"113065:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"113064:17:19"},"returnParameters":{"id":19236,"nodeType":"ParameterList","parameters":[],"src":"113090:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19245,"nodeType":"FunctionDefinition","src":"113439:75:19","nodes":[],"documentation":{"id":19238,"nodeType":"StructuredDocumentation","src":"113097:337:19","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"functionSelector":"c2527405","implemented":false,"kind":"function","modifiers":[],"name":"revertToState","nameLocation":"113448:13:19","parameters":{"id":19241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19240,"mutability":"mutable","name":"snapshotId","nameLocation":"113470:10:19","nodeType":"VariableDeclaration","scope":19245,"src":"113462:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19239,"name":"uint256","nodeType":"ElementaryTypeName","src":"113462:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"113461:20:19"},"returnParameters":{"id":19244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19243,"mutability":"mutable","name":"success","nameLocation":"113505:7:19","nodeType":"VariableDeclaration","scope":19245,"src":"113500:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19242,"name":"bool","nodeType":"ElementaryTypeName","src":"113500:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"113499:14:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19253,"nodeType":"FunctionDefinition","src":"113797:84:19","nodes":[],"documentation":{"id":19246,"nodeType":"StructuredDocumentation","src":"113520:272:19","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"3a1985dc","implemented":false,"kind":"function","modifiers":[],"name":"revertToStateAndDelete","nameLocation":"113806:22:19","parameters":{"id":19249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19248,"mutability":"mutable","name":"snapshotId","nameLocation":"113837:10:19","nodeType":"VariableDeclaration","scope":19253,"src":"113829:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19247,"name":"uint256","nodeType":"ElementaryTypeName","src":"113829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"113828:20:19"},"returnParameters":{"id":19252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19251,"mutability":"mutable","name":"success","nameLocation":"113872:7:19","nodeType":"VariableDeclaration","scope":19253,"src":"113867:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19250,"name":"bool","nodeType":"ElementaryTypeName","src":"113867:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"113866:14:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19259,"nodeType":"FunctionDefinition","src":"113978:52:19","nodes":[],"documentation":{"id":19254,"nodeType":"StructuredDocumentation","src":"113887:86:19","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"113987:16:19","parameters":{"id":19257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19256,"mutability":"mutable","name":"account","nameLocation":"114012:7:19","nodeType":"VariableDeclaration","scope":19259,"src":"114004:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19255,"name":"address","nodeType":"ElementaryTypeName","src":"114004:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114003:17:19"},"returnParameters":{"id":19258,"nodeType":"ParameterList","parameters":[],"src":"114029:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19266,"nodeType":"FunctionDefinition","src":"114077:64:19","nodes":[],"documentation":{"id":19260,"nodeType":"StructuredDocumentation","src":"114036:36:19","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"114086:16:19","parameters":{"id":19264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19263,"mutability":"mutable","name":"accounts","nameLocation":"114122:8:19","nodeType":"VariableDeclaration","scope":19266,"src":"114103:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19261,"name":"address","nodeType":"ElementaryTypeName","src":"114103:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19262,"nodeType":"ArrayTypeName","src":"114103:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"114102:29:19"},"returnParameters":{"id":19265,"nodeType":"ParameterList","parameters":[],"src":"114140:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19272,"nodeType":"FunctionDefinition","src":"114176:42:19","nodes":[],"documentation":{"id":19267,"nodeType":"StructuredDocumentation","src":"114147:24:19","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"114185:4:19","parameters":{"id":19270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19269,"mutability":"mutable","name":"newHeight","nameLocation":"114198:9:19","nodeType":"VariableDeclaration","scope":19272,"src":"114190:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19268,"name":"uint256","nodeType":"ElementaryTypeName","src":"114190:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114189:19:19"},"returnParameters":{"id":19271,"nodeType":"ParameterList","parameters":[],"src":"114217:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19278,"nodeType":"FunctionDefinition","src":"114357:48:19","nodes":[],"documentation":{"id":19273,"nodeType":"StructuredDocumentation","src":"114224:128:19","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"114366:8:19","parameters":{"id":19276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19275,"mutability":"mutable","name":"blockNumber","nameLocation":"114383:11:19","nodeType":"VariableDeclaration","scope":19278,"src":"114375:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19274,"name":"uint256","nodeType":"ElementaryTypeName","src":"114375:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114374:21:19"},"returnParameters":{"id":19277,"nodeType":"ParameterList","parameters":[],"src":"114404:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19284,"nodeType":"FunctionDefinition","src":"114620:43:19","nodes":[],"documentation":{"id":19279,"nodeType":"StructuredDocumentation","src":"114411:204:19","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"114629:8:19","parameters":{"id":19282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19281,"mutability":"mutable","name":"txHash","nameLocation":"114646:6:19","nodeType":"VariableDeclaration","scope":19284,"src":"114638:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"114638:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"114637:16:19"},"returnParameters":{"id":19283,"nodeType":"ParameterList","parameters":[],"src":"114662:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19292,"nodeType":"FunctionDefinition","src":"114723:64:19","nodes":[],"documentation":{"id":19285,"nodeType":"StructuredDocumentation","src":"114669:49:19","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"114732:8:19","parameters":{"id":19290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19287,"mutability":"mutable","name":"forkId","nameLocation":"114749:6:19","nodeType":"VariableDeclaration","scope":19292,"src":"114741:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19286,"name":"uint256","nodeType":"ElementaryTypeName","src":"114741:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19289,"mutability":"mutable","name":"blockNumber","nameLocation":"114765:11:19","nodeType":"VariableDeclaration","scope":19292,"src":"114757:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19288,"name":"uint256","nodeType":"ElementaryTypeName","src":"114757:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114740:37:19"},"returnParameters":{"id":19291,"nodeType":"ParameterList","parameters":[],"src":"114786:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19300,"nodeType":"FunctionDefinition","src":"114923:59:19","nodes":[],"documentation":{"id":19293,"nodeType":"StructuredDocumentation","src":"114793:125:19","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"114932:8:19","parameters":{"id":19298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19295,"mutability":"mutable","name":"forkId","nameLocation":"114949:6:19","nodeType":"VariableDeclaration","scope":19300,"src":"114941:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19294,"name":"uint256","nodeType":"ElementaryTypeName","src":"114941:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19297,"mutability":"mutable","name":"txHash","nameLocation":"114965:6:19","nodeType":"VariableDeclaration","scope":19300,"src":"114957:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"114957:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"114940:32:19"},"returnParameters":{"id":19299,"nodeType":"ParameterList","parameters":[],"src":"114981:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19306,"nodeType":"FunctionDefinition","src":"115095:45:19","nodes":[],"documentation":{"id":19301,"nodeType":"StructuredDocumentation","src":"114988:102:19","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"115104:10:19","parameters":{"id":19304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19303,"mutability":"mutable","name":"forkId","nameLocation":"115123:6:19","nodeType":"VariableDeclaration","scope":19306,"src":"115115:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19302,"name":"uint256","nodeType":"ElementaryTypeName","src":"115115:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115114:16:19"},"returnParameters":{"id":19305,"nodeType":"ParameterList","parameters":[],"src":"115139:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19314,"nodeType":"FunctionDefinition","src":"115290:71:19","nodes":[],"documentation":{"id":19307,"nodeType":"StructuredDocumentation","src":"115146:139:19","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"115299:12:19","parameters":{"id":19312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19309,"mutability":"mutable","name":"blockNumber","nameLocation":"115320:11:19","nodeType":"VariableDeclaration","scope":19314,"src":"115312:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19308,"name":"uint256","nodeType":"ElementaryTypeName","src":"115312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19311,"mutability":"mutable","name":"blockHash","nameLocation":"115341:9:19","nodeType":"VariableDeclaration","scope":19314,"src":"115333:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"115333:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"115311:40:19"},"returnParameters":{"id":19313,"nodeType":"ParameterList","parameters":[],"src":"115360:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19322,"nodeType":"FunctionDefinition","src":"115459:61:19","nodes":[],"documentation":{"id":19315,"nodeType":"StructuredDocumentation","src":"115367:87:19","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"115468:8:19","parameters":{"id":19320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19317,"mutability":"mutable","name":"account","nameLocation":"115485:7:19","nodeType":"VariableDeclaration","scope":19322,"src":"115477:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19316,"name":"address","nodeType":"ElementaryTypeName","src":"115477:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19319,"mutability":"mutable","name":"newNonce","nameLocation":"115501:8:19","nodeType":"VariableDeclaration","scope":19322,"src":"115494:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19318,"name":"uint64","nodeType":"ElementaryTypeName","src":"115494:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"115476:34:19"},"returnParameters":{"id":19321,"nodeType":"ParameterList","parameters":[],"src":"115519:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19330,"nodeType":"FunctionDefinition","src":"115586:67:19","nodes":[],"documentation":{"id":19323,"nodeType":"StructuredDocumentation","src":"115526:55:19","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"115595:14:19","parameters":{"id":19328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19325,"mutability":"mutable","name":"account","nameLocation":"115618:7:19","nodeType":"VariableDeclaration","scope":19330,"src":"115610:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19324,"name":"address","nodeType":"ElementaryTypeName","src":"115610:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19327,"mutability":"mutable","name":"newNonce","nameLocation":"115634:8:19","nodeType":"VariableDeclaration","scope":19330,"src":"115627:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19326,"name":"uint64","nodeType":"ElementaryTypeName","src":"115627:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"115609:34:19"},"returnParameters":{"id":19329,"nodeType":"ParameterList","parameters":[],"src":"115652:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19338,"nodeType":"FunctionDefinition","src":"115752:86:19","nodes":[],"documentation":{"id":19331,"nodeType":"StructuredDocumentation","src":"115659:88:19","text":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"functionSelector":"dd9fca12","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"115761:19:19","parameters":{"id":19334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19333,"mutability":"mutable","name":"name","nameLocation":"115797:4:19","nodeType":"VariableDeclaration","scope":19338,"src":"115781:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19332,"name":"string","nodeType":"ElementaryTypeName","src":"115781:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"115780:22:19"},"returnParameters":{"id":19337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19336,"mutability":"mutable","name":"gasUsed","nameLocation":"115829:7:19","nodeType":"VariableDeclaration","scope":19338,"src":"115821:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19335,"name":"uint256","nodeType":"ElementaryTypeName","src":"115821:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115820:17:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19348,"nodeType":"FunctionDefinition","src":"115948:109:19","nodes":[],"documentation":{"id":19339,"nodeType":"StructuredDocumentation","src":"115844:99:19","text":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"functionSelector":"200c6772","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"115957:19:19","parameters":{"id":19344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19341,"mutability":"mutable","name":"group","nameLocation":"115993:5:19","nodeType":"VariableDeclaration","scope":19348,"src":"115977:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19340,"name":"string","nodeType":"ElementaryTypeName","src":"115977:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19343,"mutability":"mutable","name":"name","nameLocation":"116016:4:19","nodeType":"VariableDeclaration","scope":19348,"src":"116000:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19342,"name":"string","nodeType":"ElementaryTypeName","src":"116000:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"115976:45:19"},"returnParameters":{"id":19347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19346,"mutability":"mutable","name":"gasUsed","nameLocation":"116048:7:19","nodeType":"VariableDeclaration","scope":19348,"src":"116040:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19345,"name":"uint256","nodeType":"ElementaryTypeName","src":"116040:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116039:17:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19354,"nodeType":"FunctionDefinition","src":"116217:63:19","nodes":[],"documentation":{"id":19349,"nodeType":"StructuredDocumentation","src":"116063:149:19","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertToState`."},"functionSelector":"9cd23835","implemented":false,"kind":"function","modifiers":[],"name":"snapshotState","nameLocation":"116226:13:19","parameters":{"id":19350,"nodeType":"ParameterList","parameters":[],"src":"116239:2:19"},"returnParameters":{"id":19353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19352,"mutability":"mutable","name":"snapshotId","nameLocation":"116268:10:19","nodeType":"VariableDeclaration","scope":19354,"src":"116260:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19351,"name":"uint256","nodeType":"ElementaryTypeName","src":"116260:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116259:20:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19362,"nodeType":"FunctionDefinition","src":"116407:69:19","nodes":[],"documentation":{"id":19355,"nodeType":"StructuredDocumentation","src":"116286:116:19","text":"Snapshot capture an arbitrary numerical value by name.\n The group name is derived from the contract name."},"functionSelector":"51db805a","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"116416:13:19","parameters":{"id":19360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19357,"mutability":"mutable","name":"name","nameLocation":"116446:4:19","nodeType":"VariableDeclaration","scope":19362,"src":"116430:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19356,"name":"string","nodeType":"ElementaryTypeName","src":"116430:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19359,"mutability":"mutable","name":"value","nameLocation":"116460:5:19","nodeType":"VariableDeclaration","scope":19362,"src":"116452:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19358,"name":"uint256","nodeType":"ElementaryTypeName","src":"116452:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116429:37:19"},"returnParameters":{"id":19361,"nodeType":"ParameterList","parameters":[],"src":"116475:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19372,"nodeType":"FunctionDefinition","src":"116556:92:19","nodes":[],"documentation":{"id":19363,"nodeType":"StructuredDocumentation","src":"116482:69:19","text":"Snapshot capture an arbitrary numerical value by name in a group."},"functionSelector":"6d2b27d8","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"116565:13:19","parameters":{"id":19370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19365,"mutability":"mutable","name":"group","nameLocation":"116595:5:19","nodeType":"VariableDeclaration","scope":19372,"src":"116579:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19364,"name":"string","nodeType":"ElementaryTypeName","src":"116579:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19367,"mutability":"mutable","name":"name","nameLocation":"116618:4:19","nodeType":"VariableDeclaration","scope":19372,"src":"116602:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19366,"name":"string","nodeType":"ElementaryTypeName","src":"116602:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19369,"mutability":"mutable","name":"value","nameLocation":"116632:5:19","nodeType":"VariableDeclaration","scope":19372,"src":"116624:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19368,"name":"uint256","nodeType":"ElementaryTypeName","src":"116624:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116578:60:19"},"returnParameters":{"id":19371,"nodeType":"ParameterList","parameters":[],"src":"116647:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19378,"nodeType":"FunctionDefinition","src":"116755:48:19","nodes":[],"documentation":{"id":19373,"nodeType":"StructuredDocumentation","src":"116654:96:19","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"116764:10:19","parameters":{"id":19376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19375,"mutability":"mutable","name":"msgSender","nameLocation":"116783:9:19","nodeType":"VariableDeclaration","scope":19378,"src":"116775:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19374,"name":"address","nodeType":"ElementaryTypeName","src":"116775:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116774:19:19"},"returnParameters":{"id":19377,"nodeType":"ParameterList","parameters":[],"src":"116802:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19386,"nodeType":"FunctionDefinition","src":"116954:66:19","nodes":[],"documentation":{"id":19379,"nodeType":"StructuredDocumentation","src":"116809:140:19","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"116963:10:19","parameters":{"id":19384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19381,"mutability":"mutable","name":"msgSender","nameLocation":"116982:9:19","nodeType":"VariableDeclaration","scope":19386,"src":"116974:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19380,"name":"address","nodeType":"ElementaryTypeName","src":"116974:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19383,"mutability":"mutable","name":"txOrigin","nameLocation":"117001:8:19","nodeType":"VariableDeclaration","scope":19386,"src":"116993:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19382,"name":"address","nodeType":"ElementaryTypeName","src":"116993:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116973:37:19"},"returnParameters":{"id":19385,"nodeType":"ParameterList","parameters":[],"src":"117019:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19394,"nodeType":"FunctionDefinition","src":"117136:67:19","nodes":[],"documentation":{"id":19387,"nodeType":"StructuredDocumentation","src":"117026:105:19","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"1cc0b435","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"117145:10:19","parameters":{"id":19392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19389,"mutability":"mutable","name":"msgSender","nameLocation":"117164:9:19","nodeType":"VariableDeclaration","scope":19394,"src":"117156:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19388,"name":"address","nodeType":"ElementaryTypeName","src":"117156:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19391,"mutability":"mutable","name":"delegateCall","nameLocation":"117180:12:19","nodeType":"VariableDeclaration","scope":19394,"src":"117175:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19390,"name":"bool","nodeType":"ElementaryTypeName","src":"117175:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"117155:38:19"},"returnParameters":{"id":19393,"nodeType":"ParameterList","parameters":[],"src":"117202:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19404,"nodeType":"FunctionDefinition","src":"117363:85:19","nodes":[],"documentation":{"id":19395,"nodeType":"StructuredDocumentation","src":"117209:149:19","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"4eb859b5","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"117372:10:19","parameters":{"id":19402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19397,"mutability":"mutable","name":"msgSender","nameLocation":"117391:9:19","nodeType":"VariableDeclaration","scope":19404,"src":"117383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19396,"name":"address","nodeType":"ElementaryTypeName","src":"117383:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19399,"mutability":"mutable","name":"txOrigin","nameLocation":"117410:8:19","nodeType":"VariableDeclaration","scope":19404,"src":"117402:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19398,"name":"address","nodeType":"ElementaryTypeName","src":"117402:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19401,"mutability":"mutable","name":"delegateCall","nameLocation":"117425:12:19","nodeType":"VariableDeclaration","scope":19404,"src":"117420:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19400,"name":"bool","nodeType":"ElementaryTypeName","src":"117420:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"117382:56:19"},"returnParameters":{"id":19403,"nodeType":"ParameterList","parameters":[],"src":"117447:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19410,"nodeType":"FunctionDefinition","src":"117579:57:19","nodes":[],"documentation":{"id":19405,"nodeType":"StructuredDocumentation","src":"117454:120:19","text":"Start a snapshot capture of the current gas usage by name.\n The group name is derived from the contract name."},"functionSelector":"3cad9d7b","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"117588:16:19","parameters":{"id":19408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19407,"mutability":"mutable","name":"name","nameLocation":"117621:4:19","nodeType":"VariableDeclaration","scope":19410,"src":"117605:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19406,"name":"string","nodeType":"ElementaryTypeName","src":"117605:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"117604:22:19"},"returnParameters":{"id":19409,"nodeType":"ParameterList","parameters":[],"src":"117635:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19418,"nodeType":"FunctionDefinition","src":"117720:80:19","nodes":[],"documentation":{"id":19411,"nodeType":"StructuredDocumentation","src":"117642:73:19","text":"Start a snapshot capture of the current gas usage by name in a group."},"functionSelector":"6cd0cc53","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"117729:16:19","parameters":{"id":19416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19413,"mutability":"mutable","name":"group","nameLocation":"117762:5:19","nodeType":"VariableDeclaration","scope":19418,"src":"117746:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19412,"name":"string","nodeType":"ElementaryTypeName","src":"117746:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19415,"mutability":"mutable","name":"name","nameLocation":"117785:4:19","nodeType":"VariableDeclaration","scope":19418,"src":"117769:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19414,"name":"string","nodeType":"ElementaryTypeName","src":"117769:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"117745:45:19"},"returnParameters":{"id":19417,"nodeType":"ParameterList","parameters":[],"src":"117799:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19422,"nodeType":"FunctionDefinition","src":"117875:30:19","nodes":[],"documentation":{"id":19419,"nodeType":"StructuredDocumentation","src":"117806:64:19","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"117884:9:19","parameters":{"id":19420,"nodeType":"ParameterList","parameters":[],"src":"117893:2:19"},"returnParameters":{"id":19421,"nodeType":"ParameterList","parameters":[],"src":"117904:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19428,"nodeType":"FunctionDefinition","src":"118029:62:19","nodes":[],"documentation":{"id":19423,"nodeType":"StructuredDocumentation","src":"117911:113:19","text":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"functionSelector":"f6402eda","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"118038:15:19","parameters":{"id":19424,"nodeType":"ParameterList","parameters":[],"src":"118053:2:19"},"returnParameters":{"id":19427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19426,"mutability":"mutable","name":"gasUsed","nameLocation":"118082:7:19","nodeType":"VariableDeclaration","scope":19428,"src":"118074:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19425,"name":"uint256","nodeType":"ElementaryTypeName","src":"118074:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"118073:17:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19436,"nodeType":"FunctionDefinition","src":"118263:82:19","nodes":[],"documentation":{"id":19429,"nodeType":"StructuredDocumentation","src":"118097:161:19","text":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start.\n The group name is derived from the contract name."},"functionSelector":"773b2805","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"118272:15:19","parameters":{"id":19432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19431,"mutability":"mutable","name":"name","nameLocation":"118304:4:19","nodeType":"VariableDeclaration","scope":19436,"src":"118288:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19430,"name":"string","nodeType":"ElementaryTypeName","src":"118288:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"118287:22:19"},"returnParameters":{"id":19435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19434,"mutability":"mutable","name":"gasUsed","nameLocation":"118336:7:19","nodeType":"VariableDeclaration","scope":19436,"src":"118328:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19433,"name":"uint256","nodeType":"ElementaryTypeName","src":"118328:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"118327:17:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19446,"nodeType":"FunctionDefinition","src":"118470:105:19","nodes":[],"documentation":{"id":19437,"nodeType":"StructuredDocumentation","src":"118351:114:19","text":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"functionSelector":"0c9db707","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"118479:15:19","parameters":{"id":19442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19439,"mutability":"mutable","name":"group","nameLocation":"118511:5:19","nodeType":"VariableDeclaration","scope":19446,"src":"118495:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19438,"name":"string","nodeType":"ElementaryTypeName","src":"118495:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19441,"mutability":"mutable","name":"name","nameLocation":"118534:4:19","nodeType":"VariableDeclaration","scope":19446,"src":"118518:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19440,"name":"string","nodeType":"ElementaryTypeName","src":"118518:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"118494:45:19"},"returnParameters":{"id":19445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19444,"mutability":"mutable","name":"gasUsed","nameLocation":"118566:7:19","nodeType":"VariableDeclaration","scope":19446,"src":"118558:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19443,"name":"uint256","nodeType":"ElementaryTypeName","src":"118558:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"118557:17:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19456,"nodeType":"FunctionDefinition","src":"118633:69:19","nodes":[],"documentation":{"id":19447,"nodeType":"StructuredDocumentation","src":"118581:47:19","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"118642:5:19","parameters":{"id":19454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19449,"mutability":"mutable","name":"target","nameLocation":"118656:6:19","nodeType":"VariableDeclaration","scope":19456,"src":"118648:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19448,"name":"address","nodeType":"ElementaryTypeName","src":"118648:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19451,"mutability":"mutable","name":"slot","nameLocation":"118672:4:19","nodeType":"VariableDeclaration","scope":19456,"src":"118664:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"118664:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19453,"mutability":"mutable","name":"value","nameLocation":"118686:5:19","nodeType":"VariableDeclaration","scope":19456,"src":"118678:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"118678:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"118647:45:19"},"returnParameters":{"id":19455,"nodeType":"ParameterList","parameters":[],"src":"118701:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19462,"nodeType":"FunctionDefinition","src":"118805:43:19","nodes":[],"documentation":{"id":19457,"nodeType":"StructuredDocumentation","src":"118708:92:19","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"118814:8:19","parameters":{"id":19460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19459,"mutability":"mutable","name":"txHash","nameLocation":"118831:6:19","nodeType":"VariableDeclaration","scope":19462,"src":"118823:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"118823:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"118822:16:19"},"returnParameters":{"id":19461,"nodeType":"ParameterList","parameters":[],"src":"118847:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19470,"nodeType":"FunctionDefinition","src":"118950:59:19","nodes":[],"documentation":{"id":19463,"nodeType":"StructuredDocumentation","src":"118854:91:19","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"118959:8:19","parameters":{"id":19468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19465,"mutability":"mutable","name":"forkId","nameLocation":"118976:6:19","nodeType":"VariableDeclaration","scope":19470,"src":"118968:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19464,"name":"uint256","nodeType":"ElementaryTypeName","src":"118968:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19467,"mutability":"mutable","name":"txHash","nameLocation":"118992:6:19","nodeType":"VariableDeclaration","scope":19470,"src":"118984:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"118984:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"118967:32:19"},"returnParameters":{"id":19469,"nodeType":"ParameterList","parameters":[],"src":"119008:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19476,"nodeType":"FunctionDefinition","src":"119043:50:19","nodes":[],"documentation":{"id":19471,"nodeType":"StructuredDocumentation","src":"119015:23:19","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"119052:10:19","parameters":{"id":19474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19473,"mutability":"mutable","name":"newGasPrice","nameLocation":"119071:11:19","nodeType":"VariableDeclaration","scope":19476,"src":"119063:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19472,"name":"uint256","nodeType":"ElementaryTypeName","src":"119063:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"119062:21:19"},"returnParameters":{"id":19475,"nodeType":"ParameterList","parameters":[],"src":"119092:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19484,"nodeType":"FunctionDefinition","src":"119189:57:19","nodes":[],"documentation":{"id":19477,"nodeType":"StructuredDocumentation","src":"119099:85:19","text":"Utility cheatcode to mark specific storage slot as warm, simulating a prior read."},"functionSelector":"b23184cf","implemented":false,"kind":"function","modifiers":[],"name":"warmSlot","nameLocation":"119198:8:19","parameters":{"id":19482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19479,"mutability":"mutable","name":"target","nameLocation":"119215:6:19","nodeType":"VariableDeclaration","scope":19484,"src":"119207:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19478,"name":"address","nodeType":"ElementaryTypeName","src":"119207:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19481,"mutability":"mutable","name":"slot","nameLocation":"119231:4:19","nodeType":"VariableDeclaration","scope":19484,"src":"119223:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"119223:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"119206:30:19"},"returnParameters":{"id":19483,"nodeType":"ParameterList","parameters":[],"src":"119245:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19490,"nodeType":"FunctionDefinition","src":"119284:45:19","nodes":[],"documentation":{"id":19485,"nodeType":"StructuredDocumentation","src":"119252:27:19","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"119293:4:19","parameters":{"id":19488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19487,"mutability":"mutable","name":"newTimestamp","nameLocation":"119306:12:19","nodeType":"VariableDeclaration","scope":19490,"src":"119298:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19486,"name":"uint256","nodeType":"ElementaryTypeName","src":"119298:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"119297:22:19"},"returnParameters":{"id":19489,"nodeType":"ParameterList","parameters":[],"src":"119328:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19498,"nodeType":"FunctionDefinition","src":"119454:76:19","nodes":[],"documentation":{"id":19491,"nodeType":"StructuredDocumentation","src":"119335:114:19","text":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"119463:14:19","parameters":{"id":19494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19493,"mutability":"mutable","name":"snapshotId","nameLocation":"119486:10:19","nodeType":"VariableDeclaration","scope":19498,"src":"119478:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19492,"name":"uint256","nodeType":"ElementaryTypeName","src":"119478:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"119477:20:19"},"returnParameters":{"id":19497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19496,"mutability":"mutable","name":"success","nameLocation":"119521:7:19","nodeType":"VariableDeclaration","scope":19498,"src":"119516:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19495,"name":"bool","nodeType":"ElementaryTypeName","src":"119516:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"119515:14:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19502,"nodeType":"FunctionDefinition","src":"119657:36:19","nodes":[],"documentation":{"id":19499,"nodeType":"StructuredDocumentation","src":"119536:116:19","text":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"119666:15:19","parameters":{"id":19500,"nodeType":"ParameterList","parameters":[],"src":"119681:2:19"},"returnParameters":{"id":19501,"nodeType":"ParameterList","parameters":[],"src":"119692:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19510,"nodeType":"FunctionDefinition","src":"119824:79:19","nodes":[],"documentation":{"id":19503,"nodeType":"StructuredDocumentation","src":"119699:120:19","text":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"119833:17:19","parameters":{"id":19506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19505,"mutability":"mutable","name":"snapshotId","nameLocation":"119859:10:19","nodeType":"VariableDeclaration","scope":19510,"src":"119851:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19504,"name":"uint256","nodeType":"ElementaryTypeName","src":"119851:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"119850:20:19"},"returnParameters":{"id":19509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19508,"mutability":"mutable","name":"success","nameLocation":"119894:7:19","nodeType":"VariableDeclaration","scope":19510,"src":"119889:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19507,"name":"bool","nodeType":"ElementaryTypeName","src":"119889:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"119888:14:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19518,"nodeType":"FunctionDefinition","src":"120016:70:19","nodes":[],"documentation":{"id":19511,"nodeType":"StructuredDocumentation","src":"119909:102:19","text":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"120025:8:19","parameters":{"id":19514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19513,"mutability":"mutable","name":"snapshotId","nameLocation":"120042:10:19","nodeType":"VariableDeclaration","scope":19518,"src":"120034:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19512,"name":"uint256","nodeType":"ElementaryTypeName","src":"120034:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120033:20:19"},"returnParameters":{"id":19517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19516,"mutability":"mutable","name":"success","nameLocation":"120077:7:19","nodeType":"VariableDeclaration","scope":19518,"src":"120072:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19515,"name":"bool","nodeType":"ElementaryTypeName","src":"120072:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"120071:14:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19524,"nodeType":"FunctionDefinition","src":"120199:58:19","nodes":[],"documentation":{"id":19519,"nodeType":"StructuredDocumentation","src":"120092:102:19","text":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"120208:8:19","parameters":{"id":19520,"nodeType":"ParameterList","parameters":[],"src":"120216:2:19"},"returnParameters":{"id":19523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19522,"mutability":"mutable","name":"snapshotId","nameLocation":"120245:10:19","nodeType":"VariableDeclaration","scope":19524,"src":"120237:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19521,"name":"uint256","nodeType":"ElementaryTypeName","src":"120237:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120236:20:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19536,"nodeType":"FunctionDefinition","src":"120409:105:19","nodes":[],"documentation":{"id":19525,"nodeType":"StructuredDocumentation","src":"120297:107:19","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"120418:16:19","parameters":{"id":19534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19527,"mutability":"mutable","name":"callee","nameLocation":"120443:6:19","nodeType":"VariableDeclaration","scope":19536,"src":"120435:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19526,"name":"address","nodeType":"ElementaryTypeName","src":"120435:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19529,"mutability":"mutable","name":"msgValue","nameLocation":"120459:8:19","nodeType":"VariableDeclaration","scope":19536,"src":"120451:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19528,"name":"uint256","nodeType":"ElementaryTypeName","src":"120451:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19531,"mutability":"mutable","name":"minGas","nameLocation":"120476:6:19","nodeType":"VariableDeclaration","scope":19536,"src":"120469:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19530,"name":"uint64","nodeType":"ElementaryTypeName","src":"120469:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19533,"mutability":"mutable","name":"data","nameLocation":"120499:4:19","nodeType":"VariableDeclaration","scope":19536,"src":"120484:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19532,"name":"bytes","nodeType":"ElementaryTypeName","src":"120484:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"120434:70:19"},"returnParameters":{"id":19535,"nodeType":"ParameterList","parameters":[],"src":"120513:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19550,"nodeType":"FunctionDefinition","src":"120647:127:19","nodes":[],"documentation":{"id":19537,"nodeType":"StructuredDocumentation","src":"120520:122:19","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"120656:16:19","parameters":{"id":19548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19539,"mutability":"mutable","name":"callee","nameLocation":"120681:6:19","nodeType":"VariableDeclaration","scope":19550,"src":"120673:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19538,"name":"address","nodeType":"ElementaryTypeName","src":"120673:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19541,"mutability":"mutable","name":"msgValue","nameLocation":"120697:8:19","nodeType":"VariableDeclaration","scope":19550,"src":"120689:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19540,"name":"uint256","nodeType":"ElementaryTypeName","src":"120689:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19543,"mutability":"mutable","name":"minGas","nameLocation":"120714:6:19","nodeType":"VariableDeclaration","scope":19550,"src":"120707:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19542,"name":"uint64","nodeType":"ElementaryTypeName","src":"120707:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19545,"mutability":"mutable","name":"data","nameLocation":"120737:4:19","nodeType":"VariableDeclaration","scope":19550,"src":"120722:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19544,"name":"bytes","nodeType":"ElementaryTypeName","src":"120722:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19547,"mutability":"mutable","name":"count","nameLocation":"120750:5:19","nodeType":"VariableDeclaration","scope":19550,"src":"120743:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19546,"name":"uint64","nodeType":"ElementaryTypeName","src":"120743:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"120672:84:19"},"returnParameters":{"id":19549,"nodeType":"ParameterList","parameters":[],"src":"120773:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19558,"nodeType":"FunctionDefinition","src":"120906:66:19","nodes":[],"documentation":{"id":19551,"nodeType":"StructuredDocumentation","src":"120780:121:19","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"120915:10:19","parameters":{"id":19556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19553,"mutability":"mutable","name":"callee","nameLocation":"120934:6:19","nodeType":"VariableDeclaration","scope":19558,"src":"120926:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19552,"name":"address","nodeType":"ElementaryTypeName","src":"120926:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19555,"mutability":"mutable","name":"data","nameLocation":"120957:4:19","nodeType":"VariableDeclaration","scope":19558,"src":"120942:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19554,"name":"bytes","nodeType":"ElementaryTypeName","src":"120942:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"120925:37:19"},"returnParameters":{"id":19557,"nodeType":"ParameterList","parameters":[],"src":"120971:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19568,"nodeType":"FunctionDefinition","src":"121059:80:19","nodes":[],"documentation":{"id":19559,"nodeType":"StructuredDocumentation","src":"120978:76:19","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"121068:10:19","parameters":{"id":19566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19561,"mutability":"mutable","name":"callee","nameLocation":"121087:6:19","nodeType":"VariableDeclaration","scope":19568,"src":"121079:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19560,"name":"address","nodeType":"ElementaryTypeName","src":"121079:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19563,"mutability":"mutable","name":"data","nameLocation":"121110:4:19","nodeType":"VariableDeclaration","scope":19568,"src":"121095:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19562,"name":"bytes","nodeType":"ElementaryTypeName","src":"121095:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19565,"mutability":"mutable","name":"count","nameLocation":"121123:5:19","nodeType":"VariableDeclaration","scope":19568,"src":"121116:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19564,"name":"uint64","nodeType":"ElementaryTypeName","src":"121116:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"121078:51:19"},"returnParameters":{"id":19567,"nodeType":"ParameterList","parameters":[],"src":"121138:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19578,"nodeType":"FunctionDefinition","src":"121227:84:19","nodes":[],"documentation":{"id":19569,"nodeType":"StructuredDocumentation","src":"121145:77:19","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"121236:10:19","parameters":{"id":19576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19571,"mutability":"mutable","name":"callee","nameLocation":"121255:6:19","nodeType":"VariableDeclaration","scope":19578,"src":"121247:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19570,"name":"address","nodeType":"ElementaryTypeName","src":"121247:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19573,"mutability":"mutable","name":"msgValue","nameLocation":"121271:8:19","nodeType":"VariableDeclaration","scope":19578,"src":"121263:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19572,"name":"uint256","nodeType":"ElementaryTypeName","src":"121263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19575,"mutability":"mutable","name":"data","nameLocation":"121296:4:19","nodeType":"VariableDeclaration","scope":19578,"src":"121281:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19574,"name":"bytes","nodeType":"ElementaryTypeName","src":"121281:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"121246:55:19"},"returnParameters":{"id":19577,"nodeType":"ParameterList","parameters":[],"src":"121310:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19590,"nodeType":"FunctionDefinition","src":"121414:98:19","nodes":[],"documentation":{"id":19579,"nodeType":"StructuredDocumentation","src":"121317:92:19","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"121423:10:19","parameters":{"id":19588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19581,"mutability":"mutable","name":"callee","nameLocation":"121442:6:19","nodeType":"VariableDeclaration","scope":19590,"src":"121434:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19580,"name":"address","nodeType":"ElementaryTypeName","src":"121434:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19583,"mutability":"mutable","name":"msgValue","nameLocation":"121458:8:19","nodeType":"VariableDeclaration","scope":19590,"src":"121450:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19582,"name":"uint256","nodeType":"ElementaryTypeName","src":"121450:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19585,"mutability":"mutable","name":"data","nameLocation":"121483:4:19","nodeType":"VariableDeclaration","scope":19590,"src":"121468:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19584,"name":"bytes","nodeType":"ElementaryTypeName","src":"121468:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19587,"mutability":"mutable","name":"count","nameLocation":"121496:5:19","nodeType":"VariableDeclaration","scope":19590,"src":"121489:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19586,"name":"uint64","nodeType":"ElementaryTypeName","src":"121489:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"121433:69:19"},"returnParameters":{"id":19589,"nodeType":"ParameterList","parameters":[],"src":"121511:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19602,"nodeType":"FunctionDefinition","src":"121605:96:19","nodes":[],"documentation":{"id":19591,"nodeType":"StructuredDocumentation","src":"121518:82:19","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"121614:10:19","parameters":{"id":19600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19593,"mutability":"mutable","name":"callee","nameLocation":"121633:6:19","nodeType":"VariableDeclaration","scope":19602,"src":"121625:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19592,"name":"address","nodeType":"ElementaryTypeName","src":"121625:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19595,"mutability":"mutable","name":"msgValue","nameLocation":"121649:8:19","nodeType":"VariableDeclaration","scope":19602,"src":"121641:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19594,"name":"uint256","nodeType":"ElementaryTypeName","src":"121641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19597,"mutability":"mutable","name":"gas","nameLocation":"121666:3:19","nodeType":"VariableDeclaration","scope":19602,"src":"121659:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19596,"name":"uint64","nodeType":"ElementaryTypeName","src":"121659:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19599,"mutability":"mutable","name":"data","nameLocation":"121686:4:19","nodeType":"VariableDeclaration","scope":19602,"src":"121671:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19598,"name":"bytes","nodeType":"ElementaryTypeName","src":"121671:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"121624:67:19"},"returnParameters":{"id":19601,"nodeType":"ParameterList","parameters":[],"src":"121700:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19616,"nodeType":"FunctionDefinition","src":"121810:110:19","nodes":[],"documentation":{"id":19603,"nodeType":"StructuredDocumentation","src":"121707:98:19","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"121819:10:19","parameters":{"id":19614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19605,"mutability":"mutable","name":"callee","nameLocation":"121838:6:19","nodeType":"VariableDeclaration","scope":19616,"src":"121830:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19604,"name":"address","nodeType":"ElementaryTypeName","src":"121830:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19607,"mutability":"mutable","name":"msgValue","nameLocation":"121854:8:19","nodeType":"VariableDeclaration","scope":19616,"src":"121846:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19606,"name":"uint256","nodeType":"ElementaryTypeName","src":"121846:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19609,"mutability":"mutable","name":"gas","nameLocation":"121871:3:19","nodeType":"VariableDeclaration","scope":19616,"src":"121864:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19608,"name":"uint64","nodeType":"ElementaryTypeName","src":"121864:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19611,"mutability":"mutable","name":"data","nameLocation":"121891:4:19","nodeType":"VariableDeclaration","scope":19616,"src":"121876:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19610,"name":"bytes","nodeType":"ElementaryTypeName","src":"121876:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19613,"mutability":"mutable","name":"count","nameLocation":"121904:5:19","nodeType":"VariableDeclaration","scope":19616,"src":"121897:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19612,"name":"uint64","nodeType":"ElementaryTypeName","src":"121897:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"121829:81:19"},"returnParameters":{"id":19615,"nodeType":"ParameterList","parameters":[],"src":"121919:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19624,"nodeType":"FunctionDefinition","src":"122032:74:19","nodes":[],"documentation":{"id":19617,"nodeType":"StructuredDocumentation","src":"121926:101:19","text":"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode"},"functionSelector":"73cdce36","implemented":false,"kind":"function","modifiers":[],"name":"expectCreate","nameLocation":"122041:12:19","parameters":{"id":19622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19619,"mutability":"mutable","name":"bytecode","nameLocation":"122069:8:19","nodeType":"VariableDeclaration","scope":19624,"src":"122054:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19618,"name":"bytes","nodeType":"ElementaryTypeName","src":"122054:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19621,"mutability":"mutable","name":"deployer","nameLocation":"122087:8:19","nodeType":"VariableDeclaration","scope":19624,"src":"122079:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19620,"name":"address","nodeType":"ElementaryTypeName","src":"122079:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122053:43:19"},"returnParameters":{"id":19623,"nodeType":"ParameterList","parameters":[],"src":"122105:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19632,"nodeType":"FunctionDefinition","src":"122219:75:19","nodes":[],"documentation":{"id":19625,"nodeType":"StructuredDocumentation","src":"122112:102:19","text":"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode"},"functionSelector":"ea54a472","implemented":false,"kind":"function","modifiers":[],"name":"expectCreate2","nameLocation":"122228:13:19","parameters":{"id":19630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19627,"mutability":"mutable","name":"bytecode","nameLocation":"122257:8:19","nodeType":"VariableDeclaration","scope":19632,"src":"122242:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19626,"name":"bytes","nodeType":"ElementaryTypeName","src":"122242:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19629,"mutability":"mutable","name":"deployer","nameLocation":"122275:8:19","nodeType":"VariableDeclaration","scope":19632,"src":"122267:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19628,"name":"address","nodeType":"ElementaryTypeName","src":"122267:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122241:43:19"},"returnParameters":{"id":19631,"nodeType":"ParameterList","parameters":[],"src":"122293:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19646,"nodeType":"FunctionDefinition","src":"122653:134:19","nodes":[],"documentation":{"id":19633,"nodeType":"StructuredDocumentation","src":"122300:348:19","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"122662:19:19","parameters":{"id":19644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19635,"mutability":"mutable","name":"checkTopic0","nameLocation":"122687:11:19","nodeType":"VariableDeclaration","scope":19646,"src":"122682:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19634,"name":"bool","nodeType":"ElementaryTypeName","src":"122682:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19637,"mutability":"mutable","name":"checkTopic1","nameLocation":"122705:11:19","nodeType":"VariableDeclaration","scope":19646,"src":"122700:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19636,"name":"bool","nodeType":"ElementaryTypeName","src":"122700:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19639,"mutability":"mutable","name":"checkTopic2","nameLocation":"122723:11:19","nodeType":"VariableDeclaration","scope":19646,"src":"122718:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19638,"name":"bool","nodeType":"ElementaryTypeName","src":"122718:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19641,"mutability":"mutable","name":"checkTopic3","nameLocation":"122741:11:19","nodeType":"VariableDeclaration","scope":19646,"src":"122736:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19640,"name":"bool","nodeType":"ElementaryTypeName","src":"122736:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19643,"mutability":"mutable","name":"checkData","nameLocation":"122759:9:19","nodeType":"VariableDeclaration","scope":19646,"src":"122754:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19642,"name":"bool","nodeType":"ElementaryTypeName","src":"122754:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"122681:88:19"},"returnParameters":{"id":19645,"nodeType":"ParameterList","parameters":[],"src":"122786:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19662,"nodeType":"FunctionDefinition","src":"122890:197:19","nodes":[],"documentation":{"id":19647,"nodeType":"StructuredDocumentation","src":"122793:92:19","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"122899:19:19","parameters":{"id":19660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19649,"mutability":"mutable","name":"checkTopic0","nameLocation":"122933:11:19","nodeType":"VariableDeclaration","scope":19662,"src":"122928:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19648,"name":"bool","nodeType":"ElementaryTypeName","src":"122928:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19651,"mutability":"mutable","name":"checkTopic1","nameLocation":"122959:11:19","nodeType":"VariableDeclaration","scope":19662,"src":"122954:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19650,"name":"bool","nodeType":"ElementaryTypeName","src":"122954:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19653,"mutability":"mutable","name":"checkTopic2","nameLocation":"122985:11:19","nodeType":"VariableDeclaration","scope":19662,"src":"122980:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19652,"name":"bool","nodeType":"ElementaryTypeName","src":"122980:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19655,"mutability":"mutable","name":"checkTopic3","nameLocation":"123011:11:19","nodeType":"VariableDeclaration","scope":19662,"src":"123006:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19654,"name":"bool","nodeType":"ElementaryTypeName","src":"123006:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19657,"mutability":"mutable","name":"checkData","nameLocation":"123037:9:19","nodeType":"VariableDeclaration","scope":19662,"src":"123032:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19656,"name":"bool","nodeType":"ElementaryTypeName","src":"123032:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19659,"mutability":"mutable","name":"emitter","nameLocation":"123064:7:19","nodeType":"VariableDeclaration","scope":19662,"src":"123056:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19658,"name":"address","nodeType":"ElementaryTypeName","src":"123056:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122918:159:19"},"returnParameters":{"id":19661,"nodeType":"ParameterList","parameters":[],"src":"123086:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19666,"nodeType":"FunctionDefinition","src":"123377:40:19","nodes":[],"documentation":{"id":19663,"nodeType":"StructuredDocumentation","src":"123093:279:19","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"123386:19:19","parameters":{"id":19664,"nodeType":"ParameterList","parameters":[],"src":"123405:2:19"},"returnParameters":{"id":19665,"nodeType":"ParameterList","parameters":[],"src":"123416:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19672,"nodeType":"FunctionDefinition","src":"123520:55:19","nodes":[],"documentation":{"id":19667,"nodeType":"StructuredDocumentation","src":"123423:92:19","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"123529:19:19","parameters":{"id":19670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19669,"mutability":"mutable","name":"emitter","nameLocation":"123557:7:19","nodeType":"VariableDeclaration","scope":19672,"src":"123549:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19668,"name":"address","nodeType":"ElementaryTypeName","src":"123549:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"123548:17:19"},"returnParameters":{"id":19671,"nodeType":"ParameterList","parameters":[],"src":"123574:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19684,"nodeType":"FunctionDefinition","src":"123914:99:19","nodes":[],"documentation":{"id":19673,"nodeType":"StructuredDocumentation","src":"123581:328:19","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"123923:10:19","parameters":{"id":19682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19675,"mutability":"mutable","name":"checkTopic1","nameLocation":"123939:11:19","nodeType":"VariableDeclaration","scope":19684,"src":"123934:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19674,"name":"bool","nodeType":"ElementaryTypeName","src":"123934:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19677,"mutability":"mutable","name":"checkTopic2","nameLocation":"123957:11:19","nodeType":"VariableDeclaration","scope":19684,"src":"123952:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19676,"name":"bool","nodeType":"ElementaryTypeName","src":"123952:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19679,"mutability":"mutable","name":"checkTopic3","nameLocation":"123975:11:19","nodeType":"VariableDeclaration","scope":19684,"src":"123970:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19678,"name":"bool","nodeType":"ElementaryTypeName","src":"123970:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19681,"mutability":"mutable","name":"checkData","nameLocation":"123993:9:19","nodeType":"VariableDeclaration","scope":19684,"src":"123988:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19680,"name":"bool","nodeType":"ElementaryTypeName","src":"123988:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"123933:70:19"},"returnParameters":{"id":19683,"nodeType":"ParameterList","parameters":[],"src":"124012:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19698,"nodeType":"FunctionDefinition","src":"124116:124:19","nodes":[],"documentation":{"id":19685,"nodeType":"StructuredDocumentation","src":"124019:92:19","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"124125:10:19","parameters":{"id":19696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19687,"mutability":"mutable","name":"checkTopic1","nameLocation":"124141:11:19","nodeType":"VariableDeclaration","scope":19698,"src":"124136:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19686,"name":"bool","nodeType":"ElementaryTypeName","src":"124136:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19689,"mutability":"mutable","name":"checkTopic2","nameLocation":"124159:11:19","nodeType":"VariableDeclaration","scope":19698,"src":"124154:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19688,"name":"bool","nodeType":"ElementaryTypeName","src":"124154:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19691,"mutability":"mutable","name":"checkTopic3","nameLocation":"124177:11:19","nodeType":"VariableDeclaration","scope":19698,"src":"124172:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19690,"name":"bool","nodeType":"ElementaryTypeName","src":"124172:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19693,"mutability":"mutable","name":"checkData","nameLocation":"124195:9:19","nodeType":"VariableDeclaration","scope":19698,"src":"124190:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19692,"name":"bool","nodeType":"ElementaryTypeName","src":"124190:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19695,"mutability":"mutable","name":"emitter","nameLocation":"124214:7:19","nodeType":"VariableDeclaration","scope":19698,"src":"124206:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19694,"name":"address","nodeType":"ElementaryTypeName","src":"124206:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"124135:87:19"},"returnParameters":{"id":19697,"nodeType":"ParameterList","parameters":[],"src":"124239:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19702,"nodeType":"FunctionDefinition","src":"124510:31:19","nodes":[],"documentation":{"id":19699,"nodeType":"StructuredDocumentation","src":"124246:259:19","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"124519:10:19","parameters":{"id":19700,"nodeType":"ParameterList","parameters":[],"src":"124529:2:19"},"returnParameters":{"id":19701,"nodeType":"ParameterList","parameters":[],"src":"124540:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19708,"nodeType":"FunctionDefinition","src":"124644:46:19","nodes":[],"documentation":{"id":19703,"nodeType":"StructuredDocumentation","src":"124547:92:19","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"124653:10:19","parameters":{"id":19706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19705,"mutability":"mutable","name":"emitter","nameLocation":"124672:7:19","nodeType":"VariableDeclaration","scope":19708,"src":"124664:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19704,"name":"address","nodeType":"ElementaryTypeName","src":"124664:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"124663:17:19"},"returnParameters":{"id":19707,"nodeType":"ParameterList","parameters":[],"src":"124689:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19722,"nodeType":"FunctionDefinition","src":"124760:113:19","nodes":[],"documentation":{"id":19709,"nodeType":"StructuredDocumentation","src":"124696:59:19","text":"Expect a given number of logs with the provided topics."},"functionSelector":"5e1d1c33","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"124769:10:19","parameters":{"id":19720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19711,"mutability":"mutable","name":"checkTopic1","nameLocation":"124785:11:19","nodeType":"VariableDeclaration","scope":19722,"src":"124780:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19710,"name":"bool","nodeType":"ElementaryTypeName","src":"124780:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19713,"mutability":"mutable","name":"checkTopic2","nameLocation":"124803:11:19","nodeType":"VariableDeclaration","scope":19722,"src":"124798:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19712,"name":"bool","nodeType":"ElementaryTypeName","src":"124798:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19715,"mutability":"mutable","name":"checkTopic3","nameLocation":"124821:11:19","nodeType":"VariableDeclaration","scope":19722,"src":"124816:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19714,"name":"bool","nodeType":"ElementaryTypeName","src":"124816:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19717,"mutability":"mutable","name":"checkData","nameLocation":"124839:9:19","nodeType":"VariableDeclaration","scope":19722,"src":"124834:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19716,"name":"bool","nodeType":"ElementaryTypeName","src":"124834:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19719,"mutability":"mutable","name":"count","nameLocation":"124857:5:19","nodeType":"VariableDeclaration","scope":19722,"src":"124850:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19718,"name":"uint64","nodeType":"ElementaryTypeName","src":"124850:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"124779:84:19"},"returnParameters":{"id":19721,"nodeType":"ParameterList","parameters":[],"src":"124872:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19738,"nodeType":"FunctionDefinition","src":"124967:184:19","nodes":[],"documentation":{"id":19723,"nodeType":"StructuredDocumentation","src":"124879:83:19","text":"Expect a given number of logs from a specific emitter with the provided topics."},"functionSelector":"c339d02c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"124976:10:19","parameters":{"id":19736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19725,"mutability":"mutable","name":"checkTopic1","nameLocation":"125001:11:19","nodeType":"VariableDeclaration","scope":19738,"src":"124996:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19724,"name":"bool","nodeType":"ElementaryTypeName","src":"124996:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19727,"mutability":"mutable","name":"checkTopic2","nameLocation":"125027:11:19","nodeType":"VariableDeclaration","scope":19738,"src":"125022:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19726,"name":"bool","nodeType":"ElementaryTypeName","src":"125022:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19729,"mutability":"mutable","name":"checkTopic3","nameLocation":"125053:11:19","nodeType":"VariableDeclaration","scope":19738,"src":"125048:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19728,"name":"bool","nodeType":"ElementaryTypeName","src":"125048:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19731,"mutability":"mutable","name":"checkData","nameLocation":"125079:9:19","nodeType":"VariableDeclaration","scope":19738,"src":"125074:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19730,"name":"bool","nodeType":"ElementaryTypeName","src":"125074:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19733,"mutability":"mutable","name":"emitter","nameLocation":"125106:7:19","nodeType":"VariableDeclaration","scope":19738,"src":"125098:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19732,"name":"address","nodeType":"ElementaryTypeName","src":"125098:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19735,"mutability":"mutable","name":"count","nameLocation":"125130:5:19","nodeType":"VariableDeclaration","scope":19738,"src":"125123:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19734,"name":"uint64","nodeType":"ElementaryTypeName","src":"125123:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"124986:155:19"},"returnParameters":{"id":19737,"nodeType":"ParameterList","parameters":[],"src":"125150:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19744,"nodeType":"FunctionDefinition","src":"125235:43:19","nodes":[],"documentation":{"id":19739,"nodeType":"StructuredDocumentation","src":"125157:73:19","text":"Expect a given number of logs with all topic and data checks enabled."},"functionSelector":"4c74a335","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"125244:10:19","parameters":{"id":19742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19741,"mutability":"mutable","name":"count","nameLocation":"125262:5:19","nodeType":"VariableDeclaration","scope":19744,"src":"125255:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19740,"name":"uint64","nodeType":"ElementaryTypeName","src":"125255:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"125254:14:19"},"returnParameters":{"id":19743,"nodeType":"ParameterList","parameters":[],"src":"125277:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19752,"nodeType":"FunctionDefinition","src":"125386:60:19","nodes":[],"documentation":{"id":19745,"nodeType":"StructuredDocumentation","src":"125284:97:19","text":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"functionSelector":"b43aece3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"125395:10:19","parameters":{"id":19750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19747,"mutability":"mutable","name":"emitter","nameLocation":"125414:7:19","nodeType":"VariableDeclaration","scope":19752,"src":"125406:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19746,"name":"address","nodeType":"ElementaryTypeName","src":"125406:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19749,"mutability":"mutable","name":"count","nameLocation":"125430:5:19","nodeType":"VariableDeclaration","scope":19752,"src":"125423:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19748,"name":"uint64","nodeType":"ElementaryTypeName","src":"125423:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"125405:31:19"},"returnParameters":{"id":19751,"nodeType":"ParameterList","parameters":[],"src":"125445:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19758,"nodeType":"FunctionDefinition","src":"125524:57:19","nodes":[],"documentation":{"id":19753,"nodeType":"StructuredDocumentation","src":"125452:67:19","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"125533:19:19","parameters":{"id":19756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19755,"mutability":"mutable","name":"revertData","nameLocation":"125560:10:19","nodeType":"VariableDeclaration","scope":19758,"src":"125553:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19754,"name":"bytes4","nodeType":"ElementaryTypeName","src":"125553:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"125552:19:19"},"returnParameters":{"id":19757,"nodeType":"ParameterList","parameters":[],"src":"125580:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19766,"nodeType":"FunctionDefinition","src":"125680:75:19","nodes":[],"documentation":{"id":19759,"nodeType":"StructuredDocumentation","src":"125587:88:19","text":"Expects an error on next call to reverter address, that starts with the revert data."},"functionSelector":"51aa008a","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"125689:19:19","parameters":{"id":19764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19761,"mutability":"mutable","name":"revertData","nameLocation":"125716:10:19","nodeType":"VariableDeclaration","scope":19766,"src":"125709:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19760,"name":"bytes4","nodeType":"ElementaryTypeName","src":"125709:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19763,"mutability":"mutable","name":"reverter","nameLocation":"125736:8:19","nodeType":"VariableDeclaration","scope":19766,"src":"125728:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19762,"name":"address","nodeType":"ElementaryTypeName","src":"125728:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"125708:37:19"},"returnParameters":{"id":19765,"nodeType":"ParameterList","parameters":[],"src":"125754:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19770,"nodeType":"FunctionDefinition","src":"125821:33:19","nodes":[],"documentation":{"id":19767,"nodeType":"StructuredDocumentation","src":"125761:55:19","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"125830:12:19","parameters":{"id":19768,"nodeType":"ParameterList","parameters":[],"src":"125842:2:19"},"returnParameters":{"id":19769,"nodeType":"ParameterList","parameters":[],"src":"125853:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19776,"nodeType":"FunctionDefinition","src":"125936:50:19","nodes":[],"documentation":{"id":19771,"nodeType":"StructuredDocumentation","src":"125860:71:19","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"125945:12:19","parameters":{"id":19774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19773,"mutability":"mutable","name":"revertData","nameLocation":"125965:10:19","nodeType":"VariableDeclaration","scope":19776,"src":"125958:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19772,"name":"bytes4","nodeType":"ElementaryTypeName","src":"125958:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"125957:19:19"},"returnParameters":{"id":19775,"nodeType":"ParameterList","parameters":[],"src":"125985:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19786,"nodeType":"FunctionDefinition","src":"126114:82:19","nodes":[],"documentation":{"id":19777,"nodeType":"StructuredDocumentation","src":"125992:117:19","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"functionSelector":"b0762d73","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"126123:12:19","parameters":{"id":19784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19779,"mutability":"mutable","name":"revertData","nameLocation":"126143:10:19","nodeType":"VariableDeclaration","scope":19786,"src":"126136:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19778,"name":"bytes4","nodeType":"ElementaryTypeName","src":"126136:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19781,"mutability":"mutable","name":"reverter","nameLocation":"126163:8:19","nodeType":"VariableDeclaration","scope":19786,"src":"126155:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19780,"name":"address","nodeType":"ElementaryTypeName","src":"126155:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19783,"mutability":"mutable","name":"count","nameLocation":"126180:5:19","nodeType":"VariableDeclaration","scope":19786,"src":"126173:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19782,"name":"uint64","nodeType":"ElementaryTypeName","src":"126173:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"126135:51:19"},"returnParameters":{"id":19785,"nodeType":"ParameterList","parameters":[],"src":"126195:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19796,"nodeType":"FunctionDefinition","src":"126332:90:19","nodes":[],"documentation":{"id":19787,"nodeType":"StructuredDocumentation","src":"126202:125:19","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"functionSelector":"d345fb1f","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"126341:12:19","parameters":{"id":19794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19789,"mutability":"mutable","name":"revertData","nameLocation":"126369:10:19","nodeType":"VariableDeclaration","scope":19796,"src":"126354:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19788,"name":"bytes","nodeType":"ElementaryTypeName","src":"126354:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19791,"mutability":"mutable","name":"reverter","nameLocation":"126389:8:19","nodeType":"VariableDeclaration","scope":19796,"src":"126381:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19790,"name":"address","nodeType":"ElementaryTypeName","src":"126381:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19793,"mutability":"mutable","name":"count","nameLocation":"126406:5:19","nodeType":"VariableDeclaration","scope":19796,"src":"126399:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19792,"name":"uint64","nodeType":"ElementaryTypeName","src":"126399:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"126353:59:19"},"returnParameters":{"id":19795,"nodeType":"ParameterList","parameters":[],"src":"126421:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19802,"nodeType":"FunctionDefinition","src":"126504:58:19","nodes":[],"documentation":{"id":19797,"nodeType":"StructuredDocumentation","src":"126428:71:19","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"126513:12:19","parameters":{"id":19800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19799,"mutability":"mutable","name":"revertData","nameLocation":"126541:10:19","nodeType":"VariableDeclaration","scope":19802,"src":"126526:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19798,"name":"bytes","nodeType":"ElementaryTypeName","src":"126526:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"126525:27:19"},"returnParameters":{"id":19801,"nodeType":"ParameterList","parameters":[],"src":"126561:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19808,"nodeType":"FunctionDefinition","src":"126648:49:19","nodes":[],"documentation":{"id":19803,"nodeType":"StructuredDocumentation","src":"126568:75:19","text":"Expects an error with any revert data on next call to reverter address."},"functionSelector":"d814f38a","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"126657:12:19","parameters":{"id":19806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19805,"mutability":"mutable","name":"reverter","nameLocation":"126678:8:19","nodeType":"VariableDeclaration","scope":19808,"src":"126670:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19804,"name":"address","nodeType":"ElementaryTypeName","src":"126670:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"126669:18:19"},"returnParameters":{"id":19807,"nodeType":"ParameterList","parameters":[],"src":"126696:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19816,"nodeType":"FunctionDefinition","src":"126786:68:19","nodes":[],"documentation":{"id":19809,"nodeType":"StructuredDocumentation","src":"126703:78:19","text":"Expects an error from reverter address on next call, with any revert data."},"functionSelector":"260bc5de","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"126795:12:19","parameters":{"id":19814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19811,"mutability":"mutable","name":"revertData","nameLocation":"126815:10:19","nodeType":"VariableDeclaration","scope":19816,"src":"126808:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19810,"name":"bytes4","nodeType":"ElementaryTypeName","src":"126808:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19813,"mutability":"mutable","name":"reverter","nameLocation":"126835:8:19","nodeType":"VariableDeclaration","scope":19816,"src":"126827:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19812,"name":"address","nodeType":"ElementaryTypeName","src":"126827:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"126807:37:19"},"returnParameters":{"id":19815,"nodeType":"ParameterList","parameters":[],"src":"126853:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19824,"nodeType":"FunctionDefinition","src":"126959:76:19","nodes":[],"documentation":{"id":19817,"nodeType":"StructuredDocumentation","src":"126860:94:19","text":"Expects an error from reverter address on next call, that exactly matches the revert data."},"functionSelector":"61ebcf12","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"126968:12:19","parameters":{"id":19822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19819,"mutability":"mutable","name":"revertData","nameLocation":"126996:10:19","nodeType":"VariableDeclaration","scope":19824,"src":"126981:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19818,"name":"bytes","nodeType":"ElementaryTypeName","src":"126981:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19821,"mutability":"mutable","name":"reverter","nameLocation":"127016:8:19","nodeType":"VariableDeclaration","scope":19824,"src":"127008:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19820,"name":"address","nodeType":"ElementaryTypeName","src":"127008:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"126980:45:19"},"returnParameters":{"id":19823,"nodeType":"ParameterList","parameters":[],"src":"127034:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19830,"nodeType":"FunctionDefinition","src":"127143:45:19","nodes":[],"documentation":{"id":19825,"nodeType":"StructuredDocumentation","src":"127041:97:19","text":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"functionSelector":"4ee38244","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"127152:12:19","parameters":{"id":19828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19827,"mutability":"mutable","name":"count","nameLocation":"127172:5:19","nodeType":"VariableDeclaration","scope":19830,"src":"127165:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19826,"name":"uint64","nodeType":"ElementaryTypeName","src":"127165:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127164:14:19"},"returnParameters":{"id":19829,"nodeType":"ParameterList","parameters":[],"src":"127187:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19838,"nodeType":"FunctionDefinition","src":"127290:64:19","nodes":[],"documentation":{"id":19831,"nodeType":"StructuredDocumentation","src":"127194:91:19","text":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"functionSelector":"e45ca72d","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"127299:12:19","parameters":{"id":19836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19833,"mutability":"mutable","name":"revertData","nameLocation":"127319:10:19","nodeType":"VariableDeclaration","scope":19838,"src":"127312:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19832,"name":"bytes4","nodeType":"ElementaryTypeName","src":"127312:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19835,"mutability":"mutable","name":"count","nameLocation":"127338:5:19","nodeType":"VariableDeclaration","scope":19838,"src":"127331:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19834,"name":"uint64","nodeType":"ElementaryTypeName","src":"127331:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127311:33:19"},"returnParameters":{"id":19837,"nodeType":"ParameterList","parameters":[],"src":"127353:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19846,"nodeType":"FunctionDefinition","src":"127464:72:19","nodes":[],"documentation":{"id":19839,"nodeType":"StructuredDocumentation","src":"127360:99:19","text":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"functionSelector":"4994c273","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"127473:12:19","parameters":{"id":19844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19841,"mutability":"mutable","name":"revertData","nameLocation":"127501:10:19","nodeType":"VariableDeclaration","scope":19846,"src":"127486:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19840,"name":"bytes","nodeType":"ElementaryTypeName","src":"127486:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19843,"mutability":"mutable","name":"count","nameLocation":"127520:5:19","nodeType":"VariableDeclaration","scope":19846,"src":"127513:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19842,"name":"uint64","nodeType":"ElementaryTypeName","src":"127513:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127485:41:19"},"returnParameters":{"id":19845,"nodeType":"ParameterList","parameters":[],"src":"127535:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19854,"nodeType":"FunctionDefinition","src":"127637:63:19","nodes":[],"documentation":{"id":19847,"nodeType":"StructuredDocumentation","src":"127542:90:19","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"functionSelector":"1ff5f952","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"127646:12:19","parameters":{"id":19852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19849,"mutability":"mutable","name":"reverter","nameLocation":"127667:8:19","nodeType":"VariableDeclaration","scope":19854,"src":"127659:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19848,"name":"address","nodeType":"ElementaryTypeName","src":"127659:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19851,"mutability":"mutable","name":"count","nameLocation":"127684:5:19","nodeType":"VariableDeclaration","scope":19854,"src":"127677:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19850,"name":"uint64","nodeType":"ElementaryTypeName","src":"127677:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127658:32:19"},"returnParameters":{"id":19853,"nodeType":"ParameterList","parameters":[],"src":"127699:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19862,"nodeType":"FunctionDefinition","src":"127929:59:19","nodes":[],"documentation":{"id":19855,"nodeType":"StructuredDocumentation","src":"127706:218:19","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"127938:16:19","parameters":{"id":19860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19857,"mutability":"mutable","name":"min","nameLocation":"127962:3:19","nodeType":"VariableDeclaration","scope":19862,"src":"127955:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19856,"name":"uint64","nodeType":"ElementaryTypeName","src":"127955:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19859,"mutability":"mutable","name":"max","nameLocation":"127974:3:19","nodeType":"VariableDeclaration","scope":19862,"src":"127967:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19858,"name":"uint64","nodeType":"ElementaryTypeName","src":"127967:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127954:24:19"},"returnParameters":{"id":19861,"nodeType":"ParameterList","parameters":[],"src":"127987:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19870,"nodeType":"FunctionDefinition","src":"128230:63:19","nodes":[],"documentation":{"id":19863,"nodeType":"StructuredDocumentation","src":"127994:231:19","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"128239:20:19","parameters":{"id":19868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19865,"mutability":"mutable","name":"min","nameLocation":"128267:3:19","nodeType":"VariableDeclaration","scope":19870,"src":"128260:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19864,"name":"uint64","nodeType":"ElementaryTypeName","src":"128260:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19867,"mutability":"mutable","name":"max","nameLocation":"128279:3:19","nodeType":"VariableDeclaration","scope":19870,"src":"128272:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19866,"name":"uint64","nodeType":"ElementaryTypeName","src":"128272:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"128259:24:19"},"returnParameters":{"id":19869,"nodeType":"ParameterList","parameters":[],"src":"128292:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19876,"nodeType":"FunctionDefinition","src":"128375:38:19","nodes":[],"documentation":{"id":19871,"nodeType":"StructuredDocumentation","src":"128299:71:19","text":"Marks a test as skipped. Must be called at the top level of a test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"128384:4:19","parameters":{"id":19874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19873,"mutability":"mutable","name":"skipTest","nameLocation":"128394:8:19","nodeType":"VariableDeclaration","scope":19876,"src":"128389:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19872,"name":"bool","nodeType":"ElementaryTypeName","src":"128389:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"128388:15:19"},"returnParameters":{"id":19875,"nodeType":"ParameterList","parameters":[],"src":"128412:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19884,"nodeType":"FunctionDefinition","src":"128509:62:19","nodes":[],"documentation":{"id":19877,"nodeType":"StructuredDocumentation","src":"128419:85:19","text":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"functionSelector":"c42a80a7","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"128518:4:19","parameters":{"id":19882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19879,"mutability":"mutable","name":"skipTest","nameLocation":"128528:8:19","nodeType":"VariableDeclaration","scope":19884,"src":"128523:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19878,"name":"bool","nodeType":"ElementaryTypeName","src":"128523:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19881,"mutability":"mutable","name":"reason","nameLocation":"128554:6:19","nodeType":"VariableDeclaration","scope":19884,"src":"128538:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19880,"name":"string","nodeType":"ElementaryTypeName","src":"128538:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"128522:39:19"},"returnParameters":{"id":19883,"nodeType":"ParameterList","parameters":[],"src":"128570:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19888,"nodeType":"FunctionDefinition","src":"128646:41:19","nodes":[],"documentation":{"id":19885,"nodeType":"StructuredDocumentation","src":"128577:64:19","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"128655:20:19","parameters":{"id":19886,"nodeType":"ParameterList","parameters":[],"src":"128675:2:19"},"returnParameters":{"id":19887,"nodeType":"ParameterList","parameters":[],"src":"128686:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19892,"nodeType":"FunctionDefinition","src":"129175:38:19","nodes":[],"documentation":{"id":19889,"nodeType":"StructuredDocumentation","src":"128729:441:19","text":"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer.\n This allows type-safe access to the initcode payload that would be used for contract creation.\n Example usage:\n vm.interceptInitcode();\n bytes memory initcode;\n try new MyContract(param1, param2) { assert(false); }\n catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }"},"functionSelector":"838653c7","implemented":false,"kind":"function","modifiers":[],"name":"interceptInitcode","nameLocation":"129184:17:19","parameters":{"id":19890,"nodeType":"ParameterList","parameters":[],"src":"129201:2:19"},"returnParameters":{"id":19891,"nodeType":"ParameterList","parameters":[],"src":"129212:0:19"},"scope":19893,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":18824,"name":"VmSafe","nameLocations":["102644:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":18822,"src":"102644:6:19"},"id":18825,"nodeType":"InheritanceSpecifier","src":"102644:6:19"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":18823,"nodeType":"StructuredDocumentation","src":"102457:171:19","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[19893,18822],"name":"Vm","nameLocation":"102638:2:19","scope":19894,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":19}